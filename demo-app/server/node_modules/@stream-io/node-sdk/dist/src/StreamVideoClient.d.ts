import { StreamCall } from './StreamCall';
import { StreamClient } from './StreamClient';
import { CheckExternalStorageRequest, DeleteCallTypeRequest, DeleteExternalStorageRequest, GetCallTypeRequest, VideoCreateCallTypeRequest, VideoCreateExternalStorageRequest, VideoQueryCallStatsRequest, VideoQueryCallsRequest, VideoUpdateCallTypeRequest, VideoUpdateExternalStorageRequest } from './gen/video';
export declare class StreamVideoClient {
    private readonly streamClient;
    private readonly apiClient;
    constructor(streamClient: StreamClient);
    call: (type: string, id: string) => StreamCall;
    queryCalls: (request?: VideoQueryCallsRequest) => Promise<import("./gen/video").VideoQueryCallsResponse>;
    queryCallStatistics: (videoQueryCallStatsRequest?: VideoQueryCallStatsRequest) => Promise<import("./gen/video").VideoQueryCallStatsResponse>;
    createCallType: (videoCreateCallTypeRequest: VideoCreateCallTypeRequest) => Promise<import("./gen/video").VideoCreateCallTypeResponse>;
    deleteCallType: (request: DeleteCallTypeRequest) => Promise<import("./gen/video").VideoResponse>;
    getCallType: (request: GetCallTypeRequest) => Promise<import("./gen/video").VideoGetCallTypeResponse>;
    listCallTypes: () => Promise<import("./gen/video").VideoListCallTypeResponse>;
    updateCallType: (name: string, videoUpdateCallTypeRequest: VideoUpdateCallTypeRequest) => Promise<import("./gen/video").VideoUpdateCallTypeResponse>;
    listExternalStorages: () => Promise<import("./gen/video").VideoListExternalStorageResponse>;
    createExternalStorage: (videoCreateExternalStorageRequest: VideoCreateExternalStorageRequest) => Promise<import("./gen/video").VideoCreateExternalStorageResponse>;
    deleteExternalStorage: (request: DeleteExternalStorageRequest) => Promise<import("./gen/video").VideoDeleteExternalStorageResponse>;
    updateExternalStorage: (name: string, videoUpdateExternalStorageRequest: VideoUpdateExternalStorageRequest) => Promise<import("./gen/video").VideoUpdateExternalStorageResponse>;
    checkExternalStorage: (request: CheckExternalStorageRequest) => Promise<import("./gen/video").VideoCheckExternalStorageResponse>;
}
