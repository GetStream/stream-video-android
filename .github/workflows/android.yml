name: Android CI

on:
  push:
    branches:
      - develop
      - main

  pull_request:
    branches:
      - '**'

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_CACHE_AWS_REGION: ${{ secrets.BUILD_CACHE_AWS_REGION }}
  BUILD_CACHE_AWS_BUCKET: ${{ secrets.BUILD_CACHE_AWS_BUCKET }}
  BUILD_CACHE_AWS_ACCESS_KEY_ID: ${{ secrets.BUILD_CACHE_AWS_ACCESS_KEY_ID }}
  BUILD_CACHE_AWS_SECRET_KEY: ${{ secrets.BUILD_CACHE_AWS_SECRET_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_PR_NUM: ${{ github.event.pull_request.number }}

jobs:
  lint:
    name: Spotless check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - uses: GetStream/android-ci-actions/actions/setup-java@main
      - name: spotless
        run: ./gradlew spotlessCheck --scan

  api_check:
    name: API check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - uses: GetStream/android-ci-actions/actions/setup-java@main
      - name: API check
        run: ./gradlew apiCheck --scan

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: GetStream/android-ci-actions/actions/setup-java@main

      - uses: GetStream/android-ci-actions/actions/gradle-cache@main

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          ./gradlew --scan --stacktrace \
              assembleDebug

  unitTest:
    name: Unit Tests
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history for sonar analysis

      - uses: GetStream/android-ci-actions/actions/setup-java@main

      - uses: GetStream/android-ci-actions/actions/gradle-cache@main

      - name: Run unit tests
        run: ./gradlew :testCoverage --scan --stacktrace

      - name: Upload tests results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: testResults
          path: ./**/build/reports/tests/**

      - uses: GetStream/android-ci-actions/actions/setup-ruby@main

      - name: Sonar
        run: bundle exec fastlane run_sonar_analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
