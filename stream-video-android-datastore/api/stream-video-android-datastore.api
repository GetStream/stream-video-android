public final class io/getstream/video/android/datastore/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class io/getstream/video/android/datastore/delegate/StreamUserDataStore : androidx/datastore/core/DataStore {
	public static final field Companion Lio/getstream/video/android/datastore/delegate/StreamUserDataStore$Companion;
	public fun <init> (Landroidx/datastore/core/DataStore;Lkotlinx/coroutines/CoroutineScope;)V
	public final fun cancelJobs ()V
	public final fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getApiKey ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getData ()Lkotlinx/coroutines/flow/Flow;
	public final fun getUser ()Lkotlinx/coroutines/flow/StateFlow;
	public final fun getUserDevices ()Lkotlinx/coroutines/flow/StateFlow;
	public final fun getUserToken ()Lkotlinx/coroutines/flow/StateFlow;
	public final fun updateApiKey (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun updateData (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun updateUser (Lio/getstream/video/android/model/User;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun updateUserDevices (Lio/getstream/video/android/model/UserDevices;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun updateUserPreferences (Lio/getstream/video/android/datastore/model/StreamUserPreferences;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun updateUserToken (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/video/android/datastore/delegate/StreamUserDataStore$Companion {
	public final fun install (Landroid/content/Context;ZLkotlinx/coroutines/CoroutineScope;)Lio/getstream/video/android/datastore/delegate/StreamUserDataStore;
	public static synthetic fun install$default (Lio/getstream/video/android/datastore/delegate/StreamUserDataStore$Companion;Landroid/content/Context;ZLkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lio/getstream/video/android/datastore/delegate/StreamUserDataStore;
	public final fun instance ()Lio/getstream/video/android/datastore/delegate/StreamUserDataStore;
	public final fun isInstalled ()Z
	public final fun lazyInstance ()Lkotlin/Lazy;
	public final fun unInstall ()V
}

public final class io/getstream/video/android/datastore/flow/StateFlowKt {
	public static final synthetic fun asStateFlow (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun asStateFlow$default (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
}

public final class io/getstream/video/android/datastore/model/StreamUserPreferences {
	public static final field Companion Lio/getstream/video/android/datastore/model/StreamUserPreferences$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILio/getstream/video/android/model/User;Ljava/lang/String;Ljava/lang/String;Lio/getstream/video/android/model/UserDevices;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lio/getstream/video/android/model/User;Ljava/lang/String;Ljava/lang/String;Lio/getstream/video/android/model/UserDevices;)V
	public synthetic fun <init> (Lio/getstream/video/android/model/User;Ljava/lang/String;Ljava/lang/String;Lio/getstream/video/android/model/UserDevices;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/getstream/video/android/model/User;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lio/getstream/video/android/model/UserDevices;
	public final fun copy (Lio/getstream/video/android/model/User;Ljava/lang/String;Ljava/lang/String;Lio/getstream/video/android/model/UserDevices;)Lio/getstream/video/android/datastore/model/StreamUserPreferences;
	public static synthetic fun copy$default (Lio/getstream/video/android/datastore/model/StreamUserPreferences;Lio/getstream/video/android/model/User;Ljava/lang/String;Ljava/lang/String;Lio/getstream/video/android/model/UserDevices;ILjava/lang/Object;)Lio/getstream/video/android/datastore/model/StreamUserPreferences;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApiKey ()Ljava/lang/String;
	public final fun getUser ()Lio/getstream/video/android/model/User;
	public final fun getUserDevices ()Lio/getstream/video/android/model/UserDevices;
	public final fun getUserToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Lio/getstream/video/android/datastore/model/StreamUserPreferences;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class io/getstream/video/android/datastore/model/StreamUserPreferences$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lio/getstream/video/android/datastore/model/StreamUserPreferences$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lio/getstream/video/android/datastore/model/StreamUserPreferences;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lio/getstream/video/android/datastore/model/StreamUserPreferences;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class io/getstream/video/android/datastore/model/StreamUserPreferences$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

