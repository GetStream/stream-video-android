// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: sfu_signal_rpc/signal.proto

package sfu_signal_rpc

import (
	sfu_models "github.com/GetStream/video-sfu/protobuf/sfu_models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateVideoQualityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamQualities []*sfu_models.StreamQuality `protobuf:"bytes,1,rep,name=stream_qualities,json=streamQualities,proto3" json:"stream_qualities,omitempty"`
	SessionId       string                      `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UpdateVideoQualityRequest) Reset() {
	*x = UpdateVideoQualityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVideoQualityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoQualityRequest) ProtoMessage() {}

func (x *UpdateVideoQualityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoQualityRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoQualityRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateVideoQualityRequest) GetStreamQualities() []*sfu_models.StreamQuality {
	if x != nil {
		return x.StreamQualities
	}
	return nil
}

func (x *UpdateVideoQualityRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type UpdateVideoQualityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateVideoQualityResponse) Reset() {
	*x = UpdateVideoQualityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVideoQualityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoQualityResponse) ProtoMessage() {}

func (x *UpdateVideoQualityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoQualityResponse.ProtoReflect.Descriptor instead.
func (*UpdateVideoQualityResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{1}
}

type UpdateMuteStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are assignable to Mute:
	//	*UpdateMuteStateRequest_AudioMuteChanged
	//	*UpdateMuteStateRequest_VideoMuteChanged
	Mute isUpdateMuteStateRequest_Mute `protobuf_oneof:"mute"`
}

func (x *UpdateMuteStateRequest) Reset() {
	*x = UpdateMuteStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMuteStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMuteStateRequest) ProtoMessage() {}

func (x *UpdateMuteStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMuteStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateMuteStateRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMuteStateRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (m *UpdateMuteStateRequest) GetMute() isUpdateMuteStateRequest_Mute {
	if m != nil {
		return m.Mute
	}
	return nil
}

func (x *UpdateMuteStateRequest) GetAudioMuteChanged() *AudioMuteChanged {
	if x, ok := x.GetMute().(*UpdateMuteStateRequest_AudioMuteChanged); ok {
		return x.AudioMuteChanged
	}
	return nil
}

func (x *UpdateMuteStateRequest) GetVideoMuteChanged() *VideoMuteChanged {
	if x, ok := x.GetMute().(*UpdateMuteStateRequest_VideoMuteChanged); ok {
		return x.VideoMuteChanged
	}
	return nil
}

type isUpdateMuteStateRequest_Mute interface {
	isUpdateMuteStateRequest_Mute()
}

type UpdateMuteStateRequest_AudioMuteChanged struct {
	AudioMuteChanged *AudioMuteChanged `protobuf:"bytes,2,opt,name=audio_mute_changed,json=audioMuteChanged,proto3,oneof"`
}

type UpdateMuteStateRequest_VideoMuteChanged struct {
	VideoMuteChanged *VideoMuteChanged `protobuf:"bytes,3,opt,name=video_mute_changed,json=videoMuteChanged,proto3,oneof"`
}

func (*UpdateMuteStateRequest_AudioMuteChanged) isUpdateMuteStateRequest_Mute() {}

func (*UpdateMuteStateRequest_VideoMuteChanged) isUpdateMuteStateRequest_Mute() {}

type UpdateMuteStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMuteStateResponse) Reset() {
	*x = UpdateMuteStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMuteStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMuteStateResponse) ProtoMessage() {}

func (x *UpdateMuteStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMuteStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateMuteStateResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{3}
}

type AudioMuteChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muted bool `protobuf:"varint,1,opt,name=muted,proto3" json:"muted,omitempty"`
}

func (x *AudioMuteChanged) Reset() {
	*x = AudioMuteChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMuteChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMuteChanged) ProtoMessage() {}

func (x *AudioMuteChanged) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMuteChanged.ProtoReflect.Descriptor instead.
func (*AudioMuteChanged) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{4}
}

func (x *AudioMuteChanged) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type VideoMuteChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muted bool `protobuf:"varint,2,opt,name=muted,proto3" json:"muted,omitempty"`
}

func (x *VideoMuteChanged) Reset() {
	*x = VideoMuteChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMuteChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMuteChanged) ProtoMessage() {}

func (x *VideoMuteChanged) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMuteChanged.ProtoReflect.Descriptor instead.
func (*VideoMuteChanged) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{5}
}

func (x *VideoMuteChanged) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type UpdateSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// maps stream user_ids to its size
	Subscriptions map[string]*sfu_models.VideoDimension `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionId     string                                `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UpdateSubscriptionsRequest) Reset() {
	*x = UpdateSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionsRequest) ProtoMessage() {}

func (x *UpdateSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSubscriptionsRequest) GetSubscriptions() map[string]*sfu_models.VideoDimension {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *UpdateSubscriptionsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SendAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerType  sfu_models.PeerType `protobuf:"varint,1,opt,name=peer_type,json=peerType,proto3,enum=stream.video.sfu.PeerType" json:"peer_type,omitempty"`
	Sdp       string              `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
	SessionId string              `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SendAnswerRequest) Reset() {
	*x = SendAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAnswerRequest) ProtoMessage() {}

func (x *SendAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAnswerRequest.ProtoReflect.Descriptor instead.
func (*SendAnswerRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{7}
}

func (x *SendAnswerRequest) GetPeerType() sfu_models.PeerType {
	if x != nil {
		return x.PeerType
	}
	return sfu_models.PeerType(0)
}

func (x *SendAnswerRequest) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *SendAnswerRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SendAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendAnswerResponse) Reset() {
	*x = SendAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAnswerResponse) ProtoMessage() {}

func (x *SendAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAnswerResponse.ProtoReflect.Descriptor instead.
func (*SendAnswerResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{8}
}

type IceCandidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: use PeerTYPE!
	Publisher        bool    `protobuf:"varint,1,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Candidate        string  `protobuf:"bytes,2,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMid           *string `protobuf:"bytes,3,opt,name=sdpMid,proto3,oneof" json:"sdpMid,omitempty"`
	SdpMLineIndex    *uint32 `protobuf:"varint,4,opt,name=sdpMLineIndex,proto3,oneof" json:"sdpMLineIndex,omitempty"`
	UsernameFragment *string `protobuf:"bytes,5,opt,name=usernameFragment,proto3,oneof" json:"usernameFragment,omitempty"`
	SessionId        string  `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *IceCandidateRequest) Reset() {
	*x = IceCandidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IceCandidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IceCandidateRequest) ProtoMessage() {}

func (x *IceCandidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IceCandidateRequest.ProtoReflect.Descriptor instead.
func (*IceCandidateRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{9}
}

func (x *IceCandidateRequest) GetPublisher() bool {
	if x != nil {
		return x.Publisher
	}
	return false
}

func (x *IceCandidateRequest) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *IceCandidateRequest) GetSdpMid() string {
	if x != nil && x.SdpMid != nil {
		return *x.SdpMid
	}
	return ""
}

func (x *IceCandidateRequest) GetSdpMLineIndex() uint32 {
	if x != nil && x.SdpMLineIndex != nil {
		return *x.SdpMLineIndex
	}
	return 0
}

func (x *IceCandidateRequest) GetUsernameFragment() string {
	if x != nil && x.UsernameFragment != nil {
		return *x.UsernameFragment
	}
	return ""
}

func (x *IceCandidateRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type IceCandidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IceCandidateResponse) Reset() {
	*x = IceCandidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IceCandidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IceCandidateResponse) ProtoMessage() {}

func (x *IceCandidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IceCandidateResponse.ProtoReflect.Descriptor instead.
func (*IceCandidateResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{10}
}

type UpdateSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSubscriptionsResponse) Reset() {
	*x = UpdateSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionsResponse) ProtoMessage() {}

func (x *UpdateSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{11}
}

type SetPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sdp offer
	Sdp       string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SetPublisherRequest) Reset() {
	*x = SetPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPublisherRequest) ProtoMessage() {}

func (x *SetPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPublisherRequest.ProtoReflect.Descriptor instead.
func (*SetPublisherRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{12}
}

func (x *SetPublisherRequest) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *SetPublisherRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SetPublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sdp answer
	Sdp       string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SetPublisherResponse) Reset() {
	*x = SetPublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPublisherResponse) ProtoMessage() {}

func (x *SetPublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPublisherResponse.ProtoReflect.Descriptor instead.
func (*SetPublisherResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{13}
}

func (x *SetPublisherResponse) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *SetPublisherResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberSdpOffer string `protobuf:"bytes,1,opt,name=subscriber_sdp_offer,json=subscriberSdpOffer,proto3" json:"subscriber_sdp_offer,omitempty"`
	SessionId          string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{14}
}

func (x *JoinRequest) GetSubscriberSdpOffer() string {
	if x != nil {
		return x.SubscriberSdpOffer
	}
	return ""
}

func (x *JoinRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdp       string                `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	CallState *sfu_models.CallState `protobuf:"bytes,2,opt,name=call_state,json=callState,proto3" json:"call_state,omitempty"` // TODO: include full list of participants with track and audio info
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{15}
}

func (x *JoinResponse) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *JoinResponse) GetCallState() *sfu_models.CallState {
	if x != nil {
		return x.CallState
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// peer connection sdp offer
	SdpOffer string `protobuf:"bytes,1,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
	// token used for authentication
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{16}
}

func (x *ConnectRequest) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

func (x *ConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sdp answer
	SdpAnswer string `protobuf:"bytes,1,opt,name=sdp_answer,json=sdpAnswer,proto3" json:"sdp_answer,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{17}
}

func (x *ConnectResponse) GetSdpAnswer() string {
	if x != nil {
		return x.SdpAnswer
	}
	return ""
}

// Signaling related payload, all these messages will be exchanged using signaling channel
type SignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventPayload:
	//	*SignalRequest_Subscribe
	//	*SignalRequest_Publish
	EventPayload isSignalRequest_EventPayload `protobuf_oneof:"event_payload"`
}

func (x *SignalRequest) Reset() {
	*x = SignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRequest) ProtoMessage() {}

func (x *SignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRequest.ProtoReflect.Descriptor instead.
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{18}
}

func (m *SignalRequest) GetEventPayload() isSignalRequest_EventPayload {
	if m != nil {
		return m.EventPayload
	}
	return nil
}

func (x *SignalRequest) GetSubscribe() *SubscribeRequest {
	if x, ok := x.GetEventPayload().(*SignalRequest_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (x *SignalRequest) GetPublish() *PublishRequest {
	if x, ok := x.GetEventPayload().(*SignalRequest_Publish); ok {
		return x.Publish
	}
	return nil
}

type isSignalRequest_EventPayload interface {
	isSignalRequest_EventPayload()
}

type SignalRequest_Subscribe struct {
	Subscribe *SubscribeRequest `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}

type SignalRequest_Publish struct {
	Publish *PublishRequest `protobuf:"bytes,2,opt,name=publish,proto3,oneof"`
}

func (*SignalRequest_Subscribe) isSignalRequest_EventPayload() {}

func (*SignalRequest_Publish) isSignalRequest_EventPayload() {}

type SignalEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventPayload:
	//	*SignalEvent_Subscribe
	//	*SignalEvent_Publish
	EventPayload isSignalEvent_EventPayload `protobuf_oneof:"event_payload"`
}

func (x *SignalEvent) Reset() {
	*x = SignalEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEvent) ProtoMessage() {}

func (x *SignalEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEvent.ProtoReflect.Descriptor instead.
func (*SignalEvent) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{19}
}

func (m *SignalEvent) GetEventPayload() isSignalEvent_EventPayload {
	if m != nil {
		return m.EventPayload
	}
	return nil
}

func (x *SignalEvent) GetSubscribe() *SubscribeResponse {
	if x, ok := x.GetEventPayload().(*SignalEvent_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (x *SignalEvent) GetPublish() *PublishResponse {
	if x, ok := x.GetEventPayload().(*SignalEvent_Publish); ok {
		return x.Publish
	}
	return nil
}

type isSignalEvent_EventPayload interface {
	isSignalEvent_EventPayload()
}

type SignalEvent_Subscribe struct {
	Subscribe *SubscribeResponse `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}

type SignalEvent_Publish struct {
	Publish *PublishResponse `protobuf:"bytes,2,opt,name=publish,proto3,oneof"`
}

func (*SignalEvent_Subscribe) isSignalEvent_EventPayload() {}

func (*SignalEvent_Publish) isSignalEvent_EventPayload() {}

// SubscribeRequest
type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SdpOffer string `protobuf:"bytes,2,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
	// preferred quality
	Quality string `protobuf:"bytes,3,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SubscribeRequest) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

func (x *SubscribeRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

// SubscribeResponse
type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// preferred quality
	Quality string `protobuf:"bytes,2,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeResponse) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SdpOffer string `protobuf:"bytes,2,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{22}
}

func (x *PublishRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PublishRequest) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

type PublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpAnswer string `protobuf:"bytes,2,opt,name=sdp_answer,json=sdpAnswer,proto3" json:"sdp_answer,omitempty"`
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_signal_rpc_signal_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_signal_rpc_signal_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_sfu_signal_rpc_signal_proto_rawDescGZIP(), []int{23}
}

func (x *PublishResponse) GetSdpAnswer() string {
	if x != nil {
		return x.SdpAnswer
	}
	return ""
}

var File_sfu_signal_rpc_signal_proto protoreflect.FileDescriptor

var file_sfu_signal_rpc_signal_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x66, 0x75, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x1a,
	0x17, 0x73, 0x66, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x73, 0x66, 0x75, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xe7, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x12, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x75,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x52, 0x0a,
	0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x42, 0x06, 0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x75, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x22, 0x28,
	0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66,
	0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x62, 0x0a,
	0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7d, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x13, 0x49, 0x63, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x64,
	0x70, 0x4d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x64,
	0x70, 0x4d, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x73, 0x64, 0x70, 0x4d, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
	0x52, 0x0d, 0x73, 0x64, 0x70, 0x4d, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x64, 0x70, 0x4d, 0x69, 0x64, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x64, 0x70, 0x4d, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x64, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0b,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x53, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0c,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x12, 0x3a,
	0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x30, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x64, 0x70, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5f, 0x0a, 0x10, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x2d, 0x0a, 0x11,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x43, 0x0a, 0x0e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x22, 0x30, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x64, 0x70, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x32, 0xbe, 0x05, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x73, 0x66, 0x75, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75,
	0x2e, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x66, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2d, 0x73, 0x66, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x66, 0x75, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sfu_signal_rpc_signal_proto_rawDescOnce sync.Once
	file_sfu_signal_rpc_signal_proto_rawDescData = file_sfu_signal_rpc_signal_proto_rawDesc
)

func file_sfu_signal_rpc_signal_proto_rawDescGZIP() []byte {
	file_sfu_signal_rpc_signal_proto_rawDescOnce.Do(func() {
		file_sfu_signal_rpc_signal_proto_rawDescData = protoimpl.X.CompressGZIP(file_sfu_signal_rpc_signal_proto_rawDescData)
	})
	return file_sfu_signal_rpc_signal_proto_rawDescData
}

var file_sfu_signal_rpc_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_sfu_signal_rpc_signal_proto_goTypes = []interface{}{
	(*UpdateVideoQualityRequest)(nil),   // 0: stream.video.sfu.UpdateVideoQualityRequest
	(*UpdateVideoQualityResponse)(nil),  // 1: stream.video.sfu.UpdateVideoQualityResponse
	(*UpdateMuteStateRequest)(nil),      // 2: stream.video.sfu.UpdateMuteStateRequest
	(*UpdateMuteStateResponse)(nil),     // 3: stream.video.sfu.UpdateMuteStateResponse
	(*AudioMuteChanged)(nil),            // 4: stream.video.sfu.AudioMuteChanged
	(*VideoMuteChanged)(nil),            // 5: stream.video.sfu.VideoMuteChanged
	(*UpdateSubscriptionsRequest)(nil),  // 6: stream.video.sfu.UpdateSubscriptionsRequest
	(*SendAnswerRequest)(nil),           // 7: stream.video.sfu.SendAnswerRequest
	(*SendAnswerResponse)(nil),          // 8: stream.video.sfu.SendAnswerResponse
	(*IceCandidateRequest)(nil),         // 9: stream.video.sfu.IceCandidateRequest
	(*IceCandidateResponse)(nil),        // 10: stream.video.sfu.IceCandidateResponse
	(*UpdateSubscriptionsResponse)(nil), // 11: stream.video.sfu.UpdateSubscriptionsResponse
	(*SetPublisherRequest)(nil),         // 12: stream.video.sfu.SetPublisherRequest
	(*SetPublisherResponse)(nil),        // 13: stream.video.sfu.SetPublisherResponse
	(*JoinRequest)(nil),                 // 14: stream.video.sfu.JoinRequest
	(*JoinResponse)(nil),                // 15: stream.video.sfu.JoinResponse
	(*ConnectRequest)(nil),              // 16: stream.video.sfu.ConnectRequest
	(*ConnectResponse)(nil),             // 17: stream.video.sfu.ConnectResponse
	(*SignalRequest)(nil),               // 18: stream.video.sfu.SignalRequest
	(*SignalEvent)(nil),                 // 19: stream.video.sfu.SignalEvent
	(*SubscribeRequest)(nil),            // 20: stream.video.sfu.SubscribeRequest
	(*SubscribeResponse)(nil),           // 21: stream.video.sfu.SubscribeResponse
	(*PublishRequest)(nil),              // 22: stream.video.sfu.PublishRequest
	(*PublishResponse)(nil),             // 23: stream.video.sfu.PublishResponse
	nil,                                 // 24: stream.video.sfu.UpdateSubscriptionsRequest.SubscriptionsEntry
	(*sfu_models.StreamQuality)(nil),    // 25: stream.video.sfu.StreamQuality
	(sfu_models.PeerType)(0),            // 26: stream.video.sfu.PeerType
	(*sfu_models.CallState)(nil),        // 27: stream.video.sfu.CallState
	(*sfu_models.VideoDimension)(nil),   // 28: stream.video.sfu.VideoDimension
}
var file_sfu_signal_rpc_signal_proto_depIdxs = []int32{
	25, // 0: stream.video.sfu.UpdateVideoQualityRequest.stream_qualities:type_name -> stream.video.sfu.StreamQuality
	4,  // 1: stream.video.sfu.UpdateMuteStateRequest.audio_mute_changed:type_name -> stream.video.sfu.AudioMuteChanged
	5,  // 2: stream.video.sfu.UpdateMuteStateRequest.video_mute_changed:type_name -> stream.video.sfu.VideoMuteChanged
	24, // 3: stream.video.sfu.UpdateSubscriptionsRequest.subscriptions:type_name -> stream.video.sfu.UpdateSubscriptionsRequest.SubscriptionsEntry
	26, // 4: stream.video.sfu.SendAnswerRequest.peer_type:type_name -> stream.video.sfu.PeerType
	27, // 5: stream.video.sfu.JoinResponse.call_state:type_name -> stream.video.sfu.CallState
	20, // 6: stream.video.sfu.SignalRequest.subscribe:type_name -> stream.video.sfu.SubscribeRequest
	22, // 7: stream.video.sfu.SignalRequest.publish:type_name -> stream.video.sfu.PublishRequest
	21, // 8: stream.video.sfu.SignalEvent.subscribe:type_name -> stream.video.sfu.SubscribeResponse
	23, // 9: stream.video.sfu.SignalEvent.publish:type_name -> stream.video.sfu.PublishResponse
	28, // 10: stream.video.sfu.UpdateSubscriptionsRequest.SubscriptionsEntry.value:type_name -> stream.video.sfu.VideoDimension
	14, // 11: stream.video.sfu.SignalServer.Join:input_type -> stream.video.sfu.JoinRequest
	12, // 12: stream.video.sfu.SignalServer.SetPublisher:input_type -> stream.video.sfu.SetPublisherRequest
	7,  // 13: stream.video.sfu.SignalServer.SendAnswer:input_type -> stream.video.sfu.SendAnswerRequest
	9,  // 14: stream.video.sfu.SignalServer.SendIceCandidate:input_type -> stream.video.sfu.IceCandidateRequest
	6,  // 15: stream.video.sfu.SignalServer.UpdateSubscriptions:input_type -> stream.video.sfu.UpdateSubscriptionsRequest
	2,  // 16: stream.video.sfu.SignalServer.UpdateMuteState:input_type -> stream.video.sfu.UpdateMuteStateRequest
	0,  // 17: stream.video.sfu.SignalServer.RequestVideoQuality:input_type -> stream.video.sfu.UpdateVideoQualityRequest
	15, // 18: stream.video.sfu.SignalServer.Join:output_type -> stream.video.sfu.JoinResponse
	13, // 19: stream.video.sfu.SignalServer.SetPublisher:output_type -> stream.video.sfu.SetPublisherResponse
	8,  // 20: stream.video.sfu.SignalServer.SendAnswer:output_type -> stream.video.sfu.SendAnswerResponse
	10, // 21: stream.video.sfu.SignalServer.SendIceCandidate:output_type -> stream.video.sfu.IceCandidateResponse
	11, // 22: stream.video.sfu.SignalServer.UpdateSubscriptions:output_type -> stream.video.sfu.UpdateSubscriptionsResponse
	3,  // 23: stream.video.sfu.SignalServer.UpdateMuteState:output_type -> stream.video.sfu.UpdateMuteStateResponse
	1,  // 24: stream.video.sfu.SignalServer.RequestVideoQuality:output_type -> stream.video.sfu.UpdateVideoQualityResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sfu_signal_rpc_signal_proto_init() }
func file_sfu_signal_rpc_signal_proto_init() {
	if File_sfu_signal_rpc_signal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sfu_signal_rpc_signal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVideoQualityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVideoQualityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMuteStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMuteStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMuteChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMuteChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IceCandidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IceCandidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_signal_rpc_signal_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sfu_signal_rpc_signal_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*UpdateMuteStateRequest_AudioMuteChanged)(nil),
		(*UpdateMuteStateRequest_VideoMuteChanged)(nil),
	}
	file_sfu_signal_rpc_signal_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_sfu_signal_rpc_signal_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SignalRequest_Subscribe)(nil),
		(*SignalRequest_Publish)(nil),
	}
	file_sfu_signal_rpc_signal_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*SignalEvent_Subscribe)(nil),
		(*SignalEvent_Publish)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sfu_signal_rpc_signal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sfu_signal_rpc_signal_proto_goTypes,
		DependencyIndexes: file_sfu_signal_rpc_signal_proto_depIdxs,
		MessageInfos:      file_sfu_signal_rpc_signal_proto_msgTypes,
	}.Build()
	File_sfu_signal_rpc_signal_proto = out.File
	file_sfu_signal_rpc_signal_proto_rawDesc = nil
	file_sfu_signal_rpc_signal_proto_goTypes = nil
	file_sfu_signal_rpc_signal_proto_depIdxs = nil
}
