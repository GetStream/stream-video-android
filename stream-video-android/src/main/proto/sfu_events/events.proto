syntax = "proto3";

package stream.video.sfu;

import "sfu_models/models.proto";

option go_package = "github.com/GetStream/video-sfu/protobuf/sfu_events";

message SfuEvent {
  oneof event_payload {
    SubscriberOffer subscriber_offer = 1;
    ConnectionQualityChanged connection_quality_changed = 2;
    AudioLevelChanged audio_level_changed = 3;
    ICECandidateTrickle subscriber_candidate = 4;
    ICECandidateTrickle publisher_candidate = 5;
    ChangePublishQuality change_publish_quality = 6;
    LocalDeviceChange local_device_change = 7;
    MuteStateChanged mute_state_changed = 8;
    VideoQualityChanged video_quality_changed = 9;
    ParticipantJoined participant_joined = 10;
    ParticipantLeft participant_left = 11;
    DominantSpeakerChanged dominant_speaker_changed = 12;
  }
}

// ParticipantJoined is fired when a user joins a call
message ParticipantJoined {
  Call call = 1;
  Participant participant = 2;
}

// ParticipantJoined is fired when a user leaves a call
message ParticipantLeft {
  Call call = 1;
  Participant participant = 2;
}

message MuteStateChanged{
  string user_id = 1;
  bool audio_muted = 2;
  bool video_muted = 3;
}

//TODO batch these messages
message VideoQualityChanged{
  repeated StreamQuality stream_qualities = 1;
}

// SubscriberOffer is sent when the SFU adds tracks to a subscription
// this usually happens when a user joins a call and starts sending video
message SubscriberOffer {
  string sdp = 1;
}

message LocalDeviceChange {
  string type = 1;
}

// ICECandidateTrickle is about the ICE nonsense stuff
message ICECandidateTrickle {
  string candidate = 1;
}

// ConnectionQuality is sent to inform about connection quality changes
// eg. thierry's connection is not good -> render a red icon Zoom style
message ConnectionQualityChanged {
  string user_id = 1;
  ConnectionQuality connection_quality = 2;
}

// DominantSpeakerChanged is sent by the SFU to notify when there is a new dominant speaker in the call
message DominantSpeakerChanged {
  string user_id = 1;
}

// AudioLevelChanged is sent by the SFU to notify about audio levels by user
message AudioLevelChanged {
  repeated AudioLevel audio_levels = 1;
}

message AudioLevel{
  string user_id = 1;
  // 0.0 means complete silence, 1.0 loudest
  float level = 2;
}

message AudioLayerSetting {

}

message AudioMediaRequest {
  int32 channelCount = 1;
}

message AudioSender {
  AudioMediaRequest mediaRequest = 1;
  Codec codec = 2;
  repeated AudioLayerSetting layers = 3;
}

message VideoMediaRequest {
  int32 idealHeight = 1;
  int32 idealWidth = 2;
  int32 idealFrameRate = 3;

}


message VideoLayerSetting {
  string name = 1;
  bool active = 2;
  int32 maxBitrate = 3;
  float scaleResolutionDownBy = 4;
  enum Priority {
    HIGH = 0;
    LOW = 1;
    MEDIUM = 2;
    VERY_LOW = 3;
  }
  Priority priority = 5;
  Codec codec = 6;
}

message VideoSender {
  VideoMediaRequest mediaRequest = 1;
  Codec codec = 2;
  repeated VideoLayerSetting layers = 3;
}

// sent to users when they need to change the quality of their video
message ChangePublishQuality {
  repeated AudioSender audio_sender = 1;
  repeated VideoSender video_sender = 2;
}
