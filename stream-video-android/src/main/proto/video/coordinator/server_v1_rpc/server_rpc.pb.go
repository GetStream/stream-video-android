// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: video/coordinator/server_v1_rpc/server_rpc.proto

package server_v1_rpc

import (
	app_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/app_v1"
	broadcast_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/broadcast_v1"
	call_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/call_v1"
	push_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/push_v1"
	stat_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/stat_v1"
	user_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/user_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{0}
}

type GetAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *app_v1.App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetAppResponse) Reset() {
	*x = GetAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse) ProtoMessage() {}

func (x *GetAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppResponse) GetApp() *app_v1.App {
	if x != nil {
		return x.App
	}
	return nil
}

type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webhook *app_v1.WebhookSettings `protobuf:"bytes,1,opt,name=webhook,proto3" json:"webhook,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAppRequest) GetWebhook() *app_v1.WebhookSettings {
	if x != nil {
		return x.Webhook
	}
	return nil
}

type UpdateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *app_v1.App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *UpdateAppResponse) Reset() {
	*x = UpdateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppResponse) ProtoMessage() {}

func (x *UpdateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAppResponse) GetApp() *app_v1.App {
	if x != nil {
		return x.App
	}
	return nil
}

type PushProviderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Credentials:
	//
	//	*PushProviderInput_Apn
	//	*PushProviderInput_Firebase
	//	*PushProviderInput_Huawei
	//	*PushProviderInput_Xiaomi
	Credentials isPushProviderInput_Credentials `protobuf_oneof:"credentials"`
}

func (x *PushProviderInput) Reset() {
	*x = PushProviderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushProviderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushProviderInput) ProtoMessage() {}

func (x *PushProviderInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushProviderInput.ProtoReflect.Descriptor instead.
func (*PushProviderInput) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *PushProviderInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *PushProviderInput) GetCredentials() isPushProviderInput_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (x *PushProviderInput) GetApn() *push_v1.ApnCredentials {
	if x, ok := x.GetCredentials().(*PushProviderInput_Apn); ok {
		return x.Apn
	}
	return nil
}

func (x *PushProviderInput) GetFirebase() *push_v1.FirebaseCredentials {
	if x, ok := x.GetCredentials().(*PushProviderInput_Firebase); ok {
		return x.Firebase
	}
	return nil
}

func (x *PushProviderInput) GetHuawei() *push_v1.HuaweiCredentials {
	if x, ok := x.GetCredentials().(*PushProviderInput_Huawei); ok {
		return x.Huawei
	}
	return nil
}

func (x *PushProviderInput) GetXiaomi() *push_v1.XiaomiCredentials {
	if x, ok := x.GetCredentials().(*PushProviderInput_Xiaomi); ok {
		return x.Xiaomi
	}
	return nil
}

type isPushProviderInput_Credentials interface {
	isPushProviderInput_Credentials()
}

type PushProviderInput_Apn struct {
	Apn *push_v1.ApnCredentials `protobuf:"bytes,2,opt,name=apn,proto3,oneof"`
}

type PushProviderInput_Firebase struct {
	Firebase *push_v1.FirebaseCredentials `protobuf:"bytes,3,opt,name=firebase,proto3,oneof"`
}

type PushProviderInput_Huawei struct {
	Huawei *push_v1.HuaweiCredentials `protobuf:"bytes,4,opt,name=huawei,proto3,oneof"`
}

type PushProviderInput_Xiaomi struct {
	Xiaomi *push_v1.XiaomiCredentials `protobuf:"bytes,5,opt,name=xiaomi,proto3,oneof"`
}

func (*PushProviderInput_Apn) isPushProviderInput_Credentials() {}

func (*PushProviderInput_Firebase) isPushProviderInput_Credentials() {}

func (*PushProviderInput_Huawei) isPushProviderInput_Credentials() {}

func (*PushProviderInput_Xiaomi) isPushProviderInput_Credentials() {}

type CreatePushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input *PushProviderInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *CreatePushProviderRequest) Reset() {
	*x = CreatePushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushProviderRequest) ProtoMessage() {}

func (x *CreatePushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushProviderRequest.ProtoReflect.Descriptor instead.
func (*CreatePushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePushProviderRequest) GetInput() *PushProviderInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreatePushProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *push_v1.PushProvider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *CreatePushProviderResponse) Reset() {
	*x = CreatePushProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushProviderResponse) ProtoMessage() {}

func (x *CreatePushProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushProviderResponse.ProtoReflect.Descriptor instead.
func (*CreatePushProviderResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePushProviderResponse) GetProvider() *push_v1.PushProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type GetPushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPushProviderRequest) Reset() {
	*x = GetPushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushProviderRequest) ProtoMessage() {}

func (x *GetPushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushProviderRequest.ProtoReflect.Descriptor instead.
func (*GetPushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetPushProviderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPushProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *push_v1.PushProvider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *GetPushProviderResponse) Reset() {
	*x = GetPushProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushProviderResponse) ProtoMessage() {}

func (x *GetPushProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushProviderResponse.ProtoReflect.Descriptor instead.
func (*GetPushProviderResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetPushProviderResponse) GetProvider() *push_v1.PushProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type QueryPushProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPushProvidersRequest) Reset() {
	*x = QueryPushProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPushProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPushProvidersRequest) ProtoMessage() {}

func (x *QueryPushProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPushProvidersRequest.ProtoReflect.Descriptor instead.
func (*QueryPushProvidersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{9}
}

type QueryPushProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*push_v1.PushProvider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *QueryPushProvidersResponse) Reset() {
	*x = QueryPushProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPushProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPushProvidersResponse) ProtoMessage() {}

func (x *QueryPushProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPushProvidersResponse.ProtoReflect.Descriptor instead.
func (*QueryPushProvidersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPushProvidersResponse) GetProviders() []*push_v1.PushProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type UpdatePushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input *PushProviderInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *UpdatePushProviderRequest) Reset() {
	*x = UpdatePushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushProviderRequest) ProtoMessage() {}

func (x *UpdatePushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePushProviderRequest) GetInput() *PushProviderInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type UpdatePushProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *push_v1.PushProvider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *UpdatePushProviderResponse) Reset() {
	*x = UpdatePushProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushProviderResponse) ProtoMessage() {}

func (x *UpdatePushProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushProviderResponse.ProtoReflect.Descriptor instead.
func (*UpdatePushProviderResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePushProviderResponse) GetProvider() *push_v1.PushProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type DeletePushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePushProviderRequest) Reset() {
	*x = DeletePushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushProviderRequest) ProtoMessage() {}

func (x *DeletePushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushProviderRequest.ProtoReflect.Descriptor instead.
func (*DeletePushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePushProviderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePushProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePushProviderResponse) Reset() {
	*x = DeletePushProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushProviderResponse) ProtoMessage() {}

func (x *DeletePushProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushProviderResponse.ProtoReflect.Descriptor instead.
func (*DeletePushProviderResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{14}
}

type DeleteCallTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the call type
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCallTypeRequest) Reset() {
	*x = DeleteCallTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallTypeRequest) ProtoMessage() {}

func (x *DeleteCallTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteCallTypeRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCallTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCallTypeResponse) Reset() {
	*x = DeleteCallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallTypeResponse) ProtoMessage() {}

func (x *DeleteCallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteCallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{16}
}

type CreateCallTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the call type, must be unique for the application
	Name    string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options *call_v1.CallOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CreateCallTypeRequest) Reset() {
	*x = CreateCallTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallTypeRequest) ProtoMessage() {}

func (x *CreateCallTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateCallTypeRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCallTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCallTypeRequest) GetOptions() *call_v1.CallOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateCallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the call type updated
	CallType *call_v1.CallType `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *CreateCallTypeResponse) Reset() {
	*x = CreateCallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallTypeResponse) ProtoMessage() {}

func (x *CreateCallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateCallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *CreateCallTypeResponse) GetCallType() *call_v1.CallType {
	if x != nil {
		return x.CallType
	}
	return nil
}

type GetCallTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCallTypeRequest) Reset() {
	*x = GetCallTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallTypeRequest) ProtoMessage() {}

func (x *GetCallTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallTypeRequest.ProtoReflect.Descriptor instead.
func (*GetCallTypeRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *GetCallTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the call type updated
	CallType *call_v1.CallType `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *GetCallTypeResponse) Reset() {
	*x = GetCallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallTypeResponse) ProtoMessage() {}

func (x *GetCallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallTypeResponse.ProtoReflect.Descriptor instead.
func (*GetCallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *GetCallTypeResponse) GetCallType() *call_v1.CallType {
	if x != nil {
		return x.CallType
	}
	return nil
}

type QueryCallTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryCallTypesRequest) Reset() {
	*x = QueryCallTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallTypesRequest) ProtoMessage() {}

func (x *QueryCallTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallTypesRequest.ProtoReflect.Descriptor instead.
func (*QueryCallTypesRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{21}
}

type QueryCallTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallTypes []*call_v1.CallType `protobuf:"bytes,1,rep,name=call_types,json=callTypes,proto3" json:"call_types,omitempty"`
}

func (x *QueryCallTypesResponse) Reset() {
	*x = QueryCallTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallTypesResponse) ProtoMessage() {}

func (x *QueryCallTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallTypesResponse.ProtoReflect.Descriptor instead.
func (*QueryCallTypesResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *QueryCallTypesResponse) GetCallTypes() []*call_v1.CallType {
	if x != nil {
		return x.CallTypes
	}
	return nil
}

type UpdateCallTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the call type, must be unique for the application
	Name    string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options *call_v1.CallOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *UpdateCallTypeRequest) Reset() {
	*x = UpdateCallTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallTypeRequest) ProtoMessage() {}

func (x *UpdateCallTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateCallTypeRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateCallTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCallTypeRequest) GetOptions() *call_v1.CallOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type UpdateCallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the call type updated
	CallType *call_v1.CallType `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *UpdateCallTypeResponse) Reset() {
	*x = UpdateCallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallTypeResponse) ProtoMessage() {}

func (x *UpdateCallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateCallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateCallTypeResponse) GetCallType() *call_v1.CallType {
	if x != nil {
		return x.CallType
	}
	return nil
}

type CreateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call type.
	// Required.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The call id, if not provided a unique value will be generated based on UUID v4.
	// Required.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Call custom data.
	CustomJson []byte `protobuf:"bytes,3,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
	// The list of participant ids.
	ParticipantIds []string `protobuf:"bytes,4,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	// HLS broadcast, overrides the default call type setting if provided.
	HlsBroadcast *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=hls_broadcast,json=hlsBroadcast,proto3" json:"hls_broadcast,omitempty"`
	// Request video to be forwarded to a list of RTMP servers.
	Rtmp *broadcast_v1.RTMPOptions `protobuf:"bytes,7,opt,name=rtmp,proto3" json:"rtmp,omitempty"`
	// The recording option, overrides the default call type setting if provided.
	Recording *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=recording,proto3" json:"recording,omitempty"`
	// The ring option, overrides the default call type setting if provided.
	Notify *wrapperspb.BoolValue `protobuf:"bytes,9,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *CreateCallRequest) Reset() {
	*x = CreateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallRequest) ProtoMessage() {}

func (x *CreateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallRequest.ProtoReflect.Descriptor instead.
func (*CreateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *CreateCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCallRequest) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

func (x *CreateCallRequest) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *CreateCallRequest) GetHlsBroadcast() *wrapperspb.BoolValue {
	if x != nil {
		return x.HlsBroadcast
	}
	return nil
}

func (x *CreateCallRequest) GetRtmp() *broadcast_v1.RTMPOptions {
	if x != nil {
		return x.Rtmp
	}
	return nil
}

func (x *CreateCallRequest) GetRecording() *wrapperspb.BoolValue {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *CreateCallRequest) GetNotify() *wrapperspb.BoolValue {
	if x != nil {
		return x.Notify
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Teams      []string `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Role       string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	CustomJson []byte   `protobuf:"bytes,4,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
	Name       string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl   string   `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *CreateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUserRequest) GetTeams() []string {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *CreateUserRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateUserRequest) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// CreateOrUpdateUsersRequest runs a partial update or create on the list of users
// specify replace = true to do a hard update instead of partial update.
type CreateOrUpdateUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*CreateUserRequest `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Full update (defaults to false and does a partial update).
	FullUpdate bool `protobuf:"varint,2,opt,name=full_update,json=fullUpdate,proto3" json:"full_update,omitempty"`
}

func (x *CreateOrUpdateUsersRequest) Reset() {
	*x = CreateOrUpdateUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateUsersRequest) ProtoMessage() {}

func (x *CreateOrUpdateUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateUsersRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateUsersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *CreateOrUpdateUsersRequest) GetUsers() []*CreateUserRequest {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CreateOrUpdateUsersRequest) GetFullUpdate() bool {
	if x != nil {
		return x.FullUpdate
	}
	return false
}

type CreateOrUpdateUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*user_v1.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *CreateOrUpdateUsersResponse) Reset() {
	*x = CreateOrUpdateUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateUsersResponse) ProtoMessage() {}

func (x *CreateOrUpdateUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateUsersResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateUsersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *CreateOrUpdateUsersResponse) GetUsers() []*user_v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TODO: do we support both soft and hard delete
type ExportUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExportUserRequest) Reset() {
	*x = ExportUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserRequest) ProtoMessage() {}

func (x *ExportUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserRequest.ProtoReflect.Descriptor instead.
func (*ExportUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *ExportUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TODO: talk about what data we should export on the GDPR endpoints for a user
type ExportUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExportUserResponse) Reset() {
	*x = ExportUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserResponse) ProtoMessage() {}

func (x *ExportUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserResponse.ProtoReflect.Descriptor instead.
func (*ExportUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *ExportUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *user_v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *CreateUserResponse) GetUser() *user_v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UserCapability) Reset() {
	*x = UserCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCapability) ProtoMessage() {}

func (x *UserCapability) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCapability.ProtoReflect.Descriptor instead.
func (*UserCapability) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *UserCapability) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UserCapability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type StartBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call id and type.
	CallId   string `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	CallType string `protobuf:"bytes,2,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	// Toggles HLS broadcasting on/off.
	HlsBroadcast bool `protobuf:"varint,3,opt,name=hls_broadcast,json=hlsBroadcast,proto3" json:"hls_broadcast,omitempty"`
	// Enables rtmp broadcasting.
	Rtmp *broadcast_v1.RTMPOptions `protobuf:"bytes,5,opt,name=rtmp,proto3" json:"rtmp,omitempty"`
}

func (x *StartBroadcastRequest) Reset() {
	*x = StartBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBroadcastRequest) ProtoMessage() {}

func (x *StartBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBroadcastRequest.ProtoReflect.Descriptor instead.
func (*StartBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *StartBroadcastRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *StartBroadcastRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StartBroadcastRequest) GetHlsBroadcast() bool {
	if x != nil {
		return x.HlsBroadcast
	}
	return false
}

func (x *StartBroadcastRequest) GetRtmp() *broadcast_v1.RTMPOptions {
	if x != nil {
		return x.Rtmp
	}
	return nil
}

type StartBroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broadcast *broadcast_v1.Broadcast `protobuf:"bytes,1,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
}

func (x *StartBroadcastResponse) Reset() {
	*x = StartBroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBroadcastResponse) ProtoMessage() {}

func (x *StartBroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBroadcastResponse.ProtoReflect.Descriptor instead.
func (*StartBroadcastResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *StartBroadcastResponse) GetBroadcast() *broadcast_v1.Broadcast {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

type StopBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopBroadcastRequest) Reset() {
	*x = StopBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastRequest) ProtoMessage() {}

func (x *StopBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastRequest.ProtoReflect.Descriptor instead.
func (*StopBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{37}
}

type StopBroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopBroadcastResponse) Reset() {
	*x = StopBroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastResponse) ProtoMessage() {}

func (x *StopBroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastResponse.ProtoReflect.Descriptor instead.
func (*StopBroadcastResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{38}
}

type StoreLatencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreLatencyRequest) Reset() {
	*x = StoreLatencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLatencyRequest) ProtoMessage() {}

func (x *StoreLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLatencyRequest.ProtoReflect.Descriptor instead.
func (*StoreLatencyRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{39}
}

type StoreLatencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreLatencyResponse) Reset() {
	*x = StoreLatencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLatencyResponse) ProtoMessage() {}

func (x *StoreLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLatencyResponse.ProtoReflect.Descriptor instead.
func (*StoreLatencyResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{40}
}

type StartRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *StartRecordingRequest) Reset() {
	*x = StartRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingRequest) ProtoMessage() {}

func (x *StartRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingRequest.ProtoReflect.Descriptor instead.
func (*StartRecordingRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *StartRecordingRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StartRecordingRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type StartRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartRecordingResponse) Reset() {
	*x = StartRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingResponse) ProtoMessage() {}

func (x *StartRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingResponse.ProtoReflect.Descriptor instead.
func (*StartRecordingResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{42}
}

type StopRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *StopRecordingRequest) Reset() {
	*x = StopRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingRequest) ProtoMessage() {}

func (x *StopRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingRequest.ProtoReflect.Descriptor instead.
func (*StopRecordingRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *StopRecordingRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StopRecordingRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type StopRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S3FileUrl string `protobuf:"bytes,1,opt,name=s3_file_url,json=s3FileUrl,proto3" json:"s3_file_url,omitempty"`
}

func (x *StopRecordingResponse) Reset() {
	*x = StopRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingResponse) ProtoMessage() {}

func (x *StopRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingResponse.ProtoReflect.Descriptor instead.
func (*StopRecordingResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *StopRecordingResponse) GetS3FileUrl() string {
	if x != nil {
		return x.S3FileUrl
	}
	return ""
}

// TODO: how do we do filtering and pagination with proto?
// here we need to be able to filter, sort and limit by
// call id, call custom attribute, call creation time, call including a user, call by type
type GetRecordingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecordingsRequest) Reset() {
	*x = GetRecordingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsRequest) ProtoMessage() {}

func (x *GetRecordingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsRequest.ProtoReflect.Descriptor instead.
func (*GetRecordingsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{45}
}

type GetRecordingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recordings []*GetRecordingsResponse_Recording `protobuf:"bytes,1,rep,name=recordings,proto3" json:"recordings,omitempty"`
}

func (x *GetRecordingsResponse) Reset() {
	*x = GetRecordingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsResponse) ProtoMessage() {}

func (x *GetRecordingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsResponse.ProtoReflect.Descriptor instead.
func (*GetRecordingsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *GetRecordingsResponse) GetRecordings() []*GetRecordingsResponse_Recording {
	if x != nil {
		return x.Recordings
	}
	return nil
}

type DeleteRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRecordingRequest) Reset() {
	*x = DeleteRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordingRequest) ProtoMessage() {}

func (x *DeleteRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordingRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordingRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{47}
}

type DeleteRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRecordingResponse) Reset() {
	*x = DeleteRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordingResponse) ProtoMessage() {}

func (x *DeleteRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordingResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordingResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{48}
}

// A request message for the QueryCallTimelineEvents endpoint
// Specifies a subset of events to request
type QueryCallTimelineEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call type.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The call id.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Limits event timespan of the response. Default: 10m, max: 30m
	Duration *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// since which date to query events. Default: time of the first event of the call
	Since *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *QueryCallTimelineEventsRequest) Reset() {
	*x = QueryCallTimelineEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallTimelineEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallTimelineEventsRequest) ProtoMessage() {}

func (x *QueryCallTimelineEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallTimelineEventsRequest.ProtoReflect.Descriptor instead.
func (*QueryCallTimelineEventsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *QueryCallTimelineEventsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryCallTimelineEventsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryCallTimelineEventsRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *QueryCallTimelineEventsRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type QueryCallTimelineEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timeline inclusive start time
	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// timeline inclusive end time
	End *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// contains cursor to use to request the next page
	Next *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
	// list of events for each participant from requested time period
	ParticipantEvents []*stat_v1.CallParticipantTimeline `protobuf:"bytes,4,rep,name=participant_events,json=participantEvents,proto3" json:"participant_events,omitempty"`
}

func (x *QueryCallTimelineEventsResponse) Reset() {
	*x = QueryCallTimelineEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallTimelineEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallTimelineEventsResponse) ProtoMessage() {}

func (x *QueryCallTimelineEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallTimelineEventsResponse.ProtoReflect.Descriptor instead.
func (*QueryCallTimelineEventsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{50}
}

func (x *QueryCallTimelineEventsResponse) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *QueryCallTimelineEventsResponse) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *QueryCallTimelineEventsResponse) GetNext() *timestamppb.Timestamp {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *QueryCallTimelineEventsResponse) GetParticipantEvents() []*stat_v1.CallParticipantTimeline {
	if x != nil {
		return x.ParticipantEvents
	}
	return nil
}

type GetRecordingsResponse_Recording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType  string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId    string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	S3FileUrl string `protobuf:"bytes,3,opt,name=s3_file_url,json=s3FileUrl,proto3" json:"s3_file_url,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime  string `protobuf:"bytes,5,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
}

func (x *GetRecordingsResponse_Recording) Reset() {
	*x = GetRecordingsResponse_Recording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsResponse_Recording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsResponse_Recording) ProtoMessage() {}

func (x *GetRecordingsResponse_Recording) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsResponse_Recording.ProtoReflect.Descriptor instead.
func (*GetRecordingsResponse_Recording) Descriptor() ([]byte, []int) {
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP(), []int{46, 0}
}

func (x *GetRecordingsResponse_Recording) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetS3FileUrl() string {
	if x != nil {
		return x.S3FileUrl
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

var File_video_coordinator_server_v1_rpc_server_rpc_proto protoreflect.FileDescriptor

var file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDesc = []byte{
	0x0a, 0x30, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x26, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61,
	0x70, 0x70, 0x5f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x31, 0x2f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31,
	0x2f, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x22, 0x5e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x22, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22,
	0xeb, 0x02, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x03, 0x61, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70, 0x6e, 0x12, 0x53, 0x0a, 0x08, 0x66,
	0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x06, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x76, 0x31, 0x2e, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x12,
	0x4d, 0x0a, 0x06, 0x78, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x76, 0x31, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x78, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x42, 0x0d,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x6c, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x68, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x6c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x68, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x61, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x61, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x68, 0x6c, 0x73, 0x5f, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x68, 0x6c, 0x73, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x4d, 0x50, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x72, 0x74, 0x6d, 0x70,
	0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x9f,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4f, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x5b, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x6c, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x6c, 0x73, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x4d, 0x50, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x22,
	0x68, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x09,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x6f,
	0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x33, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x33, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xa0, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x33, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x33, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x1e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x1f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x68, 0x0a,
	0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x8a, 0x19, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x50, 0x43, 0x12, 0x77, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12,
	0x35, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x38, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a,
	0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x92, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x42, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x9b, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8f, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x92, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaa, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x46, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83,
	0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescOnce sync.Once
	file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescData = file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDesc
)

func file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescGZIP() []byte {
	file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescOnce.Do(func() {
		file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescData)
	})
	return file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDescData
}

var file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_video_coordinator_server_v1_rpc_server_rpc_proto_goTypes = []interface{}{
	(*GetAppRequest)(nil),                   // 0: stream.video.coordinator.server_v1_rpc.GetAppRequest
	(*GetAppResponse)(nil),                  // 1: stream.video.coordinator.server_v1_rpc.GetAppResponse
	(*UpdateAppRequest)(nil),                // 2: stream.video.coordinator.server_v1_rpc.UpdateAppRequest
	(*UpdateAppResponse)(nil),               // 3: stream.video.coordinator.server_v1_rpc.UpdateAppResponse
	(*PushProviderInput)(nil),               // 4: stream.video.coordinator.server_v1_rpc.PushProviderInput
	(*CreatePushProviderRequest)(nil),       // 5: stream.video.coordinator.server_v1_rpc.CreatePushProviderRequest
	(*CreatePushProviderResponse)(nil),      // 6: stream.video.coordinator.server_v1_rpc.CreatePushProviderResponse
	(*GetPushProviderRequest)(nil),          // 7: stream.video.coordinator.server_v1_rpc.GetPushProviderRequest
	(*GetPushProviderResponse)(nil),         // 8: stream.video.coordinator.server_v1_rpc.GetPushProviderResponse
	(*QueryPushProvidersRequest)(nil),       // 9: stream.video.coordinator.server_v1_rpc.QueryPushProvidersRequest
	(*QueryPushProvidersResponse)(nil),      // 10: stream.video.coordinator.server_v1_rpc.QueryPushProvidersResponse
	(*UpdatePushProviderRequest)(nil),       // 11: stream.video.coordinator.server_v1_rpc.UpdatePushProviderRequest
	(*UpdatePushProviderResponse)(nil),      // 12: stream.video.coordinator.server_v1_rpc.UpdatePushProviderResponse
	(*DeletePushProviderRequest)(nil),       // 13: stream.video.coordinator.server_v1_rpc.DeletePushProviderRequest
	(*DeletePushProviderResponse)(nil),      // 14: stream.video.coordinator.server_v1_rpc.DeletePushProviderResponse
	(*DeleteCallTypeRequest)(nil),           // 15: stream.video.coordinator.server_v1_rpc.DeleteCallTypeRequest
	(*DeleteCallTypeResponse)(nil),          // 16: stream.video.coordinator.server_v1_rpc.DeleteCallTypeResponse
	(*CreateCallTypeRequest)(nil),           // 17: stream.video.coordinator.server_v1_rpc.CreateCallTypeRequest
	(*CreateCallTypeResponse)(nil),          // 18: stream.video.coordinator.server_v1_rpc.CreateCallTypeResponse
	(*GetCallTypeRequest)(nil),              // 19: stream.video.coordinator.server_v1_rpc.GetCallTypeRequest
	(*GetCallTypeResponse)(nil),             // 20: stream.video.coordinator.server_v1_rpc.GetCallTypeResponse
	(*QueryCallTypesRequest)(nil),           // 21: stream.video.coordinator.server_v1_rpc.QueryCallTypesRequest
	(*QueryCallTypesResponse)(nil),          // 22: stream.video.coordinator.server_v1_rpc.QueryCallTypesResponse
	(*UpdateCallTypeRequest)(nil),           // 23: stream.video.coordinator.server_v1_rpc.UpdateCallTypeRequest
	(*UpdateCallTypeResponse)(nil),          // 24: stream.video.coordinator.server_v1_rpc.UpdateCallTypeResponse
	(*CreateCallRequest)(nil),               // 25: stream.video.coordinator.server_v1_rpc.CreateCallRequest
	(*CreateUserRequest)(nil),               // 26: stream.video.coordinator.server_v1_rpc.CreateUserRequest
	(*CreateOrUpdateUsersRequest)(nil),      // 27: stream.video.coordinator.server_v1_rpc.CreateOrUpdateUsersRequest
	(*CreateOrUpdateUsersResponse)(nil),     // 28: stream.video.coordinator.server_v1_rpc.CreateOrUpdateUsersResponse
	(*DeleteUserRequest)(nil),               // 29: stream.video.coordinator.server_v1_rpc.DeleteUserRequest
	(*ExportUserRequest)(nil),               // 30: stream.video.coordinator.server_v1_rpc.ExportUserRequest
	(*ExportUserResponse)(nil),              // 31: stream.video.coordinator.server_v1_rpc.ExportUserResponse
	(*DeleteUserResponse)(nil),              // 32: stream.video.coordinator.server_v1_rpc.DeleteUserResponse
	(*CreateUserResponse)(nil),              // 33: stream.video.coordinator.server_v1_rpc.CreateUserResponse
	(*UserCapability)(nil),                  // 34: stream.video.coordinator.server_v1_rpc.UserCapability
	(*StartBroadcastRequest)(nil),           // 35: stream.video.coordinator.server_v1_rpc.StartBroadcastRequest
	(*StartBroadcastResponse)(nil),          // 36: stream.video.coordinator.server_v1_rpc.StartBroadcastResponse
	(*StopBroadcastRequest)(nil),            // 37: stream.video.coordinator.server_v1_rpc.StopBroadcastRequest
	(*StopBroadcastResponse)(nil),           // 38: stream.video.coordinator.server_v1_rpc.StopBroadcastResponse
	(*StoreLatencyRequest)(nil),             // 39: stream.video.coordinator.server_v1_rpc.StoreLatencyRequest
	(*StoreLatencyResponse)(nil),            // 40: stream.video.coordinator.server_v1_rpc.StoreLatencyResponse
	(*StartRecordingRequest)(nil),           // 41: stream.video.coordinator.server_v1_rpc.StartRecordingRequest
	(*StartRecordingResponse)(nil),          // 42: stream.video.coordinator.server_v1_rpc.StartRecordingResponse
	(*StopRecordingRequest)(nil),            // 43: stream.video.coordinator.server_v1_rpc.StopRecordingRequest
	(*StopRecordingResponse)(nil),           // 44: stream.video.coordinator.server_v1_rpc.StopRecordingResponse
	(*GetRecordingsRequest)(nil),            // 45: stream.video.coordinator.server_v1_rpc.GetRecordingsRequest
	(*GetRecordingsResponse)(nil),           // 46: stream.video.coordinator.server_v1_rpc.GetRecordingsResponse
	(*DeleteRecordingRequest)(nil),          // 47: stream.video.coordinator.server_v1_rpc.DeleteRecordingRequest
	(*DeleteRecordingResponse)(nil),         // 48: stream.video.coordinator.server_v1_rpc.DeleteRecordingResponse
	(*QueryCallTimelineEventsRequest)(nil),  // 49: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsRequest
	(*QueryCallTimelineEventsResponse)(nil), // 50: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse
	(*GetRecordingsResponse_Recording)(nil), // 51: stream.video.coordinator.server_v1_rpc.GetRecordingsResponse.Recording
	(*app_v1.App)(nil),                      // 52: stream.video.coordinator.app_v1.App
	(*app_v1.WebhookSettings)(nil),          // 53: stream.video.coordinator.app_v1.WebhookSettings
	(*push_v1.ApnCredentials)(nil),          // 54: stream.video.coordinator.push_v1.ApnCredentials
	(*push_v1.FirebaseCredentials)(nil),     // 55: stream.video.coordinator.push_v1.FirebaseCredentials
	(*push_v1.HuaweiCredentials)(nil),       // 56: stream.video.coordinator.push_v1.HuaweiCredentials
	(*push_v1.XiaomiCredentials)(nil),       // 57: stream.video.coordinator.push_v1.XiaomiCredentials
	(*push_v1.PushProvider)(nil),            // 58: stream.video.coordinator.push_v1.PushProvider
	(*call_v1.CallOptions)(nil),             // 59: stream.video.coordinator.call_v1.CallOptions
	(*call_v1.CallType)(nil),                // 60: stream.video.coordinator.call_v1.CallType
	(*wrapperspb.BoolValue)(nil),            // 61: google.protobuf.BoolValue
	(*broadcast_v1.RTMPOptions)(nil),        // 62: stream.video.coordinator.broadcast_v1.RTMPOptions
	(*user_v1.User)(nil),                    // 63: stream.video.coordinator.user_v1.User
	(*broadcast_v1.Broadcast)(nil),          // 64: stream.video.coordinator.broadcast_v1.Broadcast
	(*durationpb.Duration)(nil),             // 65: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),           // 66: google.protobuf.Timestamp
	(*stat_v1.CallParticipantTimeline)(nil), // 67: stream.video.coordinator.stat_v1.CallParticipantTimeline
}
var file_video_coordinator_server_v1_rpc_server_rpc_proto_depIdxs = []int32{
	52, // 0: stream.video.coordinator.server_v1_rpc.GetAppResponse.app:type_name -> stream.video.coordinator.app_v1.App
	53, // 1: stream.video.coordinator.server_v1_rpc.UpdateAppRequest.webhook:type_name -> stream.video.coordinator.app_v1.WebhookSettings
	52, // 2: stream.video.coordinator.server_v1_rpc.UpdateAppResponse.app:type_name -> stream.video.coordinator.app_v1.App
	54, // 3: stream.video.coordinator.server_v1_rpc.PushProviderInput.apn:type_name -> stream.video.coordinator.push_v1.ApnCredentials
	55, // 4: stream.video.coordinator.server_v1_rpc.PushProviderInput.firebase:type_name -> stream.video.coordinator.push_v1.FirebaseCredentials
	56, // 5: stream.video.coordinator.server_v1_rpc.PushProviderInput.huawei:type_name -> stream.video.coordinator.push_v1.HuaweiCredentials
	57, // 6: stream.video.coordinator.server_v1_rpc.PushProviderInput.xiaomi:type_name -> stream.video.coordinator.push_v1.XiaomiCredentials
	4,  // 7: stream.video.coordinator.server_v1_rpc.CreatePushProviderRequest.input:type_name -> stream.video.coordinator.server_v1_rpc.PushProviderInput
	58, // 8: stream.video.coordinator.server_v1_rpc.CreatePushProviderResponse.provider:type_name -> stream.video.coordinator.push_v1.PushProvider
	58, // 9: stream.video.coordinator.server_v1_rpc.GetPushProviderResponse.provider:type_name -> stream.video.coordinator.push_v1.PushProvider
	58, // 10: stream.video.coordinator.server_v1_rpc.QueryPushProvidersResponse.providers:type_name -> stream.video.coordinator.push_v1.PushProvider
	4,  // 11: stream.video.coordinator.server_v1_rpc.UpdatePushProviderRequest.input:type_name -> stream.video.coordinator.server_v1_rpc.PushProviderInput
	58, // 12: stream.video.coordinator.server_v1_rpc.UpdatePushProviderResponse.provider:type_name -> stream.video.coordinator.push_v1.PushProvider
	59, // 13: stream.video.coordinator.server_v1_rpc.CreateCallTypeRequest.options:type_name -> stream.video.coordinator.call_v1.CallOptions
	60, // 14: stream.video.coordinator.server_v1_rpc.CreateCallTypeResponse.call_type:type_name -> stream.video.coordinator.call_v1.CallType
	60, // 15: stream.video.coordinator.server_v1_rpc.GetCallTypeResponse.call_type:type_name -> stream.video.coordinator.call_v1.CallType
	60, // 16: stream.video.coordinator.server_v1_rpc.QueryCallTypesResponse.call_types:type_name -> stream.video.coordinator.call_v1.CallType
	59, // 17: stream.video.coordinator.server_v1_rpc.UpdateCallTypeRequest.options:type_name -> stream.video.coordinator.call_v1.CallOptions
	60, // 18: stream.video.coordinator.server_v1_rpc.UpdateCallTypeResponse.call_type:type_name -> stream.video.coordinator.call_v1.CallType
	61, // 19: stream.video.coordinator.server_v1_rpc.CreateCallRequest.hls_broadcast:type_name -> google.protobuf.BoolValue
	62, // 20: stream.video.coordinator.server_v1_rpc.CreateCallRequest.rtmp:type_name -> stream.video.coordinator.broadcast_v1.RTMPOptions
	61, // 21: stream.video.coordinator.server_v1_rpc.CreateCallRequest.recording:type_name -> google.protobuf.BoolValue
	61, // 22: stream.video.coordinator.server_v1_rpc.CreateCallRequest.notify:type_name -> google.protobuf.BoolValue
	26, // 23: stream.video.coordinator.server_v1_rpc.CreateOrUpdateUsersRequest.users:type_name -> stream.video.coordinator.server_v1_rpc.CreateUserRequest
	63, // 24: stream.video.coordinator.server_v1_rpc.CreateOrUpdateUsersResponse.users:type_name -> stream.video.coordinator.user_v1.User
	63, // 25: stream.video.coordinator.server_v1_rpc.CreateUserResponse.user:type_name -> stream.video.coordinator.user_v1.User
	62, // 26: stream.video.coordinator.server_v1_rpc.StartBroadcastRequest.rtmp:type_name -> stream.video.coordinator.broadcast_v1.RTMPOptions
	64, // 27: stream.video.coordinator.server_v1_rpc.StartBroadcastResponse.broadcast:type_name -> stream.video.coordinator.broadcast_v1.Broadcast
	51, // 28: stream.video.coordinator.server_v1_rpc.GetRecordingsResponse.recordings:type_name -> stream.video.coordinator.server_v1_rpc.GetRecordingsResponse.Recording
	65, // 29: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsRequest.duration:type_name -> google.protobuf.Duration
	66, // 30: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsRequest.since:type_name -> google.protobuf.Timestamp
	66, // 31: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse.start:type_name -> google.protobuf.Timestamp
	66, // 32: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse.end:type_name -> google.protobuf.Timestamp
	66, // 33: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse.next:type_name -> google.protobuf.Timestamp
	67, // 34: stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse.participant_events:type_name -> stream.video.coordinator.stat_v1.CallParticipantTimeline
	0,  // 35: stream.video.coordinator.server_v1_rpc.ServerRPC.GetApp:input_type -> stream.video.coordinator.server_v1_rpc.GetAppRequest
	2,  // 36: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdateApp:input_type -> stream.video.coordinator.server_v1_rpc.UpdateAppRequest
	17, // 37: stream.video.coordinator.server_v1_rpc.ServerRPC.CreateCallType:input_type -> stream.video.coordinator.server_v1_rpc.CreateCallTypeRequest
	19, // 38: stream.video.coordinator.server_v1_rpc.ServerRPC.GetCallType:input_type -> stream.video.coordinator.server_v1_rpc.GetCallTypeRequest
	21, // 39: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryCallTypes:input_type -> stream.video.coordinator.server_v1_rpc.QueryCallTypesRequest
	23, // 40: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdateCallType:input_type -> stream.video.coordinator.server_v1_rpc.UpdateCallTypeRequest
	15, // 41: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteCallType:input_type -> stream.video.coordinator.server_v1_rpc.DeleteCallTypeRequest
	5,  // 42: stream.video.coordinator.server_v1_rpc.ServerRPC.CreatePushProvider:input_type -> stream.video.coordinator.server_v1_rpc.CreatePushProviderRequest
	7,  // 43: stream.video.coordinator.server_v1_rpc.ServerRPC.GetPushProvider:input_type -> stream.video.coordinator.server_v1_rpc.GetPushProviderRequest
	9,  // 44: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryPushProviders:input_type -> stream.video.coordinator.server_v1_rpc.QueryPushProvidersRequest
	11, // 45: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdatePushProvider:input_type -> stream.video.coordinator.server_v1_rpc.UpdatePushProviderRequest
	13, // 46: stream.video.coordinator.server_v1_rpc.ServerRPC.DeletePushProvider:input_type -> stream.video.coordinator.server_v1_rpc.DeletePushProviderRequest
	35, // 47: stream.video.coordinator.server_v1_rpc.ServerRPC.StartBroadcast:input_type -> stream.video.coordinator.server_v1_rpc.StartBroadcastRequest
	37, // 48: stream.video.coordinator.server_v1_rpc.ServerRPC.StopBroadcast:input_type -> stream.video.coordinator.server_v1_rpc.StopBroadcastRequest
	41, // 49: stream.video.coordinator.server_v1_rpc.ServerRPC.StartRecording:input_type -> stream.video.coordinator.server_v1_rpc.StartRecordingRequest
	43, // 50: stream.video.coordinator.server_v1_rpc.ServerRPC.StopRecording:input_type -> stream.video.coordinator.server_v1_rpc.StopRecordingRequest
	45, // 51: stream.video.coordinator.server_v1_rpc.ServerRPC.GetRecordings:input_type -> stream.video.coordinator.server_v1_rpc.GetRecordingsRequest
	47, // 52: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteRecording:input_type -> stream.video.coordinator.server_v1_rpc.DeleteRecordingRequest
	49, // 53: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryCallTimelineEvents:input_type -> stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsRequest
	26, // 54: stream.video.coordinator.server_v1_rpc.ServerRPC.CreateUser:input_type -> stream.video.coordinator.server_v1_rpc.CreateUserRequest
	29, // 55: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteUser:input_type -> stream.video.coordinator.server_v1_rpc.DeleteUserRequest
	30, // 56: stream.video.coordinator.server_v1_rpc.ServerRPC.ExportUser:input_type -> stream.video.coordinator.server_v1_rpc.ExportUserRequest
	1,  // 57: stream.video.coordinator.server_v1_rpc.ServerRPC.GetApp:output_type -> stream.video.coordinator.server_v1_rpc.GetAppResponse
	3,  // 58: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdateApp:output_type -> stream.video.coordinator.server_v1_rpc.UpdateAppResponse
	18, // 59: stream.video.coordinator.server_v1_rpc.ServerRPC.CreateCallType:output_type -> stream.video.coordinator.server_v1_rpc.CreateCallTypeResponse
	20, // 60: stream.video.coordinator.server_v1_rpc.ServerRPC.GetCallType:output_type -> stream.video.coordinator.server_v1_rpc.GetCallTypeResponse
	22, // 61: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryCallTypes:output_type -> stream.video.coordinator.server_v1_rpc.QueryCallTypesResponse
	24, // 62: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdateCallType:output_type -> stream.video.coordinator.server_v1_rpc.UpdateCallTypeResponse
	16, // 63: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteCallType:output_type -> stream.video.coordinator.server_v1_rpc.DeleteCallTypeResponse
	6,  // 64: stream.video.coordinator.server_v1_rpc.ServerRPC.CreatePushProvider:output_type -> stream.video.coordinator.server_v1_rpc.CreatePushProviderResponse
	8,  // 65: stream.video.coordinator.server_v1_rpc.ServerRPC.GetPushProvider:output_type -> stream.video.coordinator.server_v1_rpc.GetPushProviderResponse
	10, // 66: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryPushProviders:output_type -> stream.video.coordinator.server_v1_rpc.QueryPushProvidersResponse
	12, // 67: stream.video.coordinator.server_v1_rpc.ServerRPC.UpdatePushProvider:output_type -> stream.video.coordinator.server_v1_rpc.UpdatePushProviderResponse
	14, // 68: stream.video.coordinator.server_v1_rpc.ServerRPC.DeletePushProvider:output_type -> stream.video.coordinator.server_v1_rpc.DeletePushProviderResponse
	36, // 69: stream.video.coordinator.server_v1_rpc.ServerRPC.StartBroadcast:output_type -> stream.video.coordinator.server_v1_rpc.StartBroadcastResponse
	38, // 70: stream.video.coordinator.server_v1_rpc.ServerRPC.StopBroadcast:output_type -> stream.video.coordinator.server_v1_rpc.StopBroadcastResponse
	42, // 71: stream.video.coordinator.server_v1_rpc.ServerRPC.StartRecording:output_type -> stream.video.coordinator.server_v1_rpc.StartRecordingResponse
	44, // 72: stream.video.coordinator.server_v1_rpc.ServerRPC.StopRecording:output_type -> stream.video.coordinator.server_v1_rpc.StopRecordingResponse
	46, // 73: stream.video.coordinator.server_v1_rpc.ServerRPC.GetRecordings:output_type -> stream.video.coordinator.server_v1_rpc.GetRecordingsResponse
	48, // 74: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteRecording:output_type -> stream.video.coordinator.server_v1_rpc.DeleteRecordingResponse
	50, // 75: stream.video.coordinator.server_v1_rpc.ServerRPC.QueryCallTimelineEvents:output_type -> stream.video.coordinator.server_v1_rpc.QueryCallTimelineEventsResponse
	33, // 76: stream.video.coordinator.server_v1_rpc.ServerRPC.CreateUser:output_type -> stream.video.coordinator.server_v1_rpc.CreateUserResponse
	32, // 77: stream.video.coordinator.server_v1_rpc.ServerRPC.DeleteUser:output_type -> stream.video.coordinator.server_v1_rpc.DeleteUserResponse
	31, // 78: stream.video.coordinator.server_v1_rpc.ServerRPC.ExportUser:output_type -> stream.video.coordinator.server_v1_rpc.ExportUserResponse
	57, // [57:79] is the sub-list for method output_type
	35, // [35:57] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_video_coordinator_server_v1_rpc_server_rpc_proto_init() }
func file_video_coordinator_server_v1_rpc_server_rpc_proto_init() {
	if File_video_coordinator_server_v1_rpc_server_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushProviderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPushProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPushProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreLatencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreLatencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallTimelineEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallTimelineEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsResponse_Recording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PushProviderInput_Apn)(nil),
		(*PushProviderInput_Firebase)(nil),
		(*PushProviderInput_Huawei)(nil),
		(*PushProviderInput_Xiaomi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_coordinator_server_v1_rpc_server_rpc_proto_goTypes,
		DependencyIndexes: file_video_coordinator_server_v1_rpc_server_rpc_proto_depIdxs,
		MessageInfos:      file_video_coordinator_server_v1_rpc_server_rpc_proto_msgTypes,
	}.Build()
	File_video_coordinator_server_v1_rpc_server_rpc_proto = out.File
	file_video_coordinator_server_v1_rpc_server_rpc_proto_rawDesc = nil
	file_video_coordinator_server_v1_rpc_server_rpc_proto_goTypes = nil
	file_video_coordinator_server_v1_rpc_server_rpc_proto_depIdxs = nil
}
