// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: video/coordinator/client_v1_rpc/envelopes.proto

package client_v1_rpc

import (
	call_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/call_v1"
	member_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/member_v1"
	user_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/user_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CallEnvelope contains Call and all related information to it
// Only used in reponse types that return a single call
type CallEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All users referenced in the response
	Users map[string]*user_v1.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Call object
	Call *call_v1.Call `protobuf:"bytes,2,opt,name=call,proto3" json:"call,omitempty"`
	// Call details
	Details *call_v1.CallDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CallEnvelope) Reset() {
	*x = CallEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEnvelope) ProtoMessage() {}

func (x *CallEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEnvelope.ProtoReflect.Descriptor instead.
func (*CallEnvelope) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescGZIP(), []int{0}
}

func (x *CallEnvelope) GetUsers() map[string]*user_v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CallEnvelope) GetCall() *call_v1.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CallEnvelope) GetDetails() *call_v1.CallDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

// CallsEnvelope contains list of calls and all related information to them
// Only used in response types that return list of calls
type CallsEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All users referenced in the response
	Users map[string]*user_v1.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Ordered list of Call.call_cid
	CallCids []string `protobuf:"bytes,2,rep,name=call_cids,json=callCids,proto3" json:"call_cids,omitempty"`
	// Call objects, indexed by Call.call_cid
	Calls map[string]*call_v1.Call `protobuf:"bytes,3,rep,name=calls,proto3" json:"calls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Call details, indexed by Call.call_cid
	Details map[string]*call_v1.CallDetails `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CallsEnvelope) Reset() {
	*x = CallsEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallsEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallsEnvelope) ProtoMessage() {}

func (x *CallsEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallsEnvelope.ProtoReflect.Descriptor instead.
func (*CallsEnvelope) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescGZIP(), []int{1}
}

func (x *CallsEnvelope) GetUsers() map[string]*user_v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CallsEnvelope) GetCallCids() []string {
	if x != nil {
		return x.CallCids
	}
	return nil
}

func (x *CallsEnvelope) GetCalls() map[string]*call_v1.Call {
	if x != nil {
		return x.Calls
	}
	return nil
}

func (x *CallsEnvelope) GetDetails() map[string]*call_v1.CallDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

// CallsEnvelope contains list of members and all related information to them
// Only used in response types that return list of members
type MembersEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All users referenced in the response
	Users map[string]*user_v1.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Ordered list of Member.user_id
	MemberUserIds []string `protobuf:"bytes,2,rep,name=member_user_ids,json=memberUserIds,proto3" json:"member_user_ids,omitempty"`
	// Map of members indexed by Member.user_id
	Members map[string]*member_v1.Member `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MembersEnvelope) Reset() {
	*x = MembersEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersEnvelope) ProtoMessage() {}

func (x *MembersEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersEnvelope.ProtoReflect.Descriptor instead.
func (*MembersEnvelope) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescGZIP(), []int{2}
}

func (x *MembersEnvelope) GetUsers() map[string]*user_v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MembersEnvelope) GetMemberUserIds() []string {
	if x != nil {
		return x.MemberUserIds
	}
	return nil
}

func (x *MembersEnvelope) GetMembers() map[string]*member_v1.Member {
	if x != nil {
		return x.Members
	}
	return nil
}

var File_video_coordinator_client_v1_rpc_envelopes_proto protoreflect.FileDescriptor

var file_video_coordinator_client_v1_rpc_envelopes_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x26, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcc, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x55, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x12, 0x47, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x60, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9,
	0x04, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x56, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x43, 0x69, 0x64, 0x73, 0x12, 0x56, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x5c, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x60, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a,
	0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x69, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x03, 0x0a, 0x0f, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x58,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x5e, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x1a, 0x60, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x66, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescOnce sync.Once
	file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescData = file_video_coordinator_client_v1_rpc_envelopes_proto_rawDesc
)

func file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescGZIP() []byte {
	file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescOnce.Do(func() {
		file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescData)
	})
	return file_video_coordinator_client_v1_rpc_envelopes_proto_rawDescData
}

var file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_video_coordinator_client_v1_rpc_envelopes_proto_goTypes = []interface{}{
	(*CallEnvelope)(nil),        // 0: stream.video.coordinator.client_v1_rpc.CallEnvelope
	(*CallsEnvelope)(nil),       // 1: stream.video.coordinator.client_v1_rpc.CallsEnvelope
	(*MembersEnvelope)(nil),     // 2: stream.video.coordinator.client_v1_rpc.MembersEnvelope
	nil,                         // 3: stream.video.coordinator.client_v1_rpc.CallEnvelope.UsersEntry
	nil,                         // 4: stream.video.coordinator.client_v1_rpc.CallsEnvelope.UsersEntry
	nil,                         // 5: stream.video.coordinator.client_v1_rpc.CallsEnvelope.CallsEntry
	nil,                         // 6: stream.video.coordinator.client_v1_rpc.CallsEnvelope.DetailsEntry
	nil,                         // 7: stream.video.coordinator.client_v1_rpc.MembersEnvelope.UsersEntry
	nil,                         // 8: stream.video.coordinator.client_v1_rpc.MembersEnvelope.MembersEntry
	(*call_v1.Call)(nil),        // 9: stream.video.coordinator.call_v1.Call
	(*call_v1.CallDetails)(nil), // 10: stream.video.coordinator.call_v1.CallDetails
	(*user_v1.User)(nil),        // 11: stream.video.coordinator.user_v1.User
	(*member_v1.Member)(nil),    // 12: stream.video.coordinator.member_v1.Member
}
var file_video_coordinator_client_v1_rpc_envelopes_proto_depIdxs = []int32{
	3,  // 0: stream.video.coordinator.client_v1_rpc.CallEnvelope.users:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope.UsersEntry
	9,  // 1: stream.video.coordinator.client_v1_rpc.CallEnvelope.call:type_name -> stream.video.coordinator.call_v1.Call
	10, // 2: stream.video.coordinator.client_v1_rpc.CallEnvelope.details:type_name -> stream.video.coordinator.call_v1.CallDetails
	4,  // 3: stream.video.coordinator.client_v1_rpc.CallsEnvelope.users:type_name -> stream.video.coordinator.client_v1_rpc.CallsEnvelope.UsersEntry
	5,  // 4: stream.video.coordinator.client_v1_rpc.CallsEnvelope.calls:type_name -> stream.video.coordinator.client_v1_rpc.CallsEnvelope.CallsEntry
	6,  // 5: stream.video.coordinator.client_v1_rpc.CallsEnvelope.details:type_name -> stream.video.coordinator.client_v1_rpc.CallsEnvelope.DetailsEntry
	7,  // 6: stream.video.coordinator.client_v1_rpc.MembersEnvelope.users:type_name -> stream.video.coordinator.client_v1_rpc.MembersEnvelope.UsersEntry
	8,  // 7: stream.video.coordinator.client_v1_rpc.MembersEnvelope.members:type_name -> stream.video.coordinator.client_v1_rpc.MembersEnvelope.MembersEntry
	11, // 8: stream.video.coordinator.client_v1_rpc.CallEnvelope.UsersEntry.value:type_name -> stream.video.coordinator.user_v1.User
	11, // 9: stream.video.coordinator.client_v1_rpc.CallsEnvelope.UsersEntry.value:type_name -> stream.video.coordinator.user_v1.User
	9,  // 10: stream.video.coordinator.client_v1_rpc.CallsEnvelope.CallsEntry.value:type_name -> stream.video.coordinator.call_v1.Call
	10, // 11: stream.video.coordinator.client_v1_rpc.CallsEnvelope.DetailsEntry.value:type_name -> stream.video.coordinator.call_v1.CallDetails
	11, // 12: stream.video.coordinator.client_v1_rpc.MembersEnvelope.UsersEntry.value:type_name -> stream.video.coordinator.user_v1.User
	12, // 13: stream.video.coordinator.client_v1_rpc.MembersEnvelope.MembersEntry.value:type_name -> stream.video.coordinator.member_v1.Member
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_video_coordinator_client_v1_rpc_envelopes_proto_init() }
func file_video_coordinator_client_v1_rpc_envelopes_proto_init() {
	if File_video_coordinator_client_v1_rpc_envelopes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallsEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_coordinator_client_v1_rpc_envelopes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_video_coordinator_client_v1_rpc_envelopes_proto_goTypes,
		DependencyIndexes: file_video_coordinator_client_v1_rpc_envelopes_proto_depIdxs,
		MessageInfos:      file_video_coordinator_client_v1_rpc_envelopes_proto_msgTypes,
	}.Build()
	File_video_coordinator_client_v1_rpc_envelopes_proto = out.File
	file_video_coordinator_client_v1_rpc_envelopes_proto_rawDesc = nil
	file_video_coordinator_client_v1_rpc_envelopes_proto_goTypes = nil
	file_video_coordinator_client_v1_rpc_envelopes_proto_depIdxs = nil
}
