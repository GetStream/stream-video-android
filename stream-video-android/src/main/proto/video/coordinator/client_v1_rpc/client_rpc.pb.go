// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: video/coordinator/client_v1_rpc/client_rpc.proto

package client_v1_rpc

import (
	call_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/call_v1"
	edge_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/edge_v1"
	push_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/push_v1"
	utils_v1 "github.com/GetStream/video-proto/protobuf/video/coordinator/utils_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberField int32

const (
	MemberField_MEMBER_FIELD_UNSPECIFIED MemberField = 0
	MemberField_MEMBER_FIELD_ROLE        MemberField = 1
	MemberField_MEMBER_FIELD_CUSTOM      MemberField = 2
)

// Enum value maps for MemberField.
var (
	MemberField_name = map[int32]string{
		0: "MEMBER_FIELD_UNSPECIFIED",
		1: "MEMBER_FIELD_ROLE",
		2: "MEMBER_FIELD_CUSTOM",
	}
	MemberField_value = map[string]int32{
		"MEMBER_FIELD_UNSPECIFIED": 0,
		"MEMBER_FIELD_ROLE":        1,
		"MEMBER_FIELD_CUSTOM":      2,
	}
)

func (x MemberField) Enum() *MemberField {
	p := new(MemberField)
	*p = x
	return p
}

func (x MemberField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberField) Descriptor() protoreflect.EnumDescriptor {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes[0].Descriptor()
}

func (MemberField) Type() protoreflect.EnumType {
	return &file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes[0]
}

func (x MemberField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberField.Descriptor instead.
func (MemberField) EnumDescriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{0}
}

type UserEventType int32

const (
	UserEventType_USER_EVENT_TYPE_UNSPECIFIED    UserEventType = 0
	UserEventType_USER_EVENT_TYPE_ACCEPTED_CALL  UserEventType = 1
	UserEventType_USER_EVENT_TYPE_REJECTED_CALL  UserEventType = 2
	UserEventType_USER_EVENT_TYPE_CANCELLED_CALL UserEventType = 3
)

// Enum value maps for UserEventType.
var (
	UserEventType_name = map[int32]string{
		0: "USER_EVENT_TYPE_UNSPECIFIED",
		1: "USER_EVENT_TYPE_ACCEPTED_CALL",
		2: "USER_EVENT_TYPE_REJECTED_CALL",
		3: "USER_EVENT_TYPE_CANCELLED_CALL",
	}
	UserEventType_value = map[string]int32{
		"USER_EVENT_TYPE_UNSPECIFIED":    0,
		"USER_EVENT_TYPE_ACCEPTED_CALL":  1,
		"USER_EVENT_TYPE_REJECTED_CALL":  2,
		"USER_EVENT_TYPE_CANCELLED_CALL": 3,
	}
)

func (x UserEventType) Enum() *UserEventType {
	p := new(UserEventType)
	*p = x
	return p
}

func (x UserEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes[1].Descriptor()
}

func (UserEventType) Type() protoreflect.EnumType {
	return &file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes[1]
}

func (x UserEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserEventType.Descriptor instead.
func (UserEventType) EnumDescriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{1}
}

type GetCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallCid string `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
}

func (x *GetCallRequest) Reset() {
	*x = GetCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallRequest) ProtoMessage() {}

func (x *GetCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallRequest.ProtoReflect.Descriptor instead.
func (*GetCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetCallRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

type GetCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *GetCallResponse) Reset() {
	*x = GetCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallResponse) ProtoMessage() {}

func (x *GetCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallResponse.ProtoReflect.Descriptor instead.
func (*GetCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetCallResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

type MemberInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role       string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	CustomJson []byte `protobuf:"bytes,2,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
}

func (x *MemberInput) Reset() {
	*x = MemberInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInput) ProtoMessage() {}

func (x *MemberInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInput.ProtoReflect.Descriptor instead.
func (*MemberInput) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *MemberInput) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MemberInput) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

type UpdateCallMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallCid string                  `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	Members map[string]*MemberInput `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Fields  []MemberField           `protobuf:"varint,3,rep,packed,name=fields,proto3,enum=stream.video.coordinator.client_v1_rpc.MemberField" json:"fields,omitempty"`
}

func (x *UpdateCallMembersRequest) Reset() {
	*x = UpdateCallMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallMembersRequest) ProtoMessage() {}

func (x *UpdateCallMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallMembersRequest.ProtoReflect.Descriptor instead.
func (*UpdateCallMembersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCallMembersRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *UpdateCallMembersRequest) GetMembers() map[string]*MemberInput {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *UpdateCallMembersRequest) GetFields() []MemberField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UpdateCallMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCallMembersResponse) Reset() {
	*x = UpdateCallMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallMembersResponse) ProtoMessage() {}

func (x *UpdateCallMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallMembersResponse.ProtoReflect.Descriptor instead.
func (*UpdateCallMembersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{4}
}

type DeleteCallMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallCid string   `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	UserIds []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *DeleteCallMembersRequest) Reset() {
	*x = DeleteCallMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallMembersRequest) ProtoMessage() {}

func (x *DeleteCallMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallMembersRequest.ProtoReflect.Descriptor instead.
func (*DeleteCallMembersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCallMembersRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *DeleteCallMembersRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type DeleteCallMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCallMembersResponse) Reset() {
	*x = DeleteCallMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallMembersResponse) ProtoMessage() {}

func (x *DeleteCallMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallMembersResponse.ProtoReflect.Descriptor instead.
func (*DeleteCallMembersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{6}
}

// A message that carries data for call creation
type CreateCallInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call properties to set
	Call *CallInput `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	// Members to add to the created call
	Members map[string]*MemberInput `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Ringing option, used to signal to clients' UI
	Ring *bool `protobuf:"varint,4,opt,name=ring,proto3,oneof" json:"ring,omitempty"`
}

func (x *CreateCallInput) Reset() {
	*x = CreateCallInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallInput) ProtoMessage() {}

func (x *CreateCallInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallInput.ProtoReflect.Descriptor instead.
func (*CreateCallInput) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCallInput) GetCall() *CallInput {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CreateCallInput) GetMembers() map[string]*MemberInput {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateCallInput) GetRing() bool {
	if x != nil && x.Ring != nil {
		return *x.Ring
	}
	return false
}

// A request message for GetOrCreateCall endpoint
type CreateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Call ID. If empty, will be generated as UUIDv4
	Id *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Call creation input, only used if the call does not exist
	Input *CreateCallInput `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *CreateCallRequest) Reset() {
	*x = CreateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallRequest) ProtoMessage() {}

func (x *CreateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallRequest.ProtoReflect.Descriptor instead.
func (*CreateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateCallRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CreateCallRequest) GetInput() *CreateCallInput {
	if x != nil {
		return x.Input
	}
	return nil
}

// A request message for GetOrCreateCall endpoint
type GetOrCreateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Call ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Call creation input, only used if the call does not exist
	Input *CreateCallInput `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *GetOrCreateCallRequest) Reset() {
	*x = GetOrCreateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateCallRequest) ProtoMessage() {}

func (x *GetOrCreateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateCallRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetOrCreateCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOrCreateCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrCreateCallRequest) GetInput() *CreateCallInput {
	if x != nil {
		return x.Input
	}
	return nil
}

// A request message for JoinCall endpoint
type JoinCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Call ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Call creation input, only used if the call does not exist
	Input *CreateCallInput `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// Preferred client datacenter. This is optional and when set, preferred datacenter selection is not guaranteed
	DatacenterId string `protobuf:"bytes,4,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`
}

func (x *JoinCallRequest) Reset() {
	*x = JoinCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCallRequest) ProtoMessage() {}

func (x *JoinCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCallRequest.ProtoReflect.Descriptor instead.
func (*JoinCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *JoinCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *JoinCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JoinCallRequest) GetInput() *CreateCallInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *JoinCallRequest) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

// A request message for GetOrCreateCall endpoint
type JoinCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	// Whether a call was created
	Created bool `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	// A list of endpoints to measure latency
	Edges []*edge_v1.Edge `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *JoinCallResponse) Reset() {
	*x = JoinCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCallResponse) ProtoMessage() {}

func (x *JoinCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCallResponse.ProtoReflect.Descriptor instead.
func (*JoinCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *JoinCallResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *JoinCallResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

func (x *JoinCallResponse) GetEdges() []*edge_v1.Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// Represents all updatable room fields
type CallInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Custom JSON object that is stored in this call
	// All users with read permissions will have access to this object
	CustomJson []byte `protobuf:"bytes,1,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
	// Call options to set
	Options *call_v1.CallOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CallInput) Reset() {
	*x = CallInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallInput) ProtoMessage() {}

func (x *CallInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallInput.ProtoReflect.Descriptor instead.
func (*CallInput) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *CallInput) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

func (x *CallInput) GetOptions() *call_v1.CallOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetOrCreateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	// Whether a call was created
	Created bool `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *GetOrCreateCallResponse) Reset() {
	*x = GetOrCreateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateCallResponse) ProtoMessage() {}

func (x *GetOrCreateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateCallResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrCreateCallResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *GetOrCreateCallResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

type UpdateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallCid string     `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	Input   *CallInput `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *UpdateCallRequest) Reset() {
	*x = UpdateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallRequest) ProtoMessage() {}

func (x *UpdateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallRequest.ProtoReflect.Descriptor instead.
func (*UpdateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCallRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *UpdateCallRequest) GetInput() *CallInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type UpdateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *UpdateCallResponse) Reset() {
	*x = UpdateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallResponse) ProtoMessage() {}

func (x *UpdateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallResponse.ProtoReflect.Descriptor instead.
func (*UpdateCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateCallResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

type CreateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CreateCallResponse) Reset() {
	*x = CreateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallResponse) ProtoMessage() {}

func (x *CreateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallResponse.ProtoReflect.Descriptor instead.
func (*CreateCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCallResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

type QueryCallsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MqJson []byte           `protobuf:"bytes,1,opt,name=mq_json,json=mqJson,proto3" json:"mq_json,omitempty"`
	Limit  *int32           `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Sorts  []*utils_v1.Sort `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
}

func (x *QueryCallsRequest) Reset() {
	*x = QueryCallsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallsRequest) ProtoMessage() {}

func (x *QueryCallsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallsRequest.ProtoReflect.Descriptor instead.
func (*QueryCallsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *QueryCallsRequest) GetMqJson() []byte {
	if x != nil {
		return x.MqJson
	}
	return nil
}

func (x *QueryCallsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *QueryCallsRequest) GetSorts() []*utils_v1.Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type QueryCallsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls *CallsEnvelope `protobuf:"bytes,1,opt,name=calls,proto3" json:"calls,omitempty"`
}

func (x *QueryCallsResponse) Reset() {
	*x = QueryCallsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCallsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallsResponse) ProtoMessage() {}

func (x *QueryCallsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallsResponse.ProtoReflect.Descriptor instead.
func (*QueryCallsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *QueryCallsResponse) GetCalls() *CallsEnvelope {
	if x != nil {
		return x.Calls
	}
	return nil
}

type QueryMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MqJson []byte           `protobuf:"bytes,1,opt,name=mq_json,json=mqJson,proto3" json:"mq_json,omitempty"`
	Limit  *int32           `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Sorts  []*utils_v1.Sort `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
}

func (x *QueryMembersRequest) Reset() {
	*x = QueryMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMembersRequest) ProtoMessage() {}

func (x *QueryMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMembersRequest.ProtoReflect.Descriptor instead.
func (*QueryMembersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *QueryMembersRequest) GetMqJson() []byte {
	if x != nil {
		return x.MqJson
	}
	return nil
}

func (x *QueryMembersRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *QueryMembersRequest) GetSorts() []*utils_v1.Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type QueryMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members *MembersEnvelope `protobuf:"bytes,1,opt,name=members,proto3" json:"members,omitempty"`
}

func (x *QueryMembersResponse) Reset() {
	*x = QueryMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMembersResponse) ProtoMessage() {}

func (x *QueryMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMembersResponse.ProtoReflect.Descriptor instead.
func (*QueryMembersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *QueryMembersResponse) GetMembers() *MembersEnvelope {
	if x != nil {
		return x.Members
	}
	return nil
}

// A request message for GetCallEdgeServer endpoint
type GetCallEdgeServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call CID to get SFU for
	CallCid string `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	// Latency measurement results
	// Optional
	Measurements *edge_v1.LatencyMeasurements `protobuf:"bytes,2,opt,name=measurements,proto3" json:"measurements,omitempty"`
}

func (x *GetCallEdgeServerRequest) Reset() {
	*x = GetCallEdgeServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallEdgeServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallEdgeServerRequest) ProtoMessage() {}

func (x *GetCallEdgeServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallEdgeServerRequest.ProtoReflect.Descriptor instead.
func (*GetCallEdgeServerRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *GetCallEdgeServerRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *GetCallEdgeServerRequest) GetMeasurements() *edge_v1.LatencyMeasurements {
	if x != nil {
		return x.Measurements
	}
	return nil
}

type GetCallEdgeServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *CallEnvelope `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	// Call edge server credentials
	Credentials *edge_v1.Credentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *GetCallEdgeServerResponse) Reset() {
	*x = GetCallEdgeServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallEdgeServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallEdgeServerResponse) ProtoMessage() {}

func (x *GetCallEdgeServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallEdgeServerResponse.ProtoReflect.Descriptor instead.
func (*GetCallEdgeServerResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *GetCallEdgeServerResponse) GetCall() *CallEnvelope {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *GetCallEdgeServerResponse) GetCredentials() *edge_v1.Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input *push_v1.DeviceInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDeviceRequest) GetInput() *push_v1.DeviceInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *push_v1.Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CreateDeviceResponse) Reset() {
	*x = CreateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceResponse) ProtoMessage() {}

func (x *CreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *CreateDeviceResponse) GetDevice() *push_v1.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{26}
}

type QueryDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryDevicesRequest) Reset() {
	*x = QueryDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDevicesRequest) ProtoMessage() {}

func (x *QueryDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDevicesRequest.ProtoReflect.Descriptor instead.
func (*QueryDevicesRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{27}
}

type QueryDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*push_v1.Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *QueryDevicesResponse) Reset() {
	*x = QueryDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDevicesResponse) ProtoMessage() {}

func (x *QueryDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDevicesResponse.ProtoReflect.Descriptor instead.
func (*QueryDevicesResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *QueryDevicesResponse) GetDevices() []*push_v1.Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type SendEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call cid
	CallCid string `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	// The type of event
	EventType UserEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=stream.video.coordinator.client_v1_rpc.UserEventType" json:"event_type,omitempty"`
}

func (x *SendEventRequest) Reset() {
	*x = SendEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventRequest) ProtoMessage() {}

func (x *SendEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventRequest.ProtoReflect.Descriptor instead.
func (*SendEventRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *SendEventRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *SendEventRequest) GetEventType() UserEventType {
	if x != nil {
		return x.EventType
	}
	return UserEventType_USER_EVENT_TYPE_UNSPECIFIED
}

type SendEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendEventResponse) Reset() {
	*x = SendEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResponse) ProtoMessage() {}

func (x *SendEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResponse.ProtoReflect.Descriptor instead.
func (*SendEventResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{30}
}

type SendCustomEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call cid
	CallCid string `protobuf:"bytes,1,opt,name=call_cid,json=callCid,proto3" json:"call_cid,omitempty"`
	// The type of event
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The data of the event
	DataJson []byte `protobuf:"bytes,3,opt,name=data_json,json=dataJson,proto3" json:"data_json,omitempty"`
}

func (x *SendCustomEventRequest) Reset() {
	*x = SendCustomEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomEventRequest) ProtoMessage() {}

func (x *SendCustomEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomEventRequest.ProtoReflect.Descriptor instead.
func (*SendCustomEventRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *SendCustomEventRequest) GetCallCid() string {
	if x != nil {
		return x.CallCid
	}
	return ""
}

func (x *SendCustomEventRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendCustomEventRequest) GetDataJson() []byte {
	if x != nil {
		return x.DataJson
	}
	return nil
}

type SendCustomEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendCustomEventResponse) Reset() {
	*x = SendCustomEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomEventResponse) ProtoMessage() {}

func (x *SendCustomEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomEventResponse.ProtoReflect.Descriptor instead.
func (*SendCustomEventResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{32}
}

type ReportCallStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call type
	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	// The call id
	CallId string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// A WebRTC Stats report encoded as a JSON string, as defined in https://www.w3.org/TR/webrtc/#dom-rtcstatsreport
	StatsJson []byte `protobuf:"bytes,3,opt,name=stats_json,json=statsJson,proto3" json:"stats_json,omitempty"`
}

func (x *ReportCallStatsRequest) Reset() {
	*x = ReportCallStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCallStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCallStatsRequest) ProtoMessage() {}

func (x *ReportCallStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCallStatsRequest.ProtoReflect.Descriptor instead.
func (*ReportCallStatsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *ReportCallStatsRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReportCallStatsRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReportCallStatsRequest) GetStatsJson() []byte {
	if x != nil {
		return x.StatsJson
	}
	return nil
}

type ReportCallStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportCallStatsResponse) Reset() {
	*x = ReportCallStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCallStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCallStatsResponse) ProtoMessage() {}

func (x *ReportCallStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCallStatsResponse.ProtoReflect.Descriptor instead.
func (*ReportCallStatsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{34}
}

type GetCallStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *GetCallStatsRequest) Reset() {
	*x = GetCallStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallStatsRequest) ProtoMessage() {}

func (x *GetCallStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallStatsRequest.ProtoReflect.Descriptor instead.
func (*GetCallStatsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *GetCallStatsRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *GetCallStatsRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type ReportIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// Optional description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CustomJson  []byte `protobuf:"bytes,4,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
}

func (x *ReportIssueRequest) Reset() {
	*x = ReportIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportIssueRequest) ProtoMessage() {}

func (x *ReportIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportIssueRequest.ProtoReflect.Descriptor instead.
func (*ReportIssueRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *ReportIssueRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReportIssueRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReportIssueRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReportIssueRequest) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

type ReportIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportIssueResponse) Reset() {
	*x = ReportIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportIssueResponse) ProtoMessage() {}

func (x *ReportIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportIssueResponse.ProtoReflect.Descriptor instead.
func (*ReportIssueResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{37}
}

type ReviewCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// Rating between 0 and 5 stars.
	Stars float32 `protobuf:"fixed32,3,opt,name=stars,proto3" json:"stars,omitempty"`
	// Optional description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Optional custom data.
	CustomJson []byte `protobuf:"bytes,5,opt,name=custom_json,json=customJson,proto3" json:"custom_json,omitempty"`
}

func (x *ReviewCallRequest) Reset() {
	*x = ReviewCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCallRequest) ProtoMessage() {}

func (x *ReviewCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCallRequest.ProtoReflect.Descriptor instead.
func (*ReviewCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *ReviewCallRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReviewCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReviewCallRequest) GetStars() float32 {
	if x != nil {
		return x.Stars
	}
	return 0
}

func (x *ReviewCallRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReviewCallRequest) GetCustomJson() []byte {
	if x != nil {
		return x.CustomJson
	}
	return nil
}

type ReviewCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReviewCallResponse) Reset() {
	*x = ReviewCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCallResponse) ProtoMessage() {}

func (x *ReviewCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCallResponse.ProtoReflect.Descriptor instead.
func (*ReviewCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP(), []int{39}
}

var File_video_coordinator_client_v1_rpc_client_rpc_proto protoreflect.FileDescriptor

var file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDesc = []byte{
	0x0a, 0x30, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x26, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x76, 0x31, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x5f, 0x76, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43,
	0x69, 0x64, 0x22, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22,
	0x42, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a,
	0x73, 0x6f, 0x6e, 0x22, 0xdc, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x67, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x1a, 0x6f, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x50, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb,
	0x02, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x5e, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x72, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x1a, 0x6f, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x92, 0x01, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69,
	0x64, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x4d, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x10,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67,
	0x65, 0x73, 0x22, 0x75, 0x0a, 0x09, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x5e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x22, 0x5e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x71, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x71, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x05, 0x73,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x61, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x71, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x6d, 0x71, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72,
	0x74, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x69, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12,
	0x59, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x04, 0x63, 0x61,
	0x6c, 0x6c, 0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x5a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0x58, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5a, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x10,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x54, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x8d,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x15,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x5b, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x2a, 0x9a, 0x01,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x4c,
	0x4c, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f,
	0x43, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x32, 0xee, 0x12, 0x0a, 0x09, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x37, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x40, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x12, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x3b,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x40, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x40, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x80, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3e, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x12, 0x3a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x5f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescOnce sync.Once
	file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescData = file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDesc
)

func file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescGZIP() []byte {
	file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescOnce.Do(func() {
		file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescData)
	})
	return file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDescData
}

var file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_video_coordinator_client_v1_rpc_client_rpc_proto_goTypes = []interface{}{
	(MemberField)(0),                    // 0: stream.video.coordinator.client_v1_rpc.MemberField
	(UserEventType)(0),                  // 1: stream.video.coordinator.client_v1_rpc.UserEventType
	(*GetCallRequest)(nil),              // 2: stream.video.coordinator.client_v1_rpc.GetCallRequest
	(*GetCallResponse)(nil),             // 3: stream.video.coordinator.client_v1_rpc.GetCallResponse
	(*MemberInput)(nil),                 // 4: stream.video.coordinator.client_v1_rpc.MemberInput
	(*UpdateCallMembersRequest)(nil),    // 5: stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest
	(*UpdateCallMembersResponse)(nil),   // 6: stream.video.coordinator.client_v1_rpc.UpdateCallMembersResponse
	(*DeleteCallMembersRequest)(nil),    // 7: stream.video.coordinator.client_v1_rpc.DeleteCallMembersRequest
	(*DeleteCallMembersResponse)(nil),   // 8: stream.video.coordinator.client_v1_rpc.DeleteCallMembersResponse
	(*CreateCallInput)(nil),             // 9: stream.video.coordinator.client_v1_rpc.CreateCallInput
	(*CreateCallRequest)(nil),           // 10: stream.video.coordinator.client_v1_rpc.CreateCallRequest
	(*GetOrCreateCallRequest)(nil),      // 11: stream.video.coordinator.client_v1_rpc.GetOrCreateCallRequest
	(*JoinCallRequest)(nil),             // 12: stream.video.coordinator.client_v1_rpc.JoinCallRequest
	(*JoinCallResponse)(nil),            // 13: stream.video.coordinator.client_v1_rpc.JoinCallResponse
	(*CallInput)(nil),                   // 14: stream.video.coordinator.client_v1_rpc.CallInput
	(*GetOrCreateCallResponse)(nil),     // 15: stream.video.coordinator.client_v1_rpc.GetOrCreateCallResponse
	(*UpdateCallRequest)(nil),           // 16: stream.video.coordinator.client_v1_rpc.UpdateCallRequest
	(*UpdateCallResponse)(nil),          // 17: stream.video.coordinator.client_v1_rpc.UpdateCallResponse
	(*CreateCallResponse)(nil),          // 18: stream.video.coordinator.client_v1_rpc.CreateCallResponse
	(*QueryCallsRequest)(nil),           // 19: stream.video.coordinator.client_v1_rpc.QueryCallsRequest
	(*QueryCallsResponse)(nil),          // 20: stream.video.coordinator.client_v1_rpc.QueryCallsResponse
	(*QueryMembersRequest)(nil),         // 21: stream.video.coordinator.client_v1_rpc.QueryMembersRequest
	(*QueryMembersResponse)(nil),        // 22: stream.video.coordinator.client_v1_rpc.QueryMembersResponse
	(*GetCallEdgeServerRequest)(nil),    // 23: stream.video.coordinator.client_v1_rpc.GetCallEdgeServerRequest
	(*GetCallEdgeServerResponse)(nil),   // 24: stream.video.coordinator.client_v1_rpc.GetCallEdgeServerResponse
	(*CreateDeviceRequest)(nil),         // 25: stream.video.coordinator.client_v1_rpc.CreateDeviceRequest
	(*CreateDeviceResponse)(nil),        // 26: stream.video.coordinator.client_v1_rpc.CreateDeviceResponse
	(*DeleteDeviceRequest)(nil),         // 27: stream.video.coordinator.client_v1_rpc.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),        // 28: stream.video.coordinator.client_v1_rpc.DeleteDeviceResponse
	(*QueryDevicesRequest)(nil),         // 29: stream.video.coordinator.client_v1_rpc.QueryDevicesRequest
	(*QueryDevicesResponse)(nil),        // 30: stream.video.coordinator.client_v1_rpc.QueryDevicesResponse
	(*SendEventRequest)(nil),            // 31: stream.video.coordinator.client_v1_rpc.SendEventRequest
	(*SendEventResponse)(nil),           // 32: stream.video.coordinator.client_v1_rpc.SendEventResponse
	(*SendCustomEventRequest)(nil),      // 33: stream.video.coordinator.client_v1_rpc.SendCustomEventRequest
	(*SendCustomEventResponse)(nil),     // 34: stream.video.coordinator.client_v1_rpc.SendCustomEventResponse
	(*ReportCallStatsRequest)(nil),      // 35: stream.video.coordinator.client_v1_rpc.ReportCallStatsRequest
	(*ReportCallStatsResponse)(nil),     // 36: stream.video.coordinator.client_v1_rpc.ReportCallStatsResponse
	(*GetCallStatsRequest)(nil),         // 37: stream.video.coordinator.client_v1_rpc.GetCallStatsRequest
	(*ReportIssueRequest)(nil),          // 38: stream.video.coordinator.client_v1_rpc.ReportIssueRequest
	(*ReportIssueResponse)(nil),         // 39: stream.video.coordinator.client_v1_rpc.ReportIssueResponse
	(*ReviewCallRequest)(nil),           // 40: stream.video.coordinator.client_v1_rpc.ReviewCallRequest
	(*ReviewCallResponse)(nil),          // 41: stream.video.coordinator.client_v1_rpc.ReviewCallResponse
	nil,                                 // 42: stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest.MembersEntry
	nil,                                 // 43: stream.video.coordinator.client_v1_rpc.CreateCallInput.MembersEntry
	(*CallEnvelope)(nil),                // 44: stream.video.coordinator.client_v1_rpc.CallEnvelope
	(*edge_v1.Edge)(nil),                // 45: stream.video.coordinator.edge_v1.Edge
	(*call_v1.CallOptions)(nil),         // 46: stream.video.coordinator.call_v1.CallOptions
	(*utils_v1.Sort)(nil),               // 47: stream.video.coordinator.utils_v1.Sort
	(*CallsEnvelope)(nil),               // 48: stream.video.coordinator.client_v1_rpc.CallsEnvelope
	(*MembersEnvelope)(nil),             // 49: stream.video.coordinator.client_v1_rpc.MembersEnvelope
	(*edge_v1.LatencyMeasurements)(nil), // 50: stream.video.coordinator.edge_v1.LatencyMeasurements
	(*edge_v1.Credentials)(nil),         // 51: stream.video.coordinator.edge_v1.Credentials
	(*push_v1.DeviceInput)(nil),         // 52: stream.video.coordinator.push_v1.DeviceInput
	(*push_v1.Device)(nil),              // 53: stream.video.coordinator.push_v1.Device
}
var file_video_coordinator_client_v1_rpc_client_rpc_proto_depIdxs = []int32{
	44, // 0: stream.video.coordinator.client_v1_rpc.GetCallResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	42, // 1: stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest.members:type_name -> stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest.MembersEntry
	0,  // 2: stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest.fields:type_name -> stream.video.coordinator.client_v1_rpc.MemberField
	14, // 3: stream.video.coordinator.client_v1_rpc.CreateCallInput.call:type_name -> stream.video.coordinator.client_v1_rpc.CallInput
	43, // 4: stream.video.coordinator.client_v1_rpc.CreateCallInput.members:type_name -> stream.video.coordinator.client_v1_rpc.CreateCallInput.MembersEntry
	9,  // 5: stream.video.coordinator.client_v1_rpc.CreateCallRequest.input:type_name -> stream.video.coordinator.client_v1_rpc.CreateCallInput
	9,  // 6: stream.video.coordinator.client_v1_rpc.GetOrCreateCallRequest.input:type_name -> stream.video.coordinator.client_v1_rpc.CreateCallInput
	9,  // 7: stream.video.coordinator.client_v1_rpc.JoinCallRequest.input:type_name -> stream.video.coordinator.client_v1_rpc.CreateCallInput
	44, // 8: stream.video.coordinator.client_v1_rpc.JoinCallResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	45, // 9: stream.video.coordinator.client_v1_rpc.JoinCallResponse.edges:type_name -> stream.video.coordinator.edge_v1.Edge
	46, // 10: stream.video.coordinator.client_v1_rpc.CallInput.options:type_name -> stream.video.coordinator.call_v1.CallOptions
	44, // 11: stream.video.coordinator.client_v1_rpc.GetOrCreateCallResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	14, // 12: stream.video.coordinator.client_v1_rpc.UpdateCallRequest.input:type_name -> stream.video.coordinator.client_v1_rpc.CallInput
	44, // 13: stream.video.coordinator.client_v1_rpc.UpdateCallResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	44, // 14: stream.video.coordinator.client_v1_rpc.CreateCallResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	47, // 15: stream.video.coordinator.client_v1_rpc.QueryCallsRequest.sorts:type_name -> stream.video.coordinator.utils_v1.Sort
	48, // 16: stream.video.coordinator.client_v1_rpc.QueryCallsResponse.calls:type_name -> stream.video.coordinator.client_v1_rpc.CallsEnvelope
	47, // 17: stream.video.coordinator.client_v1_rpc.QueryMembersRequest.sorts:type_name -> stream.video.coordinator.utils_v1.Sort
	49, // 18: stream.video.coordinator.client_v1_rpc.QueryMembersResponse.members:type_name -> stream.video.coordinator.client_v1_rpc.MembersEnvelope
	50, // 19: stream.video.coordinator.client_v1_rpc.GetCallEdgeServerRequest.measurements:type_name -> stream.video.coordinator.edge_v1.LatencyMeasurements
	44, // 20: stream.video.coordinator.client_v1_rpc.GetCallEdgeServerResponse.call:type_name -> stream.video.coordinator.client_v1_rpc.CallEnvelope
	51, // 21: stream.video.coordinator.client_v1_rpc.GetCallEdgeServerResponse.credentials:type_name -> stream.video.coordinator.edge_v1.Credentials
	52, // 22: stream.video.coordinator.client_v1_rpc.CreateDeviceRequest.input:type_name -> stream.video.coordinator.push_v1.DeviceInput
	53, // 23: stream.video.coordinator.client_v1_rpc.CreateDeviceResponse.device:type_name -> stream.video.coordinator.push_v1.Device
	53, // 24: stream.video.coordinator.client_v1_rpc.QueryDevicesResponse.devices:type_name -> stream.video.coordinator.push_v1.Device
	1,  // 25: stream.video.coordinator.client_v1_rpc.SendEventRequest.event_type:type_name -> stream.video.coordinator.client_v1_rpc.UserEventType
	4,  // 26: stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest.MembersEntry.value:type_name -> stream.video.coordinator.client_v1_rpc.MemberInput
	4,  // 27: stream.video.coordinator.client_v1_rpc.CreateCallInput.MembersEntry.value:type_name -> stream.video.coordinator.client_v1_rpc.MemberInput
	10, // 28: stream.video.coordinator.client_v1_rpc.ClientRPC.CreateCall:input_type -> stream.video.coordinator.client_v1_rpc.CreateCallRequest
	11, // 29: stream.video.coordinator.client_v1_rpc.ClientRPC.GetOrCreateCall:input_type -> stream.video.coordinator.client_v1_rpc.GetOrCreateCallRequest
	12, // 30: stream.video.coordinator.client_v1_rpc.ClientRPC.JoinCall:input_type -> stream.video.coordinator.client_v1_rpc.JoinCallRequest
	23, // 31: stream.video.coordinator.client_v1_rpc.ClientRPC.GetCallEdgeServer:input_type -> stream.video.coordinator.client_v1_rpc.GetCallEdgeServerRequest
	16, // 32: stream.video.coordinator.client_v1_rpc.ClientRPC.UpdateCall:input_type -> stream.video.coordinator.client_v1_rpc.UpdateCallRequest
	19, // 33: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryCalls:input_type -> stream.video.coordinator.client_v1_rpc.QueryCallsRequest
	21, // 34: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryMembers:input_type -> stream.video.coordinator.client_v1_rpc.QueryMembersRequest
	25, // 35: stream.video.coordinator.client_v1_rpc.ClientRPC.CreateDevice:input_type -> stream.video.coordinator.client_v1_rpc.CreateDeviceRequest
	27, // 36: stream.video.coordinator.client_v1_rpc.ClientRPC.DeleteDevice:input_type -> stream.video.coordinator.client_v1_rpc.DeleteDeviceRequest
	29, // 37: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryDevices:input_type -> stream.video.coordinator.client_v1_rpc.QueryDevicesRequest
	5,  // 38: stream.video.coordinator.client_v1_rpc.ClientRPC.UpdateCallMembers:input_type -> stream.video.coordinator.client_v1_rpc.UpdateCallMembersRequest
	7,  // 39: stream.video.coordinator.client_v1_rpc.ClientRPC.DeleteCallMembers:input_type -> stream.video.coordinator.client_v1_rpc.DeleteCallMembersRequest
	31, // 40: stream.video.coordinator.client_v1_rpc.ClientRPC.SendEvent:input_type -> stream.video.coordinator.client_v1_rpc.SendEventRequest
	33, // 41: stream.video.coordinator.client_v1_rpc.ClientRPC.SendCustomEvent:input_type -> stream.video.coordinator.client_v1_rpc.SendCustomEventRequest
	35, // 42: stream.video.coordinator.client_v1_rpc.ClientRPC.ReportCallStats:input_type -> stream.video.coordinator.client_v1_rpc.ReportCallStatsRequest
	40, // 43: stream.video.coordinator.client_v1_rpc.ClientRPC.ReviewCall:input_type -> stream.video.coordinator.client_v1_rpc.ReviewCallRequest
	38, // 44: stream.video.coordinator.client_v1_rpc.ClientRPC.ReportIssue:input_type -> stream.video.coordinator.client_v1_rpc.ReportIssueRequest
	18, // 45: stream.video.coordinator.client_v1_rpc.ClientRPC.CreateCall:output_type -> stream.video.coordinator.client_v1_rpc.CreateCallResponse
	15, // 46: stream.video.coordinator.client_v1_rpc.ClientRPC.GetOrCreateCall:output_type -> stream.video.coordinator.client_v1_rpc.GetOrCreateCallResponse
	13, // 47: stream.video.coordinator.client_v1_rpc.ClientRPC.JoinCall:output_type -> stream.video.coordinator.client_v1_rpc.JoinCallResponse
	24, // 48: stream.video.coordinator.client_v1_rpc.ClientRPC.GetCallEdgeServer:output_type -> stream.video.coordinator.client_v1_rpc.GetCallEdgeServerResponse
	17, // 49: stream.video.coordinator.client_v1_rpc.ClientRPC.UpdateCall:output_type -> stream.video.coordinator.client_v1_rpc.UpdateCallResponse
	20, // 50: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryCalls:output_type -> stream.video.coordinator.client_v1_rpc.QueryCallsResponse
	22, // 51: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryMembers:output_type -> stream.video.coordinator.client_v1_rpc.QueryMembersResponse
	26, // 52: stream.video.coordinator.client_v1_rpc.ClientRPC.CreateDevice:output_type -> stream.video.coordinator.client_v1_rpc.CreateDeviceResponse
	28, // 53: stream.video.coordinator.client_v1_rpc.ClientRPC.DeleteDevice:output_type -> stream.video.coordinator.client_v1_rpc.DeleteDeviceResponse
	30, // 54: stream.video.coordinator.client_v1_rpc.ClientRPC.QueryDevices:output_type -> stream.video.coordinator.client_v1_rpc.QueryDevicesResponse
	6,  // 55: stream.video.coordinator.client_v1_rpc.ClientRPC.UpdateCallMembers:output_type -> stream.video.coordinator.client_v1_rpc.UpdateCallMembersResponse
	8,  // 56: stream.video.coordinator.client_v1_rpc.ClientRPC.DeleteCallMembers:output_type -> stream.video.coordinator.client_v1_rpc.DeleteCallMembersResponse
	32, // 57: stream.video.coordinator.client_v1_rpc.ClientRPC.SendEvent:output_type -> stream.video.coordinator.client_v1_rpc.SendEventResponse
	34, // 58: stream.video.coordinator.client_v1_rpc.ClientRPC.SendCustomEvent:output_type -> stream.video.coordinator.client_v1_rpc.SendCustomEventResponse
	36, // 59: stream.video.coordinator.client_v1_rpc.ClientRPC.ReportCallStats:output_type -> stream.video.coordinator.client_v1_rpc.ReportCallStatsResponse
	41, // 60: stream.video.coordinator.client_v1_rpc.ClientRPC.ReviewCall:output_type -> stream.video.coordinator.client_v1_rpc.ReviewCallResponse
	39, // 61: stream.video.coordinator.client_v1_rpc.ClientRPC.ReportIssue:output_type -> stream.video.coordinator.client_v1_rpc.ReportIssueResponse
	45, // [45:62] is the sub-list for method output_type
	28, // [28:45] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_video_coordinator_client_v1_rpc_client_rpc_proto_init() }
func file_video_coordinator_client_v1_rpc_client_rpc_proto_init() {
	if File_video_coordinator_client_v1_rpc_client_rpc_proto != nil {
		return
	}
	file_video_coordinator_client_v1_rpc_envelopes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCallsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallEdgeServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallEdgeServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCallStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCallStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_coordinator_client_v1_rpc_client_rpc_proto_goTypes,
		DependencyIndexes: file_video_coordinator_client_v1_rpc_client_rpc_proto_depIdxs,
		EnumInfos:         file_video_coordinator_client_v1_rpc_client_rpc_proto_enumTypes,
		MessageInfos:      file_video_coordinator_client_v1_rpc_client_rpc_proto_msgTypes,
	}.Build()
	File_video_coordinator_client_v1_rpc_client_rpc_proto = out.File
	file_video_coordinator_client_v1_rpc_client_rpc_proto_rawDesc = nil
	file_video_coordinator_client_v1_rpc_client_rpc_proto_goTypes = nil
	file_video_coordinator_client_v1_rpc_client_rpc_proto_depIdxs = nil
}
