syntax = "proto3";

package stream.video.coordinator.stat_v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "stat_v1";

// ParticipantConnected is fired when a user joins a call
message ParticipantConnected {
}

// ParticipantDisconnected is fired when a user leaves a call
message ParticipantDisconnected {
}

enum MediaType {
  MEDIA_TYPE_UNSPECIFIED = 0;
  MEDIA_TYPE_AUDIO = 1;
  MEDIA_TYPE_VIDEO = 2;
}

// MuteStateChanged is fired when a user mutes/unmutes their audio/video
message MuteStateChanged{
  MediaType media_type = 1;
  bool muted = 2;
}

// The participant experienced a significant amount of audio/video freeze when observing a given peer
message Freeze {
  MediaType media_type = 1;
  // Sender of the media stream
  string peer_id = 2 [(validate.rules).string.min_len = 1];
  google.protobuf.Duration duration = 3;
}

// A stat event from the perspective of a particular participant
message TelemetryEvent {
  // Event timestamp as RFC3339 string.
  google.protobuf.Timestamp timestamp = 1;

  oneof event {
    ParticipantConnected participant_connected = 2;
    ParticipantDisconnected participant_disconnected = 3;
    MuteStateChanged mute_state_changed = 4;
    Freeze freeze = 5;
  }
}

message CallParticipantTimeline {
  // The events in this timeline are from the perspective of the user with this ID
  string user_id = 1 [(validate.rules).string.min_len = 1];
  string session_id = 2 [(validate.rules).string.min_len = 1];
  repeated TelemetryEvent events = 3;
}
