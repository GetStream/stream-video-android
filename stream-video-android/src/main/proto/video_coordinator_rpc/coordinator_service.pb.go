// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: video_coordinator_rpc/coordinator_service.proto

package video_coordinator_rpc

import (
	video_models "github.com/GetStream/video/protobuf/video_models"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallStatEventType int32

const (
	CallStatEventType_CALL_STAT_EVENT_TYPE_AUDIO_FROZEN_UNSPECIFIED CallStatEventType = 0
	CallStatEventType_CALL_STAT_EVENT_TYPE_AUDIO_DELAY              CallStatEventType = 1
	CallStatEventType_CALL_STAT_EVENT_TYPE_VIDEO_FROZEN             CallStatEventType = 2
	CallStatEventType_CALL_STAT_EVENT_TYPE_VIDEO_DELAY              CallStatEventType = 3
	CallStatEventType_CALL_STAT_EVENT_TYPE_VIDEO_NOT_OPTIMAL        CallStatEventType = 4
)

// Enum value maps for CallStatEventType.
var (
	CallStatEventType_name = map[int32]string{
		0: "CALL_STAT_EVENT_TYPE_AUDIO_FROZEN_UNSPECIFIED",
		1: "CALL_STAT_EVENT_TYPE_AUDIO_DELAY",
		2: "CALL_STAT_EVENT_TYPE_VIDEO_FROZEN",
		3: "CALL_STAT_EVENT_TYPE_VIDEO_DELAY",
		4: "CALL_STAT_EVENT_TYPE_VIDEO_NOT_OPTIMAL",
	}
	CallStatEventType_value = map[string]int32{
		"CALL_STAT_EVENT_TYPE_AUDIO_FROZEN_UNSPECIFIED": 0,
		"CALL_STAT_EVENT_TYPE_AUDIO_DELAY":              1,
		"CALL_STAT_EVENT_TYPE_VIDEO_FROZEN":             2,
		"CALL_STAT_EVENT_TYPE_VIDEO_DELAY":              3,
		"CALL_STAT_EVENT_TYPE_VIDEO_NOT_OPTIMAL":        4,
	}
)

func (x CallStatEventType) Enum() *CallStatEventType {
	p := new(CallStatEventType)
	*p = x
	return p
}

func (x CallStatEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallStatEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_video_coordinator_rpc_coordinator_service_proto_enumTypes[0].Descriptor()
}

func (CallStatEventType) Type() protoreflect.EnumType {
	return &file_video_coordinator_rpc_coordinator_service_proto_enumTypes[0]
}

func (x CallStatEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallStatEventType.Descriptor instead.
func (CallStatEventType) EnumDescriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{0}
}

type UserEventType int32

const (
	UserEventType_USER_EVENT_TYPE_AUDIO_MUTED_UNSPECIFIED UserEventType = 0
	UserEventType_USER_EVENT_TYPE_AUDIO_UNMUTED           UserEventType = 1
	UserEventType_USER_EVENT_TYPE_VIDEO_STARTED           UserEventType = 2
	UserEventType_USER_EVENT_TYPE_VIDEO_STOPPED           UserEventType = 3
)

// Enum value maps for UserEventType.
var (
	UserEventType_name = map[int32]string{
		0: "USER_EVENT_TYPE_AUDIO_MUTED_UNSPECIFIED",
		1: "USER_EVENT_TYPE_AUDIO_UNMUTED",
		2: "USER_EVENT_TYPE_VIDEO_STARTED",
		3: "USER_EVENT_TYPE_VIDEO_STOPPED",
	}
	UserEventType_value = map[string]int32{
		"USER_EVENT_TYPE_AUDIO_MUTED_UNSPECIFIED": 0,
		"USER_EVENT_TYPE_AUDIO_UNMUTED":           1,
		"USER_EVENT_TYPE_VIDEO_STARTED":           2,
		"USER_EVENT_TYPE_VIDEO_STOPPED":           3,
	}
)

func (x UserEventType) Enum() *UserEventType {
	p := new(UserEventType)
	*p = x
	return p
}

func (x UserEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_video_coordinator_rpc_coordinator_service_proto_enumTypes[1].Descriptor()
}

func (UserEventType) Type() protoreflect.EnumType {
	return &file_video_coordinator_rpc_coordinator_service_proto_enumTypes[1]
}

func (x UserEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserEventType.Descriptor instead.
func (UserEventType) EnumDescriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{1}
}

type AddPushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *video_models.PushProvider `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *AddPushProviderRequest) Reset() {
	*x = AddPushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPushProviderRequest) ProtoMessage() {}

func (x *AddPushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPushProviderRequest.ProtoReflect.Descriptor instead.
func (*AddPushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddPushProviderRequest) GetSettings() *video_models.PushProvider {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdatePushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *video_models.PushProvider `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdatePushProviderRequest) Reset() {
	*x = UpdatePushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushProviderRequest) ProtoMessage() {}

func (x *UpdatePushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdatePushProviderRequest) GetSettings() *video_models.PushProvider {
	if x != nil {
		return x.Settings
	}
	return nil
}

type DeletePushProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeletePushProviderRequest) Reset() {
	*x = DeletePushProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushProviderRequest) ProtoMessage() {}

func (x *DeletePushProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushProviderRequest.ProtoReflect.Descriptor instead.
func (*DeletePushProviderRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeletePushProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateAppSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the webhook URL
	WebhookUrl *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	// sqs settings
	SqsSettings *video_models.SqsSettings `protobuf:"bytes,2,opt,name=sqs_settings,json=sqsSettings,proto3" json:"sqs_settings,omitempty"`
}

func (x *UpdateAppSettingsRequest) Reset() {
	*x = UpdateAppSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSettingsRequest) ProtoMessage() {}

func (x *UpdateAppSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppSettingsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAppSettingsRequest) GetWebhookUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.WebhookUrl
	}
	return nil
}

func (x *UpdateAppSettingsRequest) GetSqsSettings() *video_models.SqsSettings {
	if x != nil {
		return x.SqsSettings
	}
	return nil
}

type AppSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *video_models.ApplicationSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *AppSettingsResponse) Reset() {
	*x = AppSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSettingsResponse) ProtoMessage() {}

func (x *AppSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSettingsResponse.ProtoReflect.Descriptor instead.
func (*AppSettingsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{4}
}

func (x *AppSettingsResponse) GetSettings() *video_models.ApplicationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type DeleteRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the role
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{6}
}

type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique name for the role
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{8}
}

type DeleteCallTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the call type
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCallTypeRequest) Reset() {
	*x = DeleteCallTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallTypeRequest) ProtoMessage() {}

func (x *DeleteCallTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteCallTypeRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCallTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCallTypeResponse) Reset() {
	*x = DeleteCallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallTypeResponse) ProtoMessage() {}

func (x *DeleteCallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteCallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{10}
}

type CallTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the call type updated
	CallType *video_models.CallType `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *CallTypeResponse) Reset() {
	*x = CallTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallTypeResponse) ProtoMessage() {}

func (x *CallTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallTypeResponse.ProtoReflect.Descriptor instead.
func (*CallTypeResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{11}
}

func (x *CallTypeResponse) GetCallType() *video_models.CallType {
	if x != nil {
		return x.CallType
	}
	return nil
}

type CallTypeRequestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the call type, must be unique for the application
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the permission granted to users by their role
	Grants map[string]*video_models.Permissions `protobuf:"bytes,2,rep,name=grants,proto3" json:"grants,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the feature settings
	Features *video_models.Features `protobuf:"bytes,3,opt,name=features,proto3" json:"features,omitempty"`
}

func (x *CallTypeRequestInput) Reset() {
	*x = CallTypeRequestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallTypeRequestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallTypeRequestInput) ProtoMessage() {}

func (x *CallTypeRequestInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallTypeRequestInput.ProtoReflect.Descriptor instead.
func (*CallTypeRequestInput) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{12}
}

func (x *CallTypeRequestInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallTypeRequestInput) GetGrants() map[string]*video_models.Permissions {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *CallTypeRequestInput) GetFeatures() *video_models.Features {
	if x != nil {
		return x.Features
	}
	return nil
}

type ListPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListPermissionsRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

type ListPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of permissions by user role
	Permissions map[string]*video_models.Permissions `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListPermissionsResponse) GetPermissions() map[string]*video_models.Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GetCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetCallRequest) Reset() {
	*x = GetCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallRequest) ProtoMessage() {}

func (x *GetCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallRequest.ProtoReflect.Descriptor instead.
func (*GetCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call      *video_models.Call      `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	CallState *video_models.CallState `protobuf:"bytes,2,opt,name=call_state,json=callState,proto3" json:"call_state,omitempty"`
}

func (x *GetCallResponse) Reset() {
	*x = GetCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallResponse) ProtoMessage() {}

func (x *GetCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallResponse.ProtoReflect.Descriptor instead.
func (*GetCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetCallResponse) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *GetCallResponse) GetCallState() *video_models.CallState {
	if x != nil {
		return x.CallState
	}
	return nil
}

type CreateOrUpdateCallsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*CreateCallRequest `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *CreateOrUpdateCallsRequest) Reset() {
	*x = CreateOrUpdateCallsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCallsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCallsRequest) ProtoMessage() {}

func (x *CreateOrUpdateCallsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCallsRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCallsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateOrUpdateCallsRequest) GetCalls() []*CreateCallRequest {
	if x != nil {
		return x.Calls
	}
	return nil
}

type CreateOrUpdateCallsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*video_models.Call `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *CreateOrUpdateCallsResponse) Reset() {
	*x = CreateOrUpdateCallsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCallsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCallsResponse) ProtoMessage() {}

func (x *CreateOrUpdateCallsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCallsResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCallsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{18}
}

func (x *CreateOrUpdateCallsResponse) GetCalls() []*video_models.Call {
	if x != nil {
		return x.Calls
	}
	return nil
}

type CreateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the call type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // required
	// the call id, if not provided a unique value will be generated based on UUID v4
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"` // required
	// call custom data
	Custom *structpb.Struct `protobuf:"bytes,3,opt,name=custom,proto3" json:"custom,omitempty"`
	// the list of participant ids
	ParticipantIds []string `protobuf:"bytes,4,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	// HLS broadcast, overrides the default call type setting if provided
	HlsBroadcast *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=hls_broadcast,json=hlsBroadcast,proto3" json:"hls_broadcast,omitempty"`
	// request video to be forwarded to a list of RTMP servers
	Rtmp *video_models.RTMPOptions `protobuf:"bytes,7,opt,name=rtmp,proto3" json:"rtmp,omitempty"`
	// transcription, overrides the default call type setting if provided
	Transcribe *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=transcribe,proto3" json:"transcribe,omitempty"`
	// the transcription options for this call, only relevant if transcribe is enabled
	TranscribeOptions *video_models.TranscribeOptions `protobuf:"bytes,9,opt,name=transcribe_options,json=transcribeOptions,proto3" json:"transcribe_options,omitempty"`
	// the recording option, overrides the default call type setting if provided
	Recording *wrapperspb.BoolValue `protobuf:"bytes,10,opt,name=recording,proto3" json:"recording,omitempty"`
	// the ring option, overrides the default call type setting if provided
	Notify *wrapperspb.BoolValue `protobuf:"bytes,11,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *CreateCallRequest) Reset() {
	*x = CreateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallRequest) ProtoMessage() {}

func (x *CreateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallRequest.ProtoReflect.Descriptor instead.
func (*CreateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCallRequest) GetCustom() *structpb.Struct {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *CreateCallRequest) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *CreateCallRequest) GetHlsBroadcast() *wrapperspb.BoolValue {
	if x != nil {
		return x.HlsBroadcast
	}
	return nil
}

func (x *CreateCallRequest) GetRtmp() *video_models.RTMPOptions {
	if x != nil {
		return x.Rtmp
	}
	return nil
}

func (x *CreateCallRequest) GetTranscribe() *wrapperspb.BoolValue {
	if x != nil {
		return x.Transcribe
	}
	return nil
}

func (x *CreateCallRequest) GetTranscribeOptions() *video_models.TranscribeOptions {
	if x != nil {
		return x.TranscribeOptions
	}
	return nil
}

func (x *CreateCallRequest) GetRecording() *wrapperspb.BoolValue {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *CreateCallRequest) GetNotify() *wrapperspb.BoolValue {
	if x != nil {
		return x.Notify
	}
	return nil
}

type CreateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CreateCallResponse) Reset() {
	*x = CreateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallResponse) ProtoMessage() {}

func (x *CreateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallResponse.ProtoReflect.Descriptor instead.
func (*CreateCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateCallResponse) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type UpdateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	JsonEncodedCustomData []byte `protobuf:"bytes,3,opt,name=json_encoded_custom_data,json=jsonEncodedCustomData,proto3" json:"json_encoded_custom_data,omitempty"` // TODO: additional options and overrides to default settings
}

func (x *UpdateCallRequest) Reset() {
	*x = UpdateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallRequest) ProtoMessage() {}

func (x *UpdateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallRequest.ProtoReflect.Descriptor instead.
func (*UpdateCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateCallRequest) GetJsonEncodedCustomData() []byte {
	if x != nil {
		return x.JsonEncodedCustomData
	}
	return nil
}

type UpdateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *UpdateCallResponse) Reset() {
	*x = UpdateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCallResponse) ProtoMessage() {}

func (x *UpdateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCallResponse.ProtoReflect.Descriptor instead.
func (*UpdateCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateCallResponse) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type DeleteCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCallRequest) Reset() {
	*x = DeleteCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallRequest) ProtoMessage() {}

func (x *DeleteCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallRequest.ProtoReflect.Descriptor instead.
func (*DeleteCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCallResponse) Reset() {
	*x = DeleteCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCallResponse) ProtoMessage() {}

func (x *DeleteCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCallResponse.ProtoReflect.Descriptor instead.
func (*DeleteCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{24}
}

type SelectEdgeServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType      string                           `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId        string                           `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	LatencyByEdge map[string]*video_models.Latency `protobuf:"bytes,3,rep,name=latency_by_edge,json=latencyByEdge,proto3" json:"latency_by_edge,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SelectEdgeServerRequest) Reset() {
	*x = SelectEdgeServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectEdgeServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectEdgeServerRequest) ProtoMessage() {}

func (x *SelectEdgeServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectEdgeServerRequest.ProtoReflect.Descriptor instead.
func (*SelectEdgeServerRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{25}
}

func (x *SelectEdgeServerRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *SelectEdgeServerRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *SelectEdgeServerRequest) GetLatencyByEdge() map[string]*video_models.Latency {
	if x != nil {
		return x.LatencyByEdge
	}
	return nil
}

type SelectEdgeServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the edge server hosting the video call
	EdgeServer *video_models.EdgeServer `protobuf:"bytes,1,opt,name=edge_server,json=edgeServer,proto3" json:"edge_server,omitempty"`
	// the auth token needed to authenticate to the edge server
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SelectEdgeServerResponse) Reset() {
	*x = SelectEdgeServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectEdgeServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectEdgeServerResponse) ProtoMessage() {}

func (x *SelectEdgeServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectEdgeServerResponse.ProtoReflect.Descriptor instead.
func (*SelectEdgeServerResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{26}
}

func (x *SelectEdgeServerResponse) GetEdgeServer() *video_models.EdgeServer {
	if x != nil {
		return x.EdgeServer
	}
	return nil
}

func (x *SelectEdgeServerResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AddDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the device id to register
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the name of the push notification provider (eg. apn-production)
	PushProviderName string `protobuf:"bytes,2,opt,name=push_provider_name,json=pushProviderName,proto3" json:"push_provider_name,omitempty"`
	// the id of the user the device is registered to, only server-side requests can provide this
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddDeviceRequest) Reset() {
	*x = AddDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceRequest) ProtoMessage() {}

func (x *AddDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceRequest.ProtoReflect.Descriptor instead.
func (*AddDeviceRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{27}
}

func (x *AddDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddDeviceRequest) GetPushProviderName() string {
	if x != nil {
		return x.PushProviderName
	}
	return ""
}

func (x *AddDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *video_models.Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AddDeviceResponse) Reset() {
	*x = AddDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceResponse) ProtoMessage() {}

func (x *AddDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceResponse.ProtoReflect.Descriptor instead.
func (*AddDeviceResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{28}
}

func (x *AddDeviceResponse) GetDevice() *video_models.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type RemoveDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveDeviceRequest) Reset() {
	*x = RemoveDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceRequest) ProtoMessage() {}

func (x *RemoveDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceRequest.ProtoReflect.Descriptor instead.
func (*RemoveDeviceRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveDeviceResponse) Reset() {
	*x = RemoveDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceResponse) ProtoMessage() {}

func (x *RemoveDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceResponse.ProtoReflect.Descriptor instead.
func (*RemoveDeviceResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{30}
}

type ListDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the user, only server-side requests can provide this
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{31}
}

func (x *ListDevicesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*video_models.Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListDevicesResponse) GetDevices() []*video_models.Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Teams    []string         `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Role     string           `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Custom   *structpb.Struct `protobuf:"bytes,4,opt,name=custom,proto3" json:"custom,omitempty"`
	Name     string           `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl string           `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{33}
}

func (x *CreateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUserRequest) GetTeams() []string {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *CreateUserRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateUserRequest) GetCustom() *structpb.Struct {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// CreateOrUpdateUsersRequest runs a partial update or create on the list of users
// specify replace = true to do a hard update instead of partial update
type CreateOrUpdateUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users      []*CreateUserRequest `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	FullUpdate bool                 `protobuf:"varint,2,opt,name=full_update,json=fullUpdate,proto3" json:"full_update,omitempty"` // full update (defaults to false and does a partial update)
}

func (x *CreateOrUpdateUsersRequest) Reset() {
	*x = CreateOrUpdateUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateUsersRequest) ProtoMessage() {}

func (x *CreateOrUpdateUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateUsersRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateUsersRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{34}
}

func (x *CreateOrUpdateUsersRequest) GetUsers() []*CreateUserRequest {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CreateOrUpdateUsersRequest) GetFullUpdate() bool {
	if x != nil {
		return x.FullUpdate
	}
	return false
}

type CreateOrUpdateUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*video_models.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *CreateOrUpdateUsersResponse) Reset() {
	*x = CreateOrUpdateUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateUsersResponse) ProtoMessage() {}

func (x *CreateOrUpdateUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateUsersResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateUsersResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{35}
}

func (x *CreateOrUpdateUsersResponse) GetUsers() []*video_models.User {
	if x != nil {
		return x.Users
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TODO: do we support both soft and hard delete
type ExportUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExportUserRequest) Reset() {
	*x = ExportUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserRequest) ProtoMessage() {}

func (x *ExportUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserRequest.ProtoReflect.Descriptor instead.
func (*ExportUserRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{37}
}

func (x *ExportUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TODO: talk about what data we should export on the GDPR endpoints for a user
type ExportUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExportUserResponse) Reset() {
	*x = ExportUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserResponse) ProtoMessage() {}

func (x *ExportUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserResponse.ProtoReflect.Descriptor instead.
func (*ExportUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{38}
}

func (x *ExportUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *video_models.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{40}
}

func (x *CreateUserResponse) GetUser() *video_models.User {
	if x != nil {
		return x.User
	}
	return nil
}

type SendCustomEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendCustomEventRequest) Reset() {
	*x = SendCustomEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomEventRequest) ProtoMessage() {}

func (x *SendCustomEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomEventRequest.ProtoReflect.Descriptor instead.
func (*SendCustomEventRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{41}
}

func (x *SendCustomEventRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendCustomEventRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendCustomEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendCustomEventResponse) Reset() {
	*x = SendCustomEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomEventResponse) ProtoMessage() {}

func (x *SendCustomEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomEventResponse.ProtoReflect.Descriptor instead.
func (*SendCustomEventResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{42}
}

type JoinCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *JoinCallRequest) Reset() {
	*x = JoinCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCallRequest) ProtoMessage() {}

func (x *JoinCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCallRequest.ProtoReflect.Descriptor instead.
func (*JoinCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{43}
}

func (x *JoinCallRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JoinCallRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UserCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UserCapability) Reset() {
	*x = UserCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCapability) ProtoMessage() {}

func (x *UserCapability) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCapability.ProtoReflect.Descriptor instead.
func (*UserCapability) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{44}
}

func (x *UserCapability) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UserCapability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type JoinCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            *video_models.User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Call            *video_models.Call      `protobuf:"bytes,2,opt,name=call,proto3" json:"call,omitempty"`
	CallState       *video_models.CallState `protobuf:"bytes,3,opt,name=call_state,json=callState,proto3" json:"call_state,omitempty"`
	Edges           []*video_models.Edge    `protobuf:"bytes,4,rep,name=edges,proto3" json:"edges,omitempty"`
	OwnCapabilities []*UserCapability       `protobuf:"bytes,5,rep,name=own_capabilities,json=ownCapabilities,proto3" json:"own_capabilities,omitempty"`
}

func (x *JoinCallResponse) Reset() {
	*x = JoinCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCallResponse) ProtoMessage() {}

func (x *JoinCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCallResponse.ProtoReflect.Descriptor instead.
func (*JoinCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{45}
}

func (x *JoinCallResponse) GetUser() *video_models.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *JoinCallResponse) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *JoinCallResponse) GetCallState() *video_models.CallState {
	if x != nil {
		return x.CallState
	}
	return nil
}

func (x *JoinCallResponse) GetEdges() []*video_models.Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *JoinCallResponse) GetOwnCapabilities() []*UserCapability {
	if x != nil {
		return x.OwnCapabilities
	}
	return nil
}

type LeaveCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveCallRequest) Reset() {
	*x = LeaveCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveCallRequest) ProtoMessage() {}

func (x *LeaveCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveCallRequest.ProtoReflect.Descriptor instead.
func (*LeaveCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{46}
}

type LeaveCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveCallResponse) Reset() {
	*x = LeaveCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveCallResponse) ProtoMessage() {}

func (x *LeaveCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveCallResponse.ProtoReflect.Descriptor instead.
func (*LeaveCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{47}
}

type EndCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndCallRequest) Reset() {
	*x = EndCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallRequest) ProtoMessage() {}

func (x *EndCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallRequest.ProtoReflect.Descriptor instead.
func (*EndCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{48}
}

type EndCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndCallResponse) Reset() {
	*x = EndCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallResponse) ProtoMessage() {}

func (x *EndCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallResponse.ProtoReflect.Descriptor instead.
func (*EndCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{49}
}

type StartBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// call id and type
	CallId   string `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	CallType string `protobuf:"bytes,2,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	// toggles HLS broadcasting on/off
	HlsBroadcast bool `protobuf:"varint,3,opt,name=hls_broadcast,json=hlsBroadcast,proto3" json:"hls_broadcast,omitempty"`
	// enables rtmp broadcasting
	Rtmp *video_models.RTMPOptions `protobuf:"bytes,5,opt,name=rtmp,proto3" json:"rtmp,omitempty"`
}

func (x *StartBroadcastRequest) Reset() {
	*x = StartBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBroadcastRequest) ProtoMessage() {}

func (x *StartBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBroadcastRequest.ProtoReflect.Descriptor instead.
func (*StartBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{50}
}

func (x *StartBroadcastRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *StartBroadcastRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StartBroadcastRequest) GetHlsBroadcast() bool {
	if x != nil {
		return x.HlsBroadcast
	}
	return false
}

func (x *StartBroadcastRequest) GetRtmp() *video_models.RTMPOptions {
	if x != nil {
		return x.Rtmp
	}
	return nil
}

type StartBroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broadcast *video_models.Broadcast `protobuf:"bytes,1,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
}

func (x *StartBroadcastResponse) Reset() {
	*x = StartBroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBroadcastResponse) ProtoMessage() {}

func (x *StartBroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBroadcastResponse.ProtoReflect.Descriptor instead.
func (*StartBroadcastResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{51}
}

func (x *StartBroadcastResponse) GetBroadcast() *video_models.Broadcast {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

type StopBroadcastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopBroadcastRequest) Reset() {
	*x = StopBroadcastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastRequest) ProtoMessage() {}

func (x *StopBroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastRequest.ProtoReflect.Descriptor instead.
func (*StopBroadcastRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{52}
}

type StopBroadcastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopBroadcastResponse) Reset() {
	*x = StopBroadcastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBroadcastResponse) ProtoMessage() {}

func (x *StopBroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBroadcastResponse.ProtoReflect.Descriptor instead.
func (*StopBroadcastResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{53}
}

type TranscribeCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TranscribeCallRequest) Reset() {
	*x = TranscribeCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscribeCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeCallRequest) ProtoMessage() {}

func (x *TranscribeCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeCallRequest.ProtoReflect.Descriptor instead.
func (*TranscribeCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{54}
}

type TranscribeCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TranscribeCallResponse) Reset() {
	*x = TranscribeCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscribeCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeCallResponse) ProtoMessage() {}

func (x *TranscribeCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeCallResponse.ProtoReflect.Descriptor instead.
func (*TranscribeCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{55}
}

type StopTranscribeCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTranscribeCallRequest) Reset() {
	*x = StopTranscribeCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTranscribeCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTranscribeCallRequest) ProtoMessage() {}

func (x *StopTranscribeCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTranscribeCallRequest.ProtoReflect.Descriptor instead.
func (*StopTranscribeCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{56}
}

type StopTranscribeCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTranscribeCallResponse) Reset() {
	*x = StopTranscribeCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTranscribeCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTranscribeCallResponse) ProtoMessage() {}

func (x *StopTranscribeCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTranscribeCallResponse.ProtoReflect.Descriptor instead.
func (*StopTranscribeCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{57}
}

type StoreLatencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreLatencyRequest) Reset() {
	*x = StoreLatencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLatencyRequest) ProtoMessage() {}

func (x *StoreLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLatencyRequest.ProtoReflect.Descriptor instead.
func (*StoreLatencyRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{58}
}

type StoreLatencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreLatencyResponse) Reset() {
	*x = StoreLatencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreLatencyResponse) ProtoMessage() {}

func (x *StoreLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreLatencyResponse.ProtoReflect.Descriptor instead.
func (*StoreLatencyResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{59}
}

type StartRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *StartRecordingRequest) Reset() {
	*x = StartRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingRequest) ProtoMessage() {}

func (x *StartRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingRequest.ProtoReflect.Descriptor instead.
func (*StartRecordingRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{60}
}

func (x *StartRecordingRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StartRecordingRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type ReportCallStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The call type
	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	// The call id
	CallId string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// A WebRTC Stats report, as defined in https://www.w3.org/TR/webrtc/#dom-rtcstatsreport
	Stats *structpb.Struct `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *ReportCallStatsRequest) Reset() {
	*x = ReportCallStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCallStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCallStatsRequest) ProtoMessage() {}

func (x *ReportCallStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCallStatsRequest.ProtoReflect.Descriptor instead.
func (*ReportCallStatsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{61}
}

func (x *ReportCallStatsRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReportCallStatsRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReportCallStatsRequest) GetStats() *structpb.Struct {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CallStatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type CallStatEventType `protobuf:"varint,1,opt,name=type,proto3,enum=stream.video.CallStatEventType" json:"type,omitempty"`
	// call creation date as RFC3339 string
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *CallStatEvent) Reset() {
	*x = CallStatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallStatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallStatEvent) ProtoMessage() {}

func (x *CallStatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallStatEvent.ProtoReflect.Descriptor instead.
func (*CallStatEvent) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{62}
}

func (x *CallStatEvent) GetType() CallStatEventType {
	if x != nil {
		return x.Type
	}
	return CallStatEventType_CALL_STAT_EVENT_TYPE_AUDIO_FROZEN_UNSPECIFIED
}

func (x *CallStatEvent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type ReportIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// optional description
	Description string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Custom      *structpb.Struct `protobuf:"bytes,4,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *ReportIssueRequest) Reset() {
	*x = ReportIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportIssueRequest) ProtoMessage() {}

func (x *ReportIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportIssueRequest.ProtoReflect.Descriptor instead.
func (*ReportIssueRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{63}
}

func (x *ReportIssueRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReportIssueRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReportIssueRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReportIssueRequest) GetCustom() *structpb.Struct {
	if x != nil {
		return x.Custom
	}
	return nil
}

type ReviewCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// rating between 0 and 5 stars
	Stars float32 `protobuf:"fixed32,3,opt,name=stars,proto3" json:"stars,omitempty"`
	// optional description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// optional custom data
	Custom *structpb.Struct `protobuf:"bytes,5,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *ReviewCallRequest) Reset() {
	*x = ReviewCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCallRequest) ProtoMessage() {}

func (x *ReviewCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCallRequest.ProtoReflect.Descriptor instead.
func (*ReviewCallRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{64}
}

func (x *ReviewCallRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *ReviewCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *ReviewCallRequest) GetStars() float32 {
	if x != nil {
		return x.Stars
	}
	return 0
}

func (x *ReviewCallRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReviewCallRequest) GetCustom() *structpb.Struct {
	if x != nil {
		return x.Custom
	}
	return nil
}

type ReviewCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReviewCallResponse) Reset() {
	*x = ReviewCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewCallResponse) ProtoMessage() {}

func (x *ReviewCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewCallResponse.ProtoReflect.Descriptor instead.
func (*ReviewCallResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{65}
}

type ReportIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportIssueResponse) Reset() {
	*x = ReportIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportIssueResponse) ProtoMessage() {}

func (x *ReportIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportIssueResponse.ProtoReflect.Descriptor instead.
func (*ReportIssueResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{66}
}

type ParticipantCallStatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId string           `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	CallTimelines []*CallStatEvent `protobuf:"bytes,2,rep,name=call_timelines,json=callTimelines,proto3" json:"call_timelines,omitempty"`
}

func (x *ParticipantCallStatEvent) Reset() {
	*x = ParticipantCallStatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantCallStatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantCallStatEvent) ProtoMessage() {}

func (x *ParticipantCallStatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantCallStatEvent.ProtoReflect.Descriptor instead.
func (*ParticipantCallStatEvent) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{67}
}

func (x *ParticipantCallStatEvent) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *ParticipantCallStatEvent) GetCallTimelines() []*CallStatEvent {
	if x != nil {
		return x.CallTimelines
	}
	return nil
}

type GetCallStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *GetCallStatsRequest) Reset() {
	*x = GetCallStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallStatsRequest) ProtoMessage() {}

func (x *GetCallStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallStatsRequest.ProtoReflect.Descriptor instead.
func (*GetCallStatsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{68}
}

func (x *GetCallStatsRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *GetCallStatsRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type CallStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallTimelines        []*CallStatEvent            `protobuf:"bytes,1,rep,name=call_timelines,json=callTimelines,proto3" json:"call_timelines,omitempty"`
	ParticipantTimelines []*ParticipantCallStatEvent `protobuf:"bytes,2,rep,name=participant_timelines,json=participantTimelines,proto3" json:"participant_timelines,omitempty"`
}

func (x *CallStats) Reset() {
	*x = CallStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallStats) ProtoMessage() {}

func (x *CallStats) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallStats.ProtoReflect.Descriptor instead.
func (*CallStats) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{69}
}

func (x *CallStats) GetCallTimelines() []*CallStatEvent {
	if x != nil {
		return x.CallTimelines
	}
	return nil
}

func (x *CallStats) GetParticipantTimelines() []*ParticipantCallStatEvent {
	if x != nil {
		return x.ParticipantTimelines
	}
	return nil
}

type GetCallStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call      *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	CallStats *CallStats         `protobuf:"bytes,2,opt,name=call_stats,json=callStats,proto3" json:"call_stats,omitempty"`
}

func (x *GetCallStatsResponse) Reset() {
	*x = GetCallStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallStatsResponse) ProtoMessage() {}

func (x *GetCallStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallStatsResponse.ProtoReflect.Descriptor instead.
func (*GetCallStatsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{70}
}

func (x *GetCallStatsResponse) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *GetCallStatsResponse) GetCallStats() *CallStats {
	if x != nil {
		return x.CallStats
	}
	return nil
}

type ReportCallStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportCallStatsResponse) Reset() {
	*x = ReportCallStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCallStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCallStatsResponse) ProtoMessage() {}

func (x *ReportCallStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCallStatsResponse.ProtoReflect.Descriptor instead.
func (*ReportCallStatsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{71}
}

type StartRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartRecordingResponse) Reset() {
	*x = StartRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingResponse) ProtoMessage() {}

func (x *StartRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingResponse.ProtoReflect.Descriptor instead.
func (*StartRecordingResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{72}
}

type StopRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *StopRecordingRequest) Reset() {
	*x = StopRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingRequest) ProtoMessage() {}

func (x *StopRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingRequest.ProtoReflect.Descriptor instead.
func (*StopRecordingRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{73}
}

func (x *StopRecordingRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *StopRecordingRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type StopRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S3FileUrl string `protobuf:"bytes,1,opt,name=s3_file_url,json=s3FileUrl,proto3" json:"s3_file_url,omitempty"`
}

func (x *StopRecordingResponse) Reset() {
	*x = StopRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingResponse) ProtoMessage() {}

func (x *StopRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingResponse.ProtoReflect.Descriptor instead.
func (*StopRecordingResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{74}
}

func (x *StopRecordingResponse) GetS3FileUrl() string {
	if x != nil {
		return x.S3FileUrl
	}
	return ""
}

// TODO: how do we do filtering and pagination with proto?
// here we need to be able to filter, sort and limit by
// call id, call custom attribute, call creation time, call including a user, call by type
type GetRecordingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecordingsRequest) Reset() {
	*x = GetRecordingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsRequest) ProtoMessage() {}

func (x *GetRecordingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsRequest.ProtoReflect.Descriptor instead.
func (*GetRecordingsRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{75}
}

type GetRecordingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recordings []*GetRecordingsResponse_Recording `protobuf:"bytes,1,rep,name=recordings,proto3" json:"recordings,omitempty"`
}

func (x *GetRecordingsResponse) Reset() {
	*x = GetRecordingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsResponse) ProtoMessage() {}

func (x *GetRecordingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsResponse.ProtoReflect.Descriptor instead.
func (*GetRecordingsResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{76}
}

func (x *GetRecordingsResponse) GetRecordings() []*GetRecordingsResponse_Recording {
	if x != nil {
		return x.Recordings
	}
	return nil
}

type SendEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CallType  string        `protobuf:"bytes,2,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId    string        `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	EventType UserEventType `protobuf:"varint,4,opt,name=event_type,json=eventType,proto3,enum=stream.video.UserEventType" json:"event_type,omitempty"`
}

func (x *SendEventRequest) Reset() {
	*x = SendEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventRequest) ProtoMessage() {}

func (x *SendEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventRequest.ProtoReflect.Descriptor instead.
func (*SendEventRequest) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{77}
}

func (x *SendEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendEventRequest) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *SendEventRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *SendEventRequest) GetEventType() UserEventType {
	if x != nil {
		return x.EventType
	}
	return UserEventType_USER_EVENT_TYPE_AUDIO_MUTED_UNSPECIFIED
}

type SendEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendEventResponse) Reset() {
	*x = SendEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResponse) ProtoMessage() {}

func (x *SendEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResponse.ProtoReflect.Descriptor instead.
func (*SendEventResponse) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{78}
}

type GetRecordingsResponse_Recording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType  string `protobuf:"bytes,1,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId    string `protobuf:"bytes,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	S3FileUrl string `protobuf:"bytes,3,opt,name=s3_file_url,json=s3FileUrl,proto3" json:"s3_file_url,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime  string `protobuf:"bytes,5,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
}

func (x *GetRecordingsResponse_Recording) Reset() {
	*x = GetRecordingsResponse_Recording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingsResponse_Recording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingsResponse_Recording) ProtoMessage() {}

func (x *GetRecordingsResponse_Recording) ProtoReflect() protoreflect.Message {
	mi := &file_video_coordinator_rpc_coordinator_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingsResponse_Recording.ProtoReflect.Descriptor instead.
func (*GetRecordingsResponse_Recording) Descriptor() ([]byte, []int) {
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP(), []int{76, 0}
}

func (x *GetRecordingsResponse_Recording) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetS3FileUrl() string {
	if x != nil {
		return x.S3FileUrl
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRecordingsResponse_Recording) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

var File_video_coordinator_rpc_coordinator_service_proto protoreflect.FileDescriptor

var file_video_coordinator_rpc_coordinator_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x71, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x71, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0b, 0x73, 0x71, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x54, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x14,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x46, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x54, 0x0a,
	0x0b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x59, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x71, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x0a,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x47, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x22, 0xfb, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x68, 0x6c, 0x73, 0x5f, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x68, 0x6c, 0x73, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x54, 0x4d, 0x50, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x22, 0x46, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x70, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x37, 0x0a, 0x18, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x62, 0x79, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x45,
	0x64, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x42, 0x79, 0x45, 0x64, 0x67, 0x65, 0x1a, 0x57, 0x0a, 0x12, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x42, 0x79, 0x45, 0x64, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7e, 0x0a, 0x18, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x69, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3e,
	0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x74,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x23, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x40, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35,
	0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x5f,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e,
	0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f,
	0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x68, 0x6c, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x6c, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x52, 0x54, 0x4d, 0x50, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x72,
	0x74, 0x6d, 0x70, 0x22, 0x4f, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x22, 0x7d, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x61, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x22, 0xb2, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x63, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x4b, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x09, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x63,
	0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x15,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x14, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0b, 0x73, 0x33, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x33, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x16, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x9d,
	0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x33, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x33, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9d,
	0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0xe5, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x41, 0x4c,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20,
	0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59,
	0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x41, 0x4c,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x10, 0x03, 0x12,
	0x2a, 0x0a, 0x26, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0xa5, 0x01, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a,
	0x27, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x4d, 0x55, 0x54, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x5f, 0x55, 0x4e, 0x4d, 0x55, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a,
	0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45,
	0x44, 0x10, 0x03, 0x32, 0xcb, 0x1b, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6e,
	0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x27, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x20, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_coordinator_rpc_coordinator_service_proto_rawDescOnce sync.Once
	file_video_coordinator_rpc_coordinator_service_proto_rawDescData = file_video_coordinator_rpc_coordinator_service_proto_rawDesc
)

func file_video_coordinator_rpc_coordinator_service_proto_rawDescGZIP() []byte {
	file_video_coordinator_rpc_coordinator_service_proto_rawDescOnce.Do(func() {
		file_video_coordinator_rpc_coordinator_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_coordinator_rpc_coordinator_service_proto_rawDescData)
	})
	return file_video_coordinator_rpc_coordinator_service_proto_rawDescData
}

var file_video_coordinator_rpc_coordinator_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_video_coordinator_rpc_coordinator_service_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_video_coordinator_rpc_coordinator_service_proto_goTypes = []interface{}{
	(CallStatEventType)(0),                   // 0: stream.video.CallStatEventType
	(UserEventType)(0),                       // 1: stream.video.UserEventType
	(*AddPushProviderRequest)(nil),           // 2: stream.video.AddPushProviderRequest
	(*UpdatePushProviderRequest)(nil),        // 3: stream.video.UpdatePushProviderRequest
	(*DeletePushProviderRequest)(nil),        // 4: stream.video.DeletePushProviderRequest
	(*UpdateAppSettingsRequest)(nil),         // 5: stream.video.UpdateAppSettingsRequest
	(*AppSettingsResponse)(nil),              // 6: stream.video.AppSettingsResponse
	(*DeleteRoleRequest)(nil),                // 7: stream.video.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),               // 8: stream.video.DeleteRoleResponse
	(*CreateRoleRequest)(nil),                // 9: stream.video.CreateRoleRequest
	(*CreateRoleResponse)(nil),               // 10: stream.video.CreateRoleResponse
	(*DeleteCallTypeRequest)(nil),            // 11: stream.video.DeleteCallTypeRequest
	(*DeleteCallTypeResponse)(nil),           // 12: stream.video.DeleteCallTypeResponse
	(*CallTypeResponse)(nil),                 // 13: stream.video.CallTypeResponse
	(*CallTypeRequestInput)(nil),             // 14: stream.video.CallTypeRequestInput
	(*ListPermissionsRequest)(nil),           // 15: stream.video.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),          // 16: stream.video.ListPermissionsResponse
	(*GetCallRequest)(nil),                   // 17: stream.video.GetCallRequest
	(*GetCallResponse)(nil),                  // 18: stream.video.GetCallResponse
	(*CreateOrUpdateCallsRequest)(nil),       // 19: stream.video.CreateOrUpdateCallsRequest
	(*CreateOrUpdateCallsResponse)(nil),      // 20: stream.video.CreateOrUpdateCallsResponse
	(*CreateCallRequest)(nil),                // 21: stream.video.CreateCallRequest
	(*CreateCallResponse)(nil),               // 22: stream.video.CreateCallResponse
	(*UpdateCallRequest)(nil),                // 23: stream.video.UpdateCallRequest
	(*UpdateCallResponse)(nil),               // 24: stream.video.UpdateCallResponse
	(*DeleteCallRequest)(nil),                // 25: stream.video.DeleteCallRequest
	(*DeleteCallResponse)(nil),               // 26: stream.video.DeleteCallResponse
	(*SelectEdgeServerRequest)(nil),          // 27: stream.video.SelectEdgeServerRequest
	(*SelectEdgeServerResponse)(nil),         // 28: stream.video.SelectEdgeServerResponse
	(*AddDeviceRequest)(nil),                 // 29: stream.video.AddDeviceRequest
	(*AddDeviceResponse)(nil),                // 30: stream.video.AddDeviceResponse
	(*RemoveDeviceRequest)(nil),              // 31: stream.video.RemoveDeviceRequest
	(*RemoveDeviceResponse)(nil),             // 32: stream.video.RemoveDeviceResponse
	(*ListDevicesRequest)(nil),               // 33: stream.video.ListDevicesRequest
	(*ListDevicesResponse)(nil),              // 34: stream.video.ListDevicesResponse
	(*CreateUserRequest)(nil),                // 35: stream.video.CreateUserRequest
	(*CreateOrUpdateUsersRequest)(nil),       // 36: stream.video.CreateOrUpdateUsersRequest
	(*CreateOrUpdateUsersResponse)(nil),      // 37: stream.video.CreateOrUpdateUsersResponse
	(*DeleteUserRequest)(nil),                // 38: stream.video.DeleteUserRequest
	(*ExportUserRequest)(nil),                // 39: stream.video.ExportUserRequest
	(*ExportUserResponse)(nil),               // 40: stream.video.ExportUserResponse
	(*DeleteUserResponse)(nil),               // 41: stream.video.DeleteUserResponse
	(*CreateUserResponse)(nil),               // 42: stream.video.CreateUserResponse
	(*SendCustomEventRequest)(nil),           // 43: stream.video.SendCustomEventRequest
	(*SendCustomEventResponse)(nil),          // 44: stream.video.SendCustomEventResponse
	(*JoinCallRequest)(nil),                  // 45: stream.video.JoinCallRequest
	(*UserCapability)(nil),                   // 46: stream.video.UserCapability
	(*JoinCallResponse)(nil),                 // 47: stream.video.JoinCallResponse
	(*LeaveCallRequest)(nil),                 // 48: stream.video.LeaveCallRequest
	(*LeaveCallResponse)(nil),                // 49: stream.video.LeaveCallResponse
	(*EndCallRequest)(nil),                   // 50: stream.video.EndCallRequest
	(*EndCallResponse)(nil),                  // 51: stream.video.EndCallResponse
	(*StartBroadcastRequest)(nil),            // 52: stream.video.StartBroadcastRequest
	(*StartBroadcastResponse)(nil),           // 53: stream.video.StartBroadcastResponse
	(*StopBroadcastRequest)(nil),             // 54: stream.video.StopBroadcastRequest
	(*StopBroadcastResponse)(nil),            // 55: stream.video.StopBroadcastResponse
	(*TranscribeCallRequest)(nil),            // 56: stream.video.TranscribeCallRequest
	(*TranscribeCallResponse)(nil),           // 57: stream.video.TranscribeCallResponse
	(*StopTranscribeCallRequest)(nil),        // 58: stream.video.StopTranscribeCallRequest
	(*StopTranscribeCallResponse)(nil),       // 59: stream.video.StopTranscribeCallResponse
	(*StoreLatencyRequest)(nil),              // 60: stream.video.StoreLatencyRequest
	(*StoreLatencyResponse)(nil),             // 61: stream.video.StoreLatencyResponse
	(*StartRecordingRequest)(nil),            // 62: stream.video.StartRecordingRequest
	(*ReportCallStatsRequest)(nil),           // 63: stream.video.ReportCallStatsRequest
	(*CallStatEvent)(nil),                    // 64: stream.video.CallStatEvent
	(*ReportIssueRequest)(nil),               // 65: stream.video.ReportIssueRequest
	(*ReviewCallRequest)(nil),                // 66: stream.video.ReviewCallRequest
	(*ReviewCallResponse)(nil),               // 67: stream.video.ReviewCallResponse
	(*ReportIssueResponse)(nil),              // 68: stream.video.ReportIssueResponse
	(*ParticipantCallStatEvent)(nil),         // 69: stream.video.ParticipantCallStatEvent
	(*GetCallStatsRequest)(nil),              // 70: stream.video.GetCallStatsRequest
	(*CallStats)(nil),                        // 71: stream.video.CallStats
	(*GetCallStatsResponse)(nil),             // 72: stream.video.GetCallStatsResponse
	(*ReportCallStatsResponse)(nil),          // 73: stream.video.ReportCallStatsResponse
	(*StartRecordingResponse)(nil),           // 74: stream.video.StartRecordingResponse
	(*StopRecordingRequest)(nil),             // 75: stream.video.StopRecordingRequest
	(*StopRecordingResponse)(nil),            // 76: stream.video.StopRecordingResponse
	(*GetRecordingsRequest)(nil),             // 77: stream.video.GetRecordingsRequest
	(*GetRecordingsResponse)(nil),            // 78: stream.video.GetRecordingsResponse
	(*SendEventRequest)(nil),                 // 79: stream.video.SendEventRequest
	(*SendEventResponse)(nil),                // 80: stream.video.SendEventResponse
	nil,                                      // 81: stream.video.CallTypeRequestInput.GrantsEntry
	nil,                                      // 82: stream.video.ListPermissionsResponse.PermissionsEntry
	nil,                                      // 83: stream.video.SelectEdgeServerRequest.LatencyByEdgeEntry
	(*GetRecordingsResponse_Recording)(nil),  // 84: stream.video.GetRecordingsResponse.Recording
	(*video_models.PushProvider)(nil),        // 85: stream.video.PushProvider
	(*wrapperspb.StringValue)(nil),           // 86: google.protobuf.StringValue
	(*video_models.SqsSettings)(nil),         // 87: stream.video.SqsSettings
	(*video_models.ApplicationSettings)(nil), // 88: stream.video.ApplicationSettings
	(*video_models.CallType)(nil),            // 89: stream.video.CallType
	(*video_models.Features)(nil),            // 90: stream.video.Features
	(*video_models.Call)(nil),                // 91: stream.video.Call
	(*video_models.CallState)(nil),           // 92: stream.video.CallState
	(*structpb.Struct)(nil),                  // 93: google.protobuf.Struct
	(*wrapperspb.BoolValue)(nil),             // 94: google.protobuf.BoolValue
	(*video_models.RTMPOptions)(nil),         // 95: stream.video.RTMPOptions
	(*video_models.TranscribeOptions)(nil),   // 96: stream.video.TranscribeOptions
	(*video_models.EdgeServer)(nil),          // 97: stream.video.EdgeServer
	(*video_models.Device)(nil),              // 98: stream.video.Device
	(*video_models.User)(nil),                // 99: stream.video.User
	(*video_models.Edge)(nil),                // 100: stream.video.Edge
	(*video_models.Broadcast)(nil),           // 101: stream.video.Broadcast
	(*video_models.Permissions)(nil),         // 102: stream.video.Permissions
	(*video_models.Latency)(nil),             // 103: stream.video.Latency
	(*emptypb.Empty)(nil),                    // 104: google.protobuf.Empty
}
var file_video_coordinator_rpc_coordinator_service_proto_depIdxs = []int32{
	85,  // 0: stream.video.AddPushProviderRequest.settings:type_name -> stream.video.PushProvider
	85,  // 1: stream.video.UpdatePushProviderRequest.settings:type_name -> stream.video.PushProvider
	86,  // 2: stream.video.UpdateAppSettingsRequest.webhook_url:type_name -> google.protobuf.StringValue
	87,  // 3: stream.video.UpdateAppSettingsRequest.sqs_settings:type_name -> stream.video.SqsSettings
	88,  // 4: stream.video.AppSettingsResponse.settings:type_name -> stream.video.ApplicationSettings
	89,  // 5: stream.video.CallTypeResponse.call_type:type_name -> stream.video.CallType
	81,  // 6: stream.video.CallTypeRequestInput.grants:type_name -> stream.video.CallTypeRequestInput.GrantsEntry
	90,  // 7: stream.video.CallTypeRequestInput.features:type_name -> stream.video.Features
	82,  // 8: stream.video.ListPermissionsResponse.permissions:type_name -> stream.video.ListPermissionsResponse.PermissionsEntry
	91,  // 9: stream.video.GetCallResponse.call:type_name -> stream.video.Call
	92,  // 10: stream.video.GetCallResponse.call_state:type_name -> stream.video.CallState
	21,  // 11: stream.video.CreateOrUpdateCallsRequest.calls:type_name -> stream.video.CreateCallRequest
	91,  // 12: stream.video.CreateOrUpdateCallsResponse.calls:type_name -> stream.video.Call
	93,  // 13: stream.video.CreateCallRequest.custom:type_name -> google.protobuf.Struct
	94,  // 14: stream.video.CreateCallRequest.hls_broadcast:type_name -> google.protobuf.BoolValue
	95,  // 15: stream.video.CreateCallRequest.rtmp:type_name -> stream.video.RTMPOptions
	94,  // 16: stream.video.CreateCallRequest.transcribe:type_name -> google.protobuf.BoolValue
	96,  // 17: stream.video.CreateCallRequest.transcribe_options:type_name -> stream.video.TranscribeOptions
	94,  // 18: stream.video.CreateCallRequest.recording:type_name -> google.protobuf.BoolValue
	94,  // 19: stream.video.CreateCallRequest.notify:type_name -> google.protobuf.BoolValue
	91,  // 20: stream.video.CreateCallResponse.call:type_name -> stream.video.Call
	91,  // 21: stream.video.UpdateCallResponse.call:type_name -> stream.video.Call
	83,  // 22: stream.video.SelectEdgeServerRequest.latency_by_edge:type_name -> stream.video.SelectEdgeServerRequest.LatencyByEdgeEntry
	97,  // 23: stream.video.SelectEdgeServerResponse.edge_server:type_name -> stream.video.EdgeServer
	98,  // 24: stream.video.AddDeviceResponse.device:type_name -> stream.video.Device
	98,  // 25: stream.video.ListDevicesResponse.devices:type_name -> stream.video.Device
	93,  // 26: stream.video.CreateUserRequest.custom:type_name -> google.protobuf.Struct
	35,  // 27: stream.video.CreateOrUpdateUsersRequest.users:type_name -> stream.video.CreateUserRequest
	99,  // 28: stream.video.CreateOrUpdateUsersResponse.users:type_name -> stream.video.User
	99,  // 29: stream.video.CreateUserResponse.user:type_name -> stream.video.User
	99,  // 30: stream.video.JoinCallResponse.user:type_name -> stream.video.User
	91,  // 31: stream.video.JoinCallResponse.call:type_name -> stream.video.Call
	92,  // 32: stream.video.JoinCallResponse.call_state:type_name -> stream.video.CallState
	100, // 33: stream.video.JoinCallResponse.edges:type_name -> stream.video.Edge
	46,  // 34: stream.video.JoinCallResponse.own_capabilities:type_name -> stream.video.UserCapability
	95,  // 35: stream.video.StartBroadcastRequest.rtmp:type_name -> stream.video.RTMPOptions
	101, // 36: stream.video.StartBroadcastResponse.broadcast:type_name -> stream.video.Broadcast
	93,  // 37: stream.video.ReportCallStatsRequest.stats:type_name -> google.protobuf.Struct
	0,   // 38: stream.video.CallStatEvent.type:type_name -> stream.video.CallStatEventType
	93,  // 39: stream.video.ReportIssueRequest.custom:type_name -> google.protobuf.Struct
	93,  // 40: stream.video.ReviewCallRequest.custom:type_name -> google.protobuf.Struct
	64,  // 41: stream.video.ParticipantCallStatEvent.call_timelines:type_name -> stream.video.CallStatEvent
	64,  // 42: stream.video.CallStats.call_timelines:type_name -> stream.video.CallStatEvent
	69,  // 43: stream.video.CallStats.participant_timelines:type_name -> stream.video.ParticipantCallStatEvent
	91,  // 44: stream.video.GetCallStatsResponse.call:type_name -> stream.video.Call
	71,  // 45: stream.video.GetCallStatsResponse.call_stats:type_name -> stream.video.CallStats
	84,  // 46: stream.video.GetRecordingsResponse.recordings:type_name -> stream.video.GetRecordingsResponse.Recording
	1,   // 47: stream.video.SendEventRequest.event_type:type_name -> stream.video.UserEventType
	102, // 48: stream.video.CallTypeRequestInput.GrantsEntry.value:type_name -> stream.video.Permissions
	102, // 49: stream.video.ListPermissionsResponse.PermissionsEntry.value:type_name -> stream.video.Permissions
	103, // 50: stream.video.SelectEdgeServerRequest.LatencyByEdgeEntry.value:type_name -> stream.video.Latency
	21,  // 51: stream.video.CallCoordinatorService.CreateCall:input_type -> stream.video.CreateCallRequest
	17,  // 52: stream.video.CallCoordinatorService.GetCall:input_type -> stream.video.GetCallRequest
	23,  // 53: stream.video.CallCoordinatorService.UpdateCall:input_type -> stream.video.UpdateCallRequest
	25,  // 54: stream.video.CallCoordinatorService.DeleteCall:input_type -> stream.video.DeleteCallRequest
	45,  // 55: stream.video.CallCoordinatorService.JoinCall:input_type -> stream.video.JoinCallRequest
	27,  // 56: stream.video.CallCoordinatorService.SelectEdgeServer:input_type -> stream.video.SelectEdgeServerRequest
	48,  // 57: stream.video.CallCoordinatorService.LeaveCall:input_type -> stream.video.LeaveCallRequest
	50,  // 58: stream.video.CallCoordinatorService.EndCall:input_type -> stream.video.EndCallRequest
	29,  // 59: stream.video.CallCoordinatorService.AddDevice:input_type -> stream.video.AddDeviceRequest
	31,  // 60: stream.video.CallCoordinatorService.RemoveDevice:input_type -> stream.video.RemoveDeviceRequest
	33,  // 61: stream.video.CallCoordinatorService.ListDevices:input_type -> stream.video.ListDevicesRequest
	79,  // 62: stream.video.CallCoordinatorService.SendEvent:input_type -> stream.video.SendEventRequest
	43,  // 63: stream.video.CallCoordinatorService.SendCustomEvent:input_type -> stream.video.SendCustomEventRequest
	19,  // 64: stream.video.CallCoordinatorService.CreateOrUpdateCalls:input_type -> stream.video.CreateOrUpdateCallsRequest
	36,  // 65: stream.video.CallCoordinatorService.CreateOrUpdateUsers:input_type -> stream.video.CreateOrUpdateUsersRequest
	56,  // 66: stream.video.CallCoordinatorService.TranscribeCall:input_type -> stream.video.TranscribeCallRequest
	58,  // 67: stream.video.CallCoordinatorService.StopTranscribeCall:input_type -> stream.video.StopTranscribeCallRequest
	52,  // 68: stream.video.CallCoordinatorService.StartBroadcast:input_type -> stream.video.StartBroadcastRequest
	54,  // 69: stream.video.CallCoordinatorService.StopBroadcast:input_type -> stream.video.StopBroadcastRequest
	62,  // 70: stream.video.CallCoordinatorService.StartRecording:input_type -> stream.video.StartRecordingRequest
	75,  // 71: stream.video.CallCoordinatorService.StopRecording:input_type -> stream.video.StopRecordingRequest
	77,  // 72: stream.video.CallCoordinatorService.GetRecordings:input_type -> stream.video.GetRecordingsRequest
	35,  // 73: stream.video.CallCoordinatorService.CreateUser:input_type -> stream.video.CreateUserRequest
	38,  // 74: stream.video.CallCoordinatorService.DeleteUser:input_type -> stream.video.DeleteUserRequest
	39,  // 75: stream.video.CallCoordinatorService.ExportUser:input_type -> stream.video.ExportUserRequest
	5,   // 76: stream.video.CallCoordinatorService.UpdateAppSettings:input_type -> stream.video.UpdateAppSettingsRequest
	104, // 77: stream.video.CallCoordinatorService.GetAppSettings:input_type -> google.protobuf.Empty
	14,  // 78: stream.video.CallCoordinatorService.CreateCallType:input_type -> stream.video.CallTypeRequestInput
	14,  // 79: stream.video.CallCoordinatorService.UpdateCallType:input_type -> stream.video.CallTypeRequestInput
	11,  // 80: stream.video.CallCoordinatorService.DeleteCallType:input_type -> stream.video.DeleteCallTypeRequest
	15,  // 81: stream.video.CallCoordinatorService.ListPermissions:input_type -> stream.video.ListPermissionsRequest
	9,   // 82: stream.video.CallCoordinatorService.CreateRole:input_type -> stream.video.CreateRoleRequest
	7,   // 83: stream.video.CallCoordinatorService.DeleteRole:input_type -> stream.video.DeleteRoleRequest
	2,   // 84: stream.video.CallCoordinatorService.AddPushProvider:input_type -> stream.video.AddPushProviderRequest
	3,   // 85: stream.video.CallCoordinatorService.UpdatePushProvider:input_type -> stream.video.UpdatePushProviderRequest
	4,   // 86: stream.video.CallCoordinatorService.DeletePushProvider:input_type -> stream.video.DeletePushProviderRequest
	63,  // 87: stream.video.CallCoordinatorService.ReportCallStats:input_type -> stream.video.ReportCallStatsRequest
	70,  // 88: stream.video.CallCoordinatorService.GetCallStats:input_type -> stream.video.GetCallStatsRequest
	66,  // 89: stream.video.CallCoordinatorService.ReviewCall:input_type -> stream.video.ReviewCallRequest
	65,  // 90: stream.video.CallCoordinatorService.ReportIssue:input_type -> stream.video.ReportIssueRequest
	22,  // 91: stream.video.CallCoordinatorService.CreateCall:output_type -> stream.video.CreateCallResponse
	18,  // 92: stream.video.CallCoordinatorService.GetCall:output_type -> stream.video.GetCallResponse
	24,  // 93: stream.video.CallCoordinatorService.UpdateCall:output_type -> stream.video.UpdateCallResponse
	26,  // 94: stream.video.CallCoordinatorService.DeleteCall:output_type -> stream.video.DeleteCallResponse
	47,  // 95: stream.video.CallCoordinatorService.JoinCall:output_type -> stream.video.JoinCallResponse
	28,  // 96: stream.video.CallCoordinatorService.SelectEdgeServer:output_type -> stream.video.SelectEdgeServerResponse
	49,  // 97: stream.video.CallCoordinatorService.LeaveCall:output_type -> stream.video.LeaveCallResponse
	51,  // 98: stream.video.CallCoordinatorService.EndCall:output_type -> stream.video.EndCallResponse
	30,  // 99: stream.video.CallCoordinatorService.AddDevice:output_type -> stream.video.AddDeviceResponse
	32,  // 100: stream.video.CallCoordinatorService.RemoveDevice:output_type -> stream.video.RemoveDeviceResponse
	34,  // 101: stream.video.CallCoordinatorService.ListDevices:output_type -> stream.video.ListDevicesResponse
	80,  // 102: stream.video.CallCoordinatorService.SendEvent:output_type -> stream.video.SendEventResponse
	44,  // 103: stream.video.CallCoordinatorService.SendCustomEvent:output_type -> stream.video.SendCustomEventResponse
	20,  // 104: stream.video.CallCoordinatorService.CreateOrUpdateCalls:output_type -> stream.video.CreateOrUpdateCallsResponse
	37,  // 105: stream.video.CallCoordinatorService.CreateOrUpdateUsers:output_type -> stream.video.CreateOrUpdateUsersResponse
	57,  // 106: stream.video.CallCoordinatorService.TranscribeCall:output_type -> stream.video.TranscribeCallResponse
	59,  // 107: stream.video.CallCoordinatorService.StopTranscribeCall:output_type -> stream.video.StopTranscribeCallResponse
	53,  // 108: stream.video.CallCoordinatorService.StartBroadcast:output_type -> stream.video.StartBroadcastResponse
	55,  // 109: stream.video.CallCoordinatorService.StopBroadcast:output_type -> stream.video.StopBroadcastResponse
	74,  // 110: stream.video.CallCoordinatorService.StartRecording:output_type -> stream.video.StartRecordingResponse
	76,  // 111: stream.video.CallCoordinatorService.StopRecording:output_type -> stream.video.StopRecordingResponse
	78,  // 112: stream.video.CallCoordinatorService.GetRecordings:output_type -> stream.video.GetRecordingsResponse
	42,  // 113: stream.video.CallCoordinatorService.CreateUser:output_type -> stream.video.CreateUserResponse
	41,  // 114: stream.video.CallCoordinatorService.DeleteUser:output_type -> stream.video.DeleteUserResponse
	40,  // 115: stream.video.CallCoordinatorService.ExportUser:output_type -> stream.video.ExportUserResponse
	6,   // 116: stream.video.CallCoordinatorService.UpdateAppSettings:output_type -> stream.video.AppSettingsResponse
	6,   // 117: stream.video.CallCoordinatorService.GetAppSettings:output_type -> stream.video.AppSettingsResponse
	13,  // 118: stream.video.CallCoordinatorService.CreateCallType:output_type -> stream.video.CallTypeResponse
	13,  // 119: stream.video.CallCoordinatorService.UpdateCallType:output_type -> stream.video.CallTypeResponse
	12,  // 120: stream.video.CallCoordinatorService.DeleteCallType:output_type -> stream.video.DeleteCallTypeResponse
	16,  // 121: stream.video.CallCoordinatorService.ListPermissions:output_type -> stream.video.ListPermissionsResponse
	10,  // 122: stream.video.CallCoordinatorService.CreateRole:output_type -> stream.video.CreateRoleResponse
	8,   // 123: stream.video.CallCoordinatorService.DeleteRole:output_type -> stream.video.DeleteRoleResponse
	6,   // 124: stream.video.CallCoordinatorService.AddPushProvider:output_type -> stream.video.AppSettingsResponse
	6,   // 125: stream.video.CallCoordinatorService.UpdatePushProvider:output_type -> stream.video.AppSettingsResponse
	6,   // 126: stream.video.CallCoordinatorService.DeletePushProvider:output_type -> stream.video.AppSettingsResponse
	73,  // 127: stream.video.CallCoordinatorService.ReportCallStats:output_type -> stream.video.ReportCallStatsResponse
	72,  // 128: stream.video.CallCoordinatorService.GetCallStats:output_type -> stream.video.GetCallStatsResponse
	67,  // 129: stream.video.CallCoordinatorService.ReviewCall:output_type -> stream.video.ReviewCallResponse
	68,  // 130: stream.video.CallCoordinatorService.ReportIssue:output_type -> stream.video.ReportIssueResponse
	91,  // [91:131] is the sub-list for method output_type
	51,  // [51:91] is the sub-list for method input_type
	51,  // [51:51] is the sub-list for extension type_name
	51,  // [51:51] is the sub-list for extension extendee
	0,   // [0:51] is the sub-list for field type_name
}

func init() { file_video_coordinator_rpc_coordinator_service_proto_init() }
func file_video_coordinator_rpc_coordinator_service_proto_init() {
	if File_video_coordinator_rpc_coordinator_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallTypeRequestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCallsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCallsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectEdgeServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectEdgeServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBroadcastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscribeCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscribeCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTranscribeCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTranscribeCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreLatencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreLatencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCallStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallStatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantCallStatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCallStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_coordinator_rpc_coordinator_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingsResponse_Recording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_coordinator_rpc_coordinator_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_coordinator_rpc_coordinator_service_proto_goTypes,
		DependencyIndexes: file_video_coordinator_rpc_coordinator_service_proto_depIdxs,
		EnumInfos:         file_video_coordinator_rpc_coordinator_service_proto_enumTypes,
		MessageInfos:      file_video_coordinator_rpc_coordinator_service_proto_msgTypes,
	}.Build()
	File_video_coordinator_rpc_coordinator_service_proto = out.File
	file_video_coordinator_rpc_coordinator_service_proto_rawDesc = nil
	file_video_coordinator_rpc_coordinator_service_proto_goTypes = nil
	file_video_coordinator_rpc_coordinator_service_proto_depIdxs = nil
}
