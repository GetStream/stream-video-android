// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: video_events/events.proto

package video_events

import (
	video_coordinator_rpc "github.com/GetStream/video/protobuf/video_coordinator_rpc"
	video_models "github.com/GetStream/video/protobuf/video_models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebsocketEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventPayload:
	//	*WebsocketEvent_HealthCheck
	//	*WebsocketEvent_CallRinging
	//	*WebsocketEvent_CallCreated
	//	*WebsocketEvent_CallUpdated
	//	*WebsocketEvent_CallEnded
	//	*WebsocketEvent_CallDeleted
	//	*WebsocketEvent_UserUpdated
	//	*WebsocketEvent_ParticipantInvited
	//	*WebsocketEvent_ParticipantUpdated
	//	*WebsocketEvent_ParticipantDeleted
	//	*WebsocketEvent_ParticipantJoined
	//	*WebsocketEvent_ParticipantLeft
	//	*WebsocketEvent_BroadcastStarted
	//	*WebsocketEvent_BroadcastEnded
	//	*WebsocketEvent_AuthPayload
	//	*WebsocketEvent_AudioMuted
	//	*WebsocketEvent_AudioUnmuted
	//	*WebsocketEvent_VideoStarted
	//	*WebsocketEvent_VideoStopped
	//	*WebsocketEvent_ScreenshareStarted
	//	*WebsocketEvent_ScreenshareStopped
	//	*WebsocketEvent_RecordingStarted
	//	*WebsocketEvent_RecordingStopped
	EventPayload isWebsocketEvent_EventPayload `protobuf_oneof:"event_payload"`
}

func (x *WebsocketEvent) Reset() {
	*x = WebsocketEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketEvent) ProtoMessage() {}

func (x *WebsocketEvent) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketEvent.ProtoReflect.Descriptor instead.
func (*WebsocketEvent) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{0}
}

func (m *WebsocketEvent) GetEventPayload() isWebsocketEvent_EventPayload {
	if m != nil {
		return m.EventPayload
	}
	return nil
}

func (x *WebsocketEvent) GetHealthCheck() *Healthcheck {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_HealthCheck); ok {
		return x.HealthCheck
	}
	return nil
}

func (x *WebsocketEvent) GetCallRinging() *CallRinging {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_CallRinging); ok {
		return x.CallRinging
	}
	return nil
}

func (x *WebsocketEvent) GetCallCreated() *CallCreated {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_CallCreated); ok {
		return x.CallCreated
	}
	return nil
}

func (x *WebsocketEvent) GetCallUpdated() *CallUpdated {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_CallUpdated); ok {
		return x.CallUpdated
	}
	return nil
}

func (x *WebsocketEvent) GetCallEnded() *CallEnded {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_CallEnded); ok {
		return x.CallEnded
	}
	return nil
}

func (x *WebsocketEvent) GetCallDeleted() *CallDeleted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_CallDeleted); ok {
		return x.CallDeleted
	}
	return nil
}

func (x *WebsocketEvent) GetUserUpdated() *UserUpdated {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_UserUpdated); ok {
		return x.UserUpdated
	}
	return nil
}

func (x *WebsocketEvent) GetParticipantInvited() *ParticipantInvited {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ParticipantInvited); ok {
		return x.ParticipantInvited
	}
	return nil
}

func (x *WebsocketEvent) GetParticipantUpdated() *ParticipantUpdated {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ParticipantUpdated); ok {
		return x.ParticipantUpdated
	}
	return nil
}

func (x *WebsocketEvent) GetParticipantDeleted() *ParticipantDeleted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ParticipantDeleted); ok {
		return x.ParticipantDeleted
	}
	return nil
}

func (x *WebsocketEvent) GetParticipantJoined() *ParticipantJoined {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ParticipantJoined); ok {
		return x.ParticipantJoined
	}
	return nil
}

func (x *WebsocketEvent) GetParticipantLeft() *ParticipantLeft {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ParticipantLeft); ok {
		return x.ParticipantLeft
	}
	return nil
}

func (x *WebsocketEvent) GetBroadcastStarted() *BroadcastStarted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_BroadcastStarted); ok {
		return x.BroadcastStarted
	}
	return nil
}

func (x *WebsocketEvent) GetBroadcastEnded() *BroadcastEnded {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_BroadcastEnded); ok {
		return x.BroadcastEnded
	}
	return nil
}

func (x *WebsocketEvent) GetAuthPayload() *AuthPayload {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_AuthPayload); ok {
		return x.AuthPayload
	}
	return nil
}

func (x *WebsocketEvent) GetAudioMuted() *AudioMuted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_AudioMuted); ok {
		return x.AudioMuted
	}
	return nil
}

func (x *WebsocketEvent) GetAudioUnmuted() *AudioUnmuted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_AudioUnmuted); ok {
		return x.AudioUnmuted
	}
	return nil
}

func (x *WebsocketEvent) GetVideoStarted() *VideoStarted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_VideoStarted); ok {
		return x.VideoStarted
	}
	return nil
}

func (x *WebsocketEvent) GetVideoStopped() *VideoStopped {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_VideoStopped); ok {
		return x.VideoStopped
	}
	return nil
}

func (x *WebsocketEvent) GetScreenshareStarted() *ScreenshareStarted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ScreenshareStarted); ok {
		return x.ScreenshareStarted
	}
	return nil
}

func (x *WebsocketEvent) GetScreenshareStopped() *ScreenshareStopped {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_ScreenshareStopped); ok {
		return x.ScreenshareStopped
	}
	return nil
}

func (x *WebsocketEvent) GetRecordingStarted() *RecordingStarted {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_RecordingStarted); ok {
		return x.RecordingStarted
	}
	return nil
}

func (x *WebsocketEvent) GetRecordingStopped() *RecordingStopped {
	if x, ok := x.GetEventPayload().(*WebsocketEvent_RecordingStopped); ok {
		return x.RecordingStopped
	}
	return nil
}

type isWebsocketEvent_EventPayload interface {
	isWebsocketEvent_EventPayload()
}

type WebsocketEvent_HealthCheck struct {
	HealthCheck *Healthcheck `protobuf:"bytes,1,opt,name=health_check,json=healthCheck,proto3,oneof"`
}

type WebsocketEvent_CallRinging struct {
	CallRinging *CallRinging `protobuf:"bytes,2,opt,name=call_ringing,json=callRinging,proto3,oneof"`
}

type WebsocketEvent_CallCreated struct {
	CallCreated *CallCreated `protobuf:"bytes,3,opt,name=call_created,json=callCreated,proto3,oneof"`
}

type WebsocketEvent_CallUpdated struct {
	CallUpdated *CallUpdated `protobuf:"bytes,4,opt,name=call_updated,json=callUpdated,proto3,oneof"`
}

type WebsocketEvent_CallEnded struct {
	CallEnded *CallEnded `protobuf:"bytes,5,opt,name=call_ended,json=callEnded,proto3,oneof"`
}

type WebsocketEvent_CallDeleted struct {
	CallDeleted *CallDeleted `protobuf:"bytes,6,opt,name=call_deleted,json=callDeleted,proto3,oneof"`
}

type WebsocketEvent_UserUpdated struct {
	UserUpdated *UserUpdated `protobuf:"bytes,7,opt,name=user_updated,json=userUpdated,proto3,oneof"`
}

type WebsocketEvent_ParticipantInvited struct {
	ParticipantInvited *ParticipantInvited `protobuf:"bytes,8,opt,name=participant_invited,json=participantInvited,proto3,oneof"`
}

type WebsocketEvent_ParticipantUpdated struct {
	ParticipantUpdated *ParticipantUpdated `protobuf:"bytes,9,opt,name=participant_updated,json=participantUpdated,proto3,oneof"`
}

type WebsocketEvent_ParticipantDeleted struct {
	ParticipantDeleted *ParticipantDeleted `protobuf:"bytes,10,opt,name=participant_deleted,json=participantDeleted,proto3,oneof"`
}

type WebsocketEvent_ParticipantJoined struct {
	ParticipantJoined *ParticipantJoined `protobuf:"bytes,11,opt,name=participant_joined,json=participantJoined,proto3,oneof"`
}

type WebsocketEvent_ParticipantLeft struct {
	ParticipantLeft *ParticipantLeft `protobuf:"bytes,12,opt,name=participant_left,json=participantLeft,proto3,oneof"`
}

type WebsocketEvent_BroadcastStarted struct {
	BroadcastStarted *BroadcastStarted `protobuf:"bytes,13,opt,name=broadcast_started,json=broadcastStarted,proto3,oneof"`
}

type WebsocketEvent_BroadcastEnded struct {
	BroadcastEnded *BroadcastEnded `protobuf:"bytes,14,opt,name=broadcast_ended,json=broadcastEnded,proto3,oneof"`
}

type WebsocketEvent_AuthPayload struct {
	AuthPayload *AuthPayload `protobuf:"bytes,15,opt,name=auth_payload,json=authPayload,proto3,oneof"`
}

type WebsocketEvent_AudioMuted struct {
	AudioMuted *AudioMuted `protobuf:"bytes,16,opt,name=audio_muted,json=audioMuted,proto3,oneof"`
}

type WebsocketEvent_AudioUnmuted struct {
	AudioUnmuted *AudioUnmuted `protobuf:"bytes,17,opt,name=audio_unmuted,json=audioUnmuted,proto3,oneof"`
}

type WebsocketEvent_VideoStarted struct {
	VideoStarted *VideoStarted `protobuf:"bytes,18,opt,name=video_started,json=videoStarted,proto3,oneof"`
}

type WebsocketEvent_VideoStopped struct {
	VideoStopped *VideoStopped `protobuf:"bytes,19,opt,name=video_stopped,json=videoStopped,proto3,oneof"`
}

type WebsocketEvent_ScreenshareStarted struct {
	ScreenshareStarted *ScreenshareStarted `protobuf:"bytes,20,opt,name=screenshare_started,json=screenshareStarted,proto3,oneof"`
}

type WebsocketEvent_ScreenshareStopped struct {
	ScreenshareStopped *ScreenshareStopped `protobuf:"bytes,21,opt,name=screenshare_stopped,json=screenshareStopped,proto3,oneof"`
}

type WebsocketEvent_RecordingStarted struct {
	RecordingStarted *RecordingStarted `protobuf:"bytes,22,opt,name=recording_started,json=recordingStarted,proto3,oneof"`
}

type WebsocketEvent_RecordingStopped struct {
	RecordingStopped *RecordingStopped `protobuf:"bytes,23,opt,name=recording_stopped,json=recordingStopped,proto3,oneof"`
}

func (*WebsocketEvent_HealthCheck) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_CallRinging) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_CallCreated) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_CallUpdated) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_CallEnded) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_CallDeleted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_UserUpdated) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ParticipantInvited) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ParticipantUpdated) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ParticipantDeleted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ParticipantJoined) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ParticipantLeft) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_BroadcastStarted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_BroadcastEnded) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_AuthPayload) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_AudioMuted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_AudioUnmuted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_VideoStarted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_VideoStopped) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ScreenshareStarted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_ScreenshareStopped) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_RecordingStarted) isWebsocketEvent_EventPayload() {}

func (*WebsocketEvent_RecordingStopped) isWebsocketEvent_EventPayload() {}

type Healthcheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CallType string `protobuf:"bytes,3,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	CallId   string `protobuf:"bytes,4,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Video    bool   `protobuf:"varint,5,opt,name=video,proto3" json:"video,omitempty"`
	Audio    bool   `protobuf:"varint,6,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *Healthcheck) Reset() {
	*x = Healthcheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Healthcheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Healthcheck) ProtoMessage() {}

func (x *Healthcheck) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Healthcheck.ProtoReflect.Descriptor instead.
func (*Healthcheck) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *Healthcheck) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Healthcheck) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Healthcheck) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *Healthcheck) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *Healthcheck) GetVideo() bool {
	if x != nil {
		return x.Video
	}
	return false
}

func (x *Healthcheck) GetAudio() bool {
	if x != nil {
		return x.Audio
	}
	return false
}

type AuthPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   *video_coordinator_rpc.CreateUserRequest `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Device *video_models.DeviceRequest              `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	ApiKey string                                   `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Token  string                                   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthPayload) Reset() {
	*x = AuthPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPayload) ProtoMessage() {}

func (x *AuthPayload) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPayload.ProtoReflect.Descriptor instead.
func (*AuthPayload) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *AuthPayload) GetUser() *video_coordinator_rpc.CreateUserRequest {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AuthPayload) GetDevice() *video_models.DeviceRequest {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *AuthPayload) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *AuthPayload) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//*
//CallRinging is fired when a call is created with the ring=true option
//Or when you manually call call.ring()
type CallRinging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CallRinging) Reset() {
	*x = CallRinging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallRinging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRinging) ProtoMessage() {}

func (x *CallRinging) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRinging.ProtoReflect.Descriptor instead.
func (*CallRinging) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{3}
}

func (x *CallRinging) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

//*
//CallCreated is fired when a call is created
type CallCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CallCreated) Reset() {
	*x = CallCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallCreated) ProtoMessage() {}

func (x *CallCreated) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallCreated.ProtoReflect.Descriptor instead.
func (*CallCreated) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{4}
}

func (x *CallCreated) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type CallUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CallUpdated) Reset() {
	*x = CallUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallUpdated) ProtoMessage() {}

func (x *CallUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallUpdated.ProtoReflect.Descriptor instead.
func (*CallUpdated) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{5}
}

func (x *CallUpdated) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type CallEnded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CallEnded) Reset() {
	*x = CallEnded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEnded) ProtoMessage() {}

func (x *CallEnded) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEnded.ProtoReflect.Descriptor instead.
func (*CallEnded) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{6}
}

func (x *CallEnded) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type CallDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *CallDeleted) Reset() {
	*x = CallDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDeleted) ProtoMessage() {}

func (x *CallDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDeleted.ProtoReflect.Descriptor instead.
func (*CallDeleted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{7}
}

func (x *CallDeleted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type AudioMuted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	// Types that are assignable to Target:
	//	*AudioMuted_UserId
	//	*AudioMuted_AllUsers
	Target isAudioMuted_Target `protobuf_oneof:"target"`
}

func (x *AudioMuted) Reset() {
	*x = AudioMuted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMuted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMuted) ProtoMessage() {}

func (x *AudioMuted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMuted.ProtoReflect.Descriptor instead.
func (*AudioMuted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{8}
}

func (x *AudioMuted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (m *AudioMuted) GetTarget() isAudioMuted_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *AudioMuted) GetUserId() string {
	if x, ok := x.GetTarget().(*AudioMuted_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *AudioMuted) GetAllUsers() bool {
	if x, ok := x.GetTarget().(*AudioMuted_AllUsers); ok {
		return x.AllUsers
	}
	return false
}

type isAudioMuted_Target interface {
	isAudioMuted_Target()
}

type AudioMuted_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type AudioMuted_AllUsers struct {
	AllUsers bool `protobuf:"varint,3,opt,name=all_users,json=allUsers,proto3,oneof"`
}

func (*AudioMuted_UserId) isAudioMuted_Target() {}

func (*AudioMuted_AllUsers) isAudioMuted_Target() {}

type AudioUnmuted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AudioUnmuted) Reset() {
	*x = AudioUnmuted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioUnmuted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioUnmuted) ProtoMessage() {}

func (x *AudioUnmuted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioUnmuted.ProtoReflect.Descriptor instead.
func (*AudioUnmuted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{9}
}

func (x *AudioUnmuted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *AudioUnmuted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type VideoStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *VideoStarted) Reset() {
	*x = VideoStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStarted) ProtoMessage() {}

func (x *VideoStarted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStarted.ProtoReflect.Descriptor instead.
func (*VideoStarted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{10}
}

func (x *VideoStarted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *VideoStarted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type VideoStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *VideoStopped) Reset() {
	*x = VideoStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStopped) ProtoMessage() {}

func (x *VideoStopped) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStopped.ProtoReflect.Descriptor instead.
func (*VideoStopped) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{11}
}

func (x *VideoStopped) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *VideoStopped) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ScreenshareStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ScreenshareStarted) Reset() {
	*x = ScreenshareStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenshareStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshareStarted) ProtoMessage() {}

func (x *ScreenshareStarted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshareStarted.ProtoReflect.Descriptor instead.
func (*ScreenshareStarted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{12}
}

func (x *ScreenshareStarted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ScreenshareStarted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ScreenshareStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ScreenshareStopped) Reset() {
	*x = ScreenshareStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenshareStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshareStopped) ProtoMessage() {}

func (x *ScreenshareStopped) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshareStopped.ProtoReflect.Descriptor instead.
func (*ScreenshareStopped) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{13}
}

func (x *ScreenshareStopped) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ScreenshareStopped) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RecordingStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *RecordingStarted) Reset() {
	*x = RecordingStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingStarted) ProtoMessage() {}

func (x *RecordingStarted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingStarted.ProtoReflect.Descriptor instead.
func (*RecordingStarted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{14}
}

func (x *RecordingStarted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type RecordingStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *RecordingStopped) Reset() {
	*x = RecordingStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingStopped) ProtoMessage() {}

func (x *RecordingStopped) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingStopped.ProtoReflect.Descriptor instead.
func (*RecordingStopped) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{15}
}

func (x *RecordingStopped) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type UserUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *video_models.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserUpdated) Reset() {
	*x = UserUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdated) ProtoMessage() {}

func (x *UserUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdated.ProtoReflect.Descriptor instead.
func (*UserUpdated) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{16}
}

func (x *UserUpdated) GetUser() *video_models.User {
	if x != nil {
		return x.User
	}
	return nil
}

type ParticipantInvited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call        *video_models.Call        `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	Participant *video_models.Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *ParticipantInvited) Reset() {
	*x = ParticipantInvited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantInvited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantInvited) ProtoMessage() {}

func (x *ParticipantInvited) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantInvited.ProtoReflect.Descriptor instead.
func (*ParticipantInvited) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{17}
}

func (x *ParticipantInvited) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ParticipantInvited) GetParticipant() *video_models.Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type ParticipantUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call        *video_models.Call        `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	Participant *video_models.Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *ParticipantUpdated) Reset() {
	*x = ParticipantUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantUpdated) ProtoMessage() {}

func (x *ParticipantUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantUpdated.ProtoReflect.Descriptor instead.
func (*ParticipantUpdated) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{18}
}

func (x *ParticipantUpdated) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ParticipantUpdated) GetParticipant() *video_models.Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type ParticipantDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call   *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	UserId string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ParticipantDeleted) Reset() {
	*x = ParticipantDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantDeleted) ProtoMessage() {}

func (x *ParticipantDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantDeleted.ProtoReflect.Descriptor instead.
func (*ParticipantDeleted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{19}
}

func (x *ParticipantDeleted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ParticipantDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ParticipantJoined is fired when a user joins a call
type ParticipantJoined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call        *video_models.Call        `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	Participant *video_models.Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *ParticipantJoined) Reset() {
	*x = ParticipantJoined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantJoined) ProtoMessage() {}

func (x *ParticipantJoined) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantJoined.ProtoReflect.Descriptor instead.
func (*ParticipantJoined) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{20}
}

func (x *ParticipantJoined) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ParticipantJoined) GetParticipant() *video_models.Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type ParticipantLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call        *video_models.Call        `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	Participant *video_models.Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *ParticipantLeft) Reset() {
	*x = ParticipantLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLeft) ProtoMessage() {}

func (x *ParticipantLeft) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLeft.ProtoReflect.Descriptor instead.
func (*ParticipantLeft) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{21}
}

func (x *ParticipantLeft) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *ParticipantLeft) GetParticipant() *video_models.Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type BroadcastStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *BroadcastStarted) Reset() {
	*x = BroadcastStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastStarted) ProtoMessage() {}

func (x *BroadcastStarted) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastStarted.ProtoReflect.Descriptor instead.
func (*BroadcastStarted) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{22}
}

func (x *BroadcastStarted) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

type BroadcastEnded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Call *video_models.Call `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *BroadcastEnded) Reset() {
	*x = BroadcastEnded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_events_events_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastEnded) ProtoMessage() {}

func (x *BroadcastEnded) ProtoReflect() protoreflect.Message {
	mi := &file_video_events_events_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastEnded.ProtoReflect.Descriptor instead.
func (*BroadcastEnded) Descriptor() ([]byte, []int) {
	return file_video_events_events_proto_rawDescGZIP(), []int{23}
}

func (x *BroadcastEnded) GetCall() *video_models.Call {
	if x != nil {
		return x.Call
	}
	return nil
}

var File_video_events_events_proto protoreflect.FileDescriptor

var file_video_events_events_proto_rawDesc = []byte{
	0x0a, 0x19, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x1a, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x70, 0x63,
	0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x0d, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x52, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x53, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x13,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x50, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x4d, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x47,
	0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x4d,
	0x75, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x53, 0x0a,
	0x13, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x53, 0x0a, 0x13, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x12, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0xa6,
	0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x35, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x35,
	0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x35, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x33, 0x0a, 0x09,
	0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x22, 0x35, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x78, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x19,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x61, 0x6c, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08,
	0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x22, 0x4f, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x6e, 0x6d, 0x75, 0x74,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x12,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22,
	0x3a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x35, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x79, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c,
	0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x79, 0x0a,
	0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x78, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x22, 0x3a, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x38, 0x0a,
	0x0e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_video_events_events_proto_rawDescOnce sync.Once
	file_video_events_events_proto_rawDescData = file_video_events_events_proto_rawDesc
)

func file_video_events_events_proto_rawDescGZIP() []byte {
	file_video_events_events_proto_rawDescOnce.Do(func() {
		file_video_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_events_events_proto_rawDescData)
	})
	return file_video_events_events_proto_rawDescData
}

var file_video_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_video_events_events_proto_goTypes = []interface{}{
	(*WebsocketEvent)(nil),                          // 0: stream.video.WebsocketEvent
	(*Healthcheck)(nil),                             // 1: stream.video.Healthcheck
	(*AuthPayload)(nil),                             // 2: stream.video.AuthPayload
	(*CallRinging)(nil),                             // 3: stream.video.CallRinging
	(*CallCreated)(nil),                             // 4: stream.video.CallCreated
	(*CallUpdated)(nil),                             // 5: stream.video.CallUpdated
	(*CallEnded)(nil),                               // 6: stream.video.CallEnded
	(*CallDeleted)(nil),                             // 7: stream.video.CallDeleted
	(*AudioMuted)(nil),                              // 8: stream.video.AudioMuted
	(*AudioUnmuted)(nil),                            // 9: stream.video.AudioUnmuted
	(*VideoStarted)(nil),                            // 10: stream.video.VideoStarted
	(*VideoStopped)(nil),                            // 11: stream.video.VideoStopped
	(*ScreenshareStarted)(nil),                      // 12: stream.video.ScreenshareStarted
	(*ScreenshareStopped)(nil),                      // 13: stream.video.ScreenshareStopped
	(*RecordingStarted)(nil),                        // 14: stream.video.RecordingStarted
	(*RecordingStopped)(nil),                        // 15: stream.video.RecordingStopped
	(*UserUpdated)(nil),                             // 16: stream.video.UserUpdated
	(*ParticipantInvited)(nil),                      // 17: stream.video.ParticipantInvited
	(*ParticipantUpdated)(nil),                      // 18: stream.video.ParticipantUpdated
	(*ParticipantDeleted)(nil),                      // 19: stream.video.ParticipantDeleted
	(*ParticipantJoined)(nil),                       // 20: stream.video.ParticipantJoined
	(*ParticipantLeft)(nil),                         // 21: stream.video.ParticipantLeft
	(*BroadcastStarted)(nil),                        // 22: stream.video.BroadcastStarted
	(*BroadcastEnded)(nil),                          // 23: stream.video.BroadcastEnded
	(*video_coordinator_rpc.CreateUserRequest)(nil), // 24: stream.video.CreateUserRequest
	(*video_models.DeviceRequest)(nil),              // 25: stream.video.DeviceRequest
	(*video_models.Call)(nil),                       // 26: stream.video.Call
	(*video_models.User)(nil),                       // 27: stream.video.User
	(*video_models.Participant)(nil),                // 28: stream.video.Participant
}
var file_video_events_events_proto_depIdxs = []int32{
	1,  // 0: stream.video.WebsocketEvent.health_check:type_name -> stream.video.Healthcheck
	3,  // 1: stream.video.WebsocketEvent.call_ringing:type_name -> stream.video.CallRinging
	4,  // 2: stream.video.WebsocketEvent.call_created:type_name -> stream.video.CallCreated
	5,  // 3: stream.video.WebsocketEvent.call_updated:type_name -> stream.video.CallUpdated
	6,  // 4: stream.video.WebsocketEvent.call_ended:type_name -> stream.video.CallEnded
	7,  // 5: stream.video.WebsocketEvent.call_deleted:type_name -> stream.video.CallDeleted
	16, // 6: stream.video.WebsocketEvent.user_updated:type_name -> stream.video.UserUpdated
	17, // 7: stream.video.WebsocketEvent.participant_invited:type_name -> stream.video.ParticipantInvited
	18, // 8: stream.video.WebsocketEvent.participant_updated:type_name -> stream.video.ParticipantUpdated
	19, // 9: stream.video.WebsocketEvent.participant_deleted:type_name -> stream.video.ParticipantDeleted
	20, // 10: stream.video.WebsocketEvent.participant_joined:type_name -> stream.video.ParticipantJoined
	21, // 11: stream.video.WebsocketEvent.participant_left:type_name -> stream.video.ParticipantLeft
	22, // 12: stream.video.WebsocketEvent.broadcast_started:type_name -> stream.video.BroadcastStarted
	23, // 13: stream.video.WebsocketEvent.broadcast_ended:type_name -> stream.video.BroadcastEnded
	2,  // 14: stream.video.WebsocketEvent.auth_payload:type_name -> stream.video.AuthPayload
	8,  // 15: stream.video.WebsocketEvent.audio_muted:type_name -> stream.video.AudioMuted
	9,  // 16: stream.video.WebsocketEvent.audio_unmuted:type_name -> stream.video.AudioUnmuted
	10, // 17: stream.video.WebsocketEvent.video_started:type_name -> stream.video.VideoStarted
	11, // 18: stream.video.WebsocketEvent.video_stopped:type_name -> stream.video.VideoStopped
	12, // 19: stream.video.WebsocketEvent.screenshare_started:type_name -> stream.video.ScreenshareStarted
	13, // 20: stream.video.WebsocketEvent.screenshare_stopped:type_name -> stream.video.ScreenshareStopped
	14, // 21: stream.video.WebsocketEvent.recording_started:type_name -> stream.video.RecordingStarted
	15, // 22: stream.video.WebsocketEvent.recording_stopped:type_name -> stream.video.RecordingStopped
	24, // 23: stream.video.AuthPayload.user:type_name -> stream.video.CreateUserRequest
	25, // 24: stream.video.AuthPayload.device:type_name -> stream.video.DeviceRequest
	26, // 25: stream.video.CallRinging.call:type_name -> stream.video.Call
	26, // 26: stream.video.CallCreated.call:type_name -> stream.video.Call
	26, // 27: stream.video.CallUpdated.call:type_name -> stream.video.Call
	26, // 28: stream.video.CallEnded.call:type_name -> stream.video.Call
	26, // 29: stream.video.CallDeleted.call:type_name -> stream.video.Call
	26, // 30: stream.video.AudioMuted.call:type_name -> stream.video.Call
	26, // 31: stream.video.AudioUnmuted.call:type_name -> stream.video.Call
	26, // 32: stream.video.VideoStarted.call:type_name -> stream.video.Call
	26, // 33: stream.video.VideoStopped.call:type_name -> stream.video.Call
	26, // 34: stream.video.ScreenshareStarted.call:type_name -> stream.video.Call
	26, // 35: stream.video.ScreenshareStopped.call:type_name -> stream.video.Call
	26, // 36: stream.video.RecordingStarted.call:type_name -> stream.video.Call
	26, // 37: stream.video.RecordingStopped.call:type_name -> stream.video.Call
	27, // 38: stream.video.UserUpdated.user:type_name -> stream.video.User
	26, // 39: stream.video.ParticipantInvited.call:type_name -> stream.video.Call
	28, // 40: stream.video.ParticipantInvited.participant:type_name -> stream.video.Participant
	26, // 41: stream.video.ParticipantUpdated.call:type_name -> stream.video.Call
	28, // 42: stream.video.ParticipantUpdated.participant:type_name -> stream.video.Participant
	26, // 43: stream.video.ParticipantDeleted.call:type_name -> stream.video.Call
	26, // 44: stream.video.ParticipantJoined.call:type_name -> stream.video.Call
	28, // 45: stream.video.ParticipantJoined.participant:type_name -> stream.video.Participant
	26, // 46: stream.video.ParticipantLeft.call:type_name -> stream.video.Call
	28, // 47: stream.video.ParticipantLeft.participant:type_name -> stream.video.Participant
	26, // 48: stream.video.BroadcastStarted.call:type_name -> stream.video.Call
	26, // 49: stream.video.BroadcastEnded.call:type_name -> stream.video.Call
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_video_events_events_proto_init() }
func file_video_events_events_proto_init() {
	if File_video_events_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_events_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Healthcheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallRinging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallEnded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMuted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioUnmuted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenshareStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenshareStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantInvited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantJoined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_events_events_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastEnded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_events_events_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WebsocketEvent_HealthCheck)(nil),
		(*WebsocketEvent_CallRinging)(nil),
		(*WebsocketEvent_CallCreated)(nil),
		(*WebsocketEvent_CallUpdated)(nil),
		(*WebsocketEvent_CallEnded)(nil),
		(*WebsocketEvent_CallDeleted)(nil),
		(*WebsocketEvent_UserUpdated)(nil),
		(*WebsocketEvent_ParticipantInvited)(nil),
		(*WebsocketEvent_ParticipantUpdated)(nil),
		(*WebsocketEvent_ParticipantDeleted)(nil),
		(*WebsocketEvent_ParticipantJoined)(nil),
		(*WebsocketEvent_ParticipantLeft)(nil),
		(*WebsocketEvent_BroadcastStarted)(nil),
		(*WebsocketEvent_BroadcastEnded)(nil),
		(*WebsocketEvent_AuthPayload)(nil),
		(*WebsocketEvent_AudioMuted)(nil),
		(*WebsocketEvent_AudioUnmuted)(nil),
		(*WebsocketEvent_VideoStarted)(nil),
		(*WebsocketEvent_VideoStopped)(nil),
		(*WebsocketEvent_ScreenshareStarted)(nil),
		(*WebsocketEvent_ScreenshareStopped)(nil),
		(*WebsocketEvent_RecordingStarted)(nil),
		(*WebsocketEvent_RecordingStopped)(nil),
	}
	file_video_events_events_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AudioMuted_UserId)(nil),
		(*AudioMuted_AllUsers)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_events_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_video_events_events_proto_goTypes,
		DependencyIndexes: file_video_events_events_proto_depIdxs,
		MessageInfos:      file_video_events_events_proto_msgTypes,
	}.Build()
	File_video_events_events_proto = out.File
	file_video_events_events_proto_rawDesc = nil
	file_video_events_events_proto_goTypes = nil
	file_video_events_events_proto_depIdxs = nil
}
