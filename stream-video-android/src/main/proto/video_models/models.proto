syntax = "proto3";

package stream.video;

import "google/protobuf/struct.proto";
import "validate/validate.proto";

option go_package = "github.com/GetStream/video/protobuf/video_models";

// Edges are where we deploy video servers
message Edge {
  string name = 1 [(validate.rules).string.min_len = 1];
  string latency_url = 2 [(validate.rules).string.min_len = 1];
}

// TODO: to discuss. do we keep a log per call of
// - people joining
// - reactions
// - etc?
// - maybe it only makes sense when you transcribe the call

// Edges are where we deploy video servers
message EdgeServer {
  string url = 1;
}

message Latency {
  repeated float measurements_seconds = 1;
}

// 3 different type of broadcast
message Broadcast {
  string id = 1;
  oneof Details {
    RTMPBroadcast rtmp = 2;
    HLSBroadcast hls = 3;
    RecordBroadcast record = 4;
  }
}

message RTMPBroadcast {
  string call_id = 1;
  repeated string rtmpurls = 2;
  int32 width = 3;
  int32 height = 4;
}
message HLSBroadcast {

}

message File {
  string type = 1;
  bool composite = 2;
  string user_id = 3;
  string url = 4;
}

message RecordBroadcast {
  bool composite = 1; // if true merge all audio and video, if false split them
  repeated File files = 2;
}

message User {
  string id = 1 [(validate.rules).string.min_len = 1];
  repeated string teams = 2;
  string role = 3;
  google.protobuf.Struct custom = 4;
  string name = 5;
  string profile_image_url = 6;
  // user creation date as RFC3339 string
  string created_at = 7;
  // user last update date as RFC3339 string
  string updated_at = 8;
}

message UserRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
  repeated string teams = 2;
  string role = 3;
  google.protobuf.Struct custom = 4;
  string name = 5;
  string profile_image_url = 6;
}

message Device {
  string user_id = 1;
  string id = 2;
  bool disabled = 3;
  string disabled_reason = 4;
  string push_provider_name = 5;
  string created_at = 6;
  string updated_at = 7;
}

message DeviceRequest {
  string user_id = 1;
  string id = 2;
  bool disabled = 3;
  string disabled_reason = 4;
  string push_provider_name = 5;
}

enum Codec {
  CODEC_H264_UNSPECIFIED = 0;
  CODEC_VP8 = 1;
  CODEC_VP9 = 2;
}

enum RecordingStorage {
  RECORDING_STORAGE_S3_UNSPECIFIED = 0;
}

message RecordingStorageOptions {
  RecordingStorage storage = 2;
  string access_key = 3;
  string secret_key = 4;
  string bucket_name = 5;
  string region = 6;
  string path = 7;
}

message BroadcastOptions {
  string rtmp_url = 1;
  string hls_url = 2;
}

message TranscribeOptions {

}

message CallType {
  string name = 1;
  Security security = 2;

  // enable broadcasting by default when creating a call of this type
  bool broadcast = 3;
  repeated BroadcastOptions broadcast_options = 4;

  // enable transcription by default
  bool transcribe = 5;
  TranscribeOptions transcribe_options = 6;

  string created_at = 7;
  string updated_at = 8;
}

message Security {
  // TODO this is actually one of the most complex UI things in zoom :)
  // controls if regular users are allowed to do the following
  // yes/no/request
  enum IsAllowed {
    IS_ALLOWED_YES_UNSPECIFIED = 0;
    IS_ALLOWED_NO = 1;
    IS_ALLOWED_REQUEST = 2;
  }
  bool hide_profile_pictures = 1;
  IsAllowed share_screen = 2;
  bool rename_user = 3;
  IsAllowed unmute = 4;
  IsAllowed start_video = 5;
  IsAllowed screen_share = 6;
  IsAllowed record = 7;
  IsAllowed broadcast = 8;

}

// those who are online in the call
message Participant {
  string user_id = 1;
  string role = 2;
  bool online = 3;
  google.protobuf.Struct custom = 4 ;
  // call creation date as RFC3339 string
  string created_at = 5 [(validate.rules).string.min_len = 1];

  // call last update date as RFC3339 string
  string updated_at = 6 [(validate.rules).string.min_len = 1];

}

message ParticipantRequest {
  string user_id = 1;
  string role = 2;
  // call custom data
  google.protobuf.Struct custom = 3 ;
  // call creation date as RFC3339 string
  string created_at = 4 [(validate.rules).string.min_len = 1];

  // call last update date as RFC3339 string
  string updated_at = 5 [(validate.rules).string.min_len = 1];

}

message CallState {
  repeated Participant participants = 1;
}

message Call {
  // the call type
  string type = 1 [(validate.rules).string.min_len = 1];

  // the call id
  string id = 2 [(validate.rules).string.min_len = 1];

  // the id of the user that created this call
  string created_by_user_id = 3 [(validate.rules).string.min_len = 1];

  // call custom data
  google.protobuf.Struct custom = 4;

  // call creation date as RFC3339 string
  string created_at = 5 [(validate.rules).string.min_len = 1];

  // call last update date as RFC3339 string
  string updated_at = 6 [(validate.rules).string.min_len = 1];

  // enable broadcasting by default when creating a call of this type
  bool broadcast = 7;
  repeated BroadcastOptions broadcast_options = 8;

  // enable transcription by default
  bool transcribe = 9;
  TranscribeOptions transcribe_options = 10;
}