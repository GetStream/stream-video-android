// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: video/videoerr/error.proto

package videoerr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// E defines all API error codes that client can receive
// Not to be confused with Twirp error codes. Most of API errors will produce `invalid_argument` Twirp error,
// but some are mapped to more specific ones like `permission_denied` or `not_found`.
// Keep the distance of `100` between error domains, so more errors can be added in the future.
// Do not use `xxx0` codes
// Do not prefix const values with  in this enum. This proto package only contains one enum which guarantees lack of name collision.
// When the prefix is used, Go generator creates consts with E_ERROR_* which we want to avoid here
// protolint:disable:next ENUM_FIELD_NAMES_PREFIX
type E int32

const (
	// Error code is not specified
	E_UNSPECIFIED E = 0
	// Authentication token is invalid. This code is returned if none of specific error codes match
	E_AUTH_TOKEN_INVALID E = 1001
	// Authentication token is not valid yet (`nbf` claim)
	E_AUTH_TOKEN_NOT_VALID_YET E = 1002
	// Authentication token is used before its issue date (`iat` claim)
	E_AUTH_TOKEN_USED_BEFORE_ISSUE E = 1003
	// Authentication token is expired (`exp` claim)
	E_AUTH_TOKEN_EXPIRED E = 1004
	// Authentication token has invalid signature
	E_AUTH_TOKEN_INVALID_SIGNATURE E = 1005
	// API key is not provided
	E_API_KEY_NOT_PROVIDED E = 1101
	// Unknown API key is provided
	E_API_KEY_IS_UNKNOWN E = 1102
	// Permission was denied
	E_PERMISSION_DENIED E = 1201
	// Request validation failed
	E_REQUEST_VALIDATION_FAILED E = 1301
	// CallType was not found
	E_CALL_TYPE_NOT_FOUND E = 1401
	// CallType already exists
	E_CALL_TYPE_ALREADY_EXISTS     E = 1403
	E_CALL_NOT_FOUND               E = 1501
	E_CALL_ALREADY_EXISTS          E = 1502
	E_PUSH_PROVIDER_NOT_FOUND      E = 1601
	E_PUSH_DEVICE_NOT_FOUND        E = 1602
	E_USER_NOT_FOUND               E = 1701
	E_USER_ALREADY_EXISTS          E = 1702
	E_SFU_NO_DATACENTERS_AVAILABLE E = 1801
	// 19xx - Session errors
	E_SESSION_NOT_FOUND E = 1901
)

// Enum value maps for E.
var (
	E_name = map[int32]string{
		0:    "UNSPECIFIED",
		1001: "AUTH_TOKEN_INVALID",
		1002: "AUTH_TOKEN_NOT_VALID_YET",
		1003: "AUTH_TOKEN_USED_BEFORE_ISSUE",
		1004: "AUTH_TOKEN_EXPIRED",
		1005: "AUTH_TOKEN_INVALID_SIGNATURE",
		1101: "API_KEY_NOT_PROVIDED",
		1102: "API_KEY_IS_UNKNOWN",
		1201: "PERMISSION_DENIED",
		1301: "REQUEST_VALIDATION_FAILED",
		1401: "CALL_TYPE_NOT_FOUND",
		1403: "CALL_TYPE_ALREADY_EXISTS",
		1501: "CALL_NOT_FOUND",
		1502: "CALL_ALREADY_EXISTS",
		1601: "PUSH_PROVIDER_NOT_FOUND",
		1602: "PUSH_DEVICE_NOT_FOUND",
		1701: "USER_NOT_FOUND",
		1702: "USER_ALREADY_EXISTS",
		1801: "SFU_NO_DATACENTERS_AVAILABLE",
		1901: "SESSION_NOT_FOUND",
	}
	E_value = map[string]int32{
		"UNSPECIFIED":                  0,
		"AUTH_TOKEN_INVALID":           1001,
		"AUTH_TOKEN_NOT_VALID_YET":     1002,
		"AUTH_TOKEN_USED_BEFORE_ISSUE": 1003,
		"AUTH_TOKEN_EXPIRED":           1004,
		"AUTH_TOKEN_INVALID_SIGNATURE": 1005,
		"API_KEY_NOT_PROVIDED":         1101,
		"API_KEY_IS_UNKNOWN":           1102,
		"PERMISSION_DENIED":            1201,
		"REQUEST_VALIDATION_FAILED":    1301,
		"CALL_TYPE_NOT_FOUND":          1401,
		"CALL_TYPE_ALREADY_EXISTS":     1403,
		"CALL_NOT_FOUND":               1501,
		"CALL_ALREADY_EXISTS":          1502,
		"PUSH_PROVIDER_NOT_FOUND":      1601,
		"PUSH_DEVICE_NOT_FOUND":        1602,
		"USER_NOT_FOUND":               1701,
		"USER_ALREADY_EXISTS":          1702,
		"SFU_NO_DATACENTERS_AVAILABLE": 1801,
		"SESSION_NOT_FOUND":            1901,
	}
)

func (x E) Enum() *E {
	p := new(E)
	*p = x
	return p
}

func (x E) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (E) Descriptor() protoreflect.EnumDescriptor {
	return file_video_videoerr_error_proto_enumTypes[0].Descriptor()
}

func (E) Type() protoreflect.EnumType {
	return &file_video_videoerr_error_proto_enumTypes[0]
}

func (x E) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use E.Descriptor instead.
func (E) EnumDescriptor() ([]byte, []int) {
	return file_video_videoerr_error_proto_rawDescGZIP(), []int{0}
}

var File_video_videoerr_error_proto protoreflect.FileDescriptor

var file_video_videoerr_error_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x65, 0x72, 0x72,
	0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x65, 0x72, 0x72, 0x2a, 0xa3, 0x04, 0x0a, 0x01, 0x45, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x55,
	0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0xe9, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x59, 0x45, 0x54, 0x10,
	0xea, 0x07, 0x12, 0x21, 0x0a, 0x1c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x55, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x10, 0xeb, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xec, 0x07, 0x12, 0x21,
	0x0a, 0x1c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0xed,
	0x07, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x10, 0xcd, 0x08, 0x12, 0x17, 0x0a, 0x12,
	0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x49, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0xce, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xb1, 0x09, 0x12, 0x1e, 0x0a,
	0x19, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x95, 0x0a, 0x12, 0x18, 0x0a,
	0x13, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0xf9, 0x0a, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x41, 0x4c, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x53, 0x10, 0xfb, 0x0a, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xdd, 0x0b, 0x12, 0x18, 0x0a, 0x13, 0x43,
	0x41, 0x4c, 0x4c, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x53, 0x10, 0xde, 0x0b, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0xc1, 0x0c, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc2, 0x0c, 0x12,
	0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0xa5, 0x0d, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xa6, 0x0d, 0x12, 0x21,
	0x0a, 0x1c, 0x53, 0x46, 0x55, 0x5f, 0x4e, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x43, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x89,
	0x0e, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xed, 0x0e, 0x42, 0x0a, 0x5a, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x65, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_videoerr_error_proto_rawDescOnce sync.Once
	file_video_videoerr_error_proto_rawDescData = file_video_videoerr_error_proto_rawDesc
)

func file_video_videoerr_error_proto_rawDescGZIP() []byte {
	file_video_videoerr_error_proto_rawDescOnce.Do(func() {
		file_video_videoerr_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_videoerr_error_proto_rawDescData)
	})
	return file_video_videoerr_error_proto_rawDescData
}

var file_video_videoerr_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_video_videoerr_error_proto_goTypes = []interface{}{
	(E)(0), // 0: stream.video.videoerr.E
}
var file_video_videoerr_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_video_videoerr_error_proto_init() }
func file_video_videoerr_error_proto_init() {
	if File_video_videoerr_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_videoerr_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_video_videoerr_error_proto_goTypes,
		DependencyIndexes: file_video_videoerr_error_proto_depIdxs,
		EnumInfos:         file_video_videoerr_error_proto_enumTypes,
	}.Build()
	File_video_videoerr_error_proto = out.File
	file_video_videoerr_error_proto_rawDesc = nil
	file_video_videoerr_error_proto_goTypes = nil
	file_video_videoerr_error_proto_depIdxs = nil
}
