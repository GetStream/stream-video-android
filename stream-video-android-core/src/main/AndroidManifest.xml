<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (c) 2023 Stream.io Inc. All rights reserved.

     Licensed under the Stream License;
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          https://github.com/GetStream/stream-video-android/blob/main/LICENSE

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    >

    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" />
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />

    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />

    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MICROPHONE" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <application>

        <provider
            android:name="io.getstream.android.push.delegate.PushDelegateProvider"
            android:authorities="${applicationId}.io.getstream.android.push"
            android:exported="false"
            tools:node="merge">

            <meta-data
                android:name="io.getstream.video.android.core.notifications.internal.VideoPushDelegate"
                android:value="io.getstream.android.push.PushDelegate" />
        </provider>

        <receiver
            android:name=".notifications.internal.receivers.RejectCallBroadcastReceiver"
            android:exported="false">
            <intent-filter android:priority="-1">
                <action android:name="io.getstream.video.android.action.REJECT_CALL" />
            </intent-filter>
        </receiver>
        <receiver
            android:name=".notifications.internal.receivers.LeaveCallBroadcastReceiver"
            android:exported="false">
            <intent-filter android:priority="-1">
                <action android:name="io.getstream.video.android.action.LEAVE_CALL" />
            </intent-filter>
        </receiver>
        <activity android:name=".notifications.internal.DismissNotificationActivity" />

        <receiver android:name=".notifications.internal.receivers.StopScreenshareBroadcastReceiver"
            android:exported="false">
            <intent-filter android:priority="-1">
                <action android:name="io.getstream.video.android.action.CANCEL_SCREEN_SHARE" />
            </intent-filter>
        </receiver>


        <service
            android:name=".notifications.internal.service.OngoingCallService"
            android:foregroundServiceType="microphone" />

        <service android:name=".screenshare.StreamScreenShareService"
            android:foregroundServiceType="mediaProjection"/>
    </application>
</manifest>